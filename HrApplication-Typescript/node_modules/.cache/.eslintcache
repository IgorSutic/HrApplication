[{"/home/igor/welcomedev-react-starter/src/index.tsx":"1","/home/igor/welcomedev-react-starter/src/App.tsx":"2","/home/igor/welcomedev-react-starter/src/components/layout.tsx":"3","/home/igor/welcomedev-react-starter/src/components/signIn.tsx":"4","/home/igor/welcomedev-react-starter/src/components/services.tsx":"5","/home/igor/welcomedev-react-starter/src/components/Login.tsx":"6","/home/igor/welcomedev-react-starter/src/components/Register.tsx":"7","/home/igor/welcomedev-react-starter/src/components/GoogleCalendar.tsx":"8","/home/igor/welcomedev-react-starter/src/components/GoogleLogin.tsx":"9","/home/igor/welcomedev-react-starter/src/components/MainPage.tsx":"10","/home/igor/welcomedev-react-starter/src/components/ListItems.tsx":"11","/home/igor/welcomedev-react-starter/src/calendar/Calendar.tsx":"12","/home/igor/welcomedev-react-starter/src/calendar/event-utils.ts":"13","/home/igor/welcomedev-react-starter/src/LoginGoogle/Login.tsx":"14","/home/igor/welcomedev-react-starter/src/LoginGoogle/utils/refreshToken.tsx":"15"},{"size":693,"mtime":1634895329553,"results":"16","hashOfConfig":"17"},{"size":2820,"mtime":1634827872710,"results":"18","hashOfConfig":"17"},{"size":2675,"mtime":1633601495285,"results":"19","hashOfConfig":"17"},{"size":4138,"mtime":1634829475636,"results":"20","hashOfConfig":"17"},{"size":1171,"mtime":1634901205871,"results":"21","hashOfConfig":"17"},{"size":1082,"mtime":1634647968455,"results":"22","hashOfConfig":"17"},{"size":4154,"mtime":1634046757191,"results":"23","hashOfConfig":"17"},{"size":9446,"mtime":1634638511925,"results":"24","hashOfConfig":"17"},{"size":4328,"mtime":1634908823400,"results":"25","hashOfConfig":"17"},{"size":6384,"mtime":1634806700916,"results":"26","hashOfConfig":"17"},{"size":2166,"mtime":1634807254966,"results":"27","hashOfConfig":"17"},{"size":2011,"mtime":1634826994397,"results":"28","hashOfConfig":"17"},{"size":435,"mtime":1634725634205,"results":"29","hashOfConfig":"17"},{"size":947,"mtime":1634827660893,"results":"30","hashOfConfig":"17"},{"size":667,"mtime":1634827537188,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1gwbrbh",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/igor/welcomedev-react-starter/src/index.tsx",[],["69","70"],"/home/igor/welcomedev-react-starter/src/App.tsx",["71","72","73","74","75","76","77","78","79","80"],"import React from 'react';\nimport { useState } from 'react';\nimport './App.css';\n// import Header from './components/Header';\nimport SimpleDialogDemo from './components/layout';\nimport { createUser } from './components/services';\nimport SignInSide from './components/signIn';\nimport { useCookies } from \"react-cookie\";\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Login } from './components/Login';\nimport SignUp from './components/Register';\nimport GoogleCalendar from './components/GoogleCalendar';\n\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport { useTheme, ThemeProvider, createTheme } from '@mui/material/styles';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport DashboardContent from './components/MainPage';\nimport CalendarHR from './calendar/Calendar';\n\n\nconst ColorModeContext = React.createContext({ toggleColorMode: () => {} });\n\nfunction MyApp() {\n  const theme = useTheme();\n  const colorMode = React.useContext(ColorModeContext);\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        bgcolor: 'background.default',\n        color: 'text.primary',\n        borderRadius: 1,\n        p: 3,\n      }}\n    >\n      {theme.palette.mode} mode\n      <IconButton sx={{ ml: 1 }} onClick={colorMode.toggleColorMode} color=\"inherit\">\n        {theme.palette.mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n      </IconButton>\n    </Box>\n  );\n}\n\nfunction App() {\n\n  \n\n  const [mode, setMode] = React.useState<'light' | 'dark'>('light');\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n      },\n    }),\n    [],\n  );\n\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n        },\n      }),\n    [mode],\n  );\n\n\n  return (\n    \n\n    <div className=\"App\">      \n    {/* <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}> </ThemeProvider> */}\n        <BrowserRouter>\n          {/* <ColorModeContext.Provider value={colorMode}>\n            <ThemeProvider theme={theme}>  */}\n            {/* <MyApp /> */}\n            <Route exact path='/login' component={Login} />\n            <Route exact path='/main' component={DashboardContent} />\n            <Route exact path='/register' component={SignUp} />\n            <Route exact path='/calendar' component={CalendarHR} />\n            {/* </ThemeProvider>\n          </ColorModeContext.Provider> */}\n        </BrowserRouter>\n      {/* </ThemeProvider>\n    </ColorModeContext.Provider> */}\n     \n    </div>\n    \n    \n  );\n}\n\nexport default App;\n","/home/igor/welcomedev-react-starter/src/components/layout.tsx",[],"/home/igor/welcomedev-react-starter/src/components/signIn.tsx",[],"/home/igor/welcomedev-react-starter/src/components/services.tsx",[],"/home/igor/welcomedev-react-starter/src/components/Login.tsx",["81"],"import React from 'react'\nimport { useState } from 'react'\nimport { useCookies } from 'react-cookie'\nimport { createUser } from './services'\nimport SignInSide from './signIn'\nimport {useHistory} from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nexport const Login = () => {\n\n    const [username, setUsername] = useState<string>(\"\")\n    const [password, setPassword] = useState<string>(\"\")\n    const [token, setToken] = useCookies<string>(['tokens'])\n\n    // const [token, setToken, removeToken] = useCookies(['tokens'])\n    let history = useHistory()\n\n    // useEffect(() => {\n    //         if(!token['tokens']) {\n    //             history.push('/main')\n    //         }\n    // }, [token])\n\n\n    const postUser = async () => {\n        await createUser(username, password).then(resp => setToken('tokens',resp.token))\n        history.push('/main')\n\n        console.log(token)\n    }\n\n    return (\n        <div>\n            <SignInSide username={username} setUsername={setUsername} password={password} setPassword={setPassword} postUser={postUser}/>\n        </div>\n    )\n}\n","/home/igor/welcomedev-react-starter/src/components/Register.tsx",[],"/home/igor/welcomedev-react-starter/src/components/GoogleCalendar.tsx",["82","83","84","85","86"],"//---------------------------------------------\n\n// import 'whatwg-fetch';\n// import React from 'react';\n// import Scheduler from 'devextreme-react/scheduler';\n// import CustomStore from 'devextreme/data/custom_store';\n\n// function getData(_:any, requestOptions:any) {\n\n//   const PUBLIC_KEY = 'AIzaSyBnNAISIUKe6xdhq1_rjor2rxoI3UlMY7k',\n//     CALENDAR_ID = 'f7jnetm22dsjc3npc2lu3buvu4@group.calendar.google.com';\n//   const dataUrl = [ 'https://www.googleapis.com/calendar/v3/calendars/',\n//     CALENDAR_ID, '/events?key=', PUBLIC_KEY].join('');\n\n//   return fetch(dataUrl, requestOptions).then(\n//     (response) => response.json()\n//   ).then((data) => data.items);\n// }\n\n// const dataSource = new CustomStore({\n//   load: (options) => getData(options, { showDeleted: false })\n// });\n\n// const currentDate = new Date();\n// const views:any = ['day', 'workWeek', 'month'];\n\n// class GoogleCalendar extends React.Component {\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <div className=\"long-title\">\n//           <h3>QCerris</h3>\n//         </div>\n//         <Scheduler\n//           dataSource={dataSource}\n//           views={views}\n//           defaultCurrentView=\"workWeek\"\n//           defaultCurrentDate={currentDate}\n//           height={500}\n//           startDayHour={7}\n//           editing={false}\n//           showAllDayPanel={false}\n//           startDateExpr=\"start.dateTime\"\n//           endDateExpr=\"end.dateTime\"\n//           textExpr=\"summary\"\n//           timeZone=\"Europe/Belgrade\" />\n//       </React.Fragment>\n\n//     );\n//   }\n// }\n\n// export default GoogleCalendar;\n\n// import * as React from 'react';\n// import Button from '@mui/material/Button';\n// import { DatePicker, MuiPickersUtilsProvider,} from '@material-ui/pickers';\n// import DateFnsUtils from '@date-io/date-fns';\n\n\n// export default function CustomInput() {\n//     const [selectedDate, handleDateChange] = React.useState<Date | null | number|any>(new Date());\n//     const [selectedDate1, handleDateChange1] = React.useState<Date | null | number|any>(new Date());\n\n//     // const [value1, setValue1] = React.useState<Date | null | number|any>(new Date());\n\n//     function getDifferenceInDays(date1: number | Date | any, date2: number | Date | any) {\n//         const diffInMs = Math.abs(date2 - date1);\n//         return diffInMs / (1000 * 60 * 60 * 24);\n//     }\n\n//     return (\n//         <div>\n//             <div>\n//                 <MuiPickersUtilsProvider utils={DateFnsUtils}>\n//                     <DatePicker value={selectedDate} onChange={handleDateChange} />\n//                     <DatePicker value={selectedDate1} onChange={handleDateChange1} />\n//                 </MuiPickersUtilsProvider>\n//             </div>\n//             <br/>\n//             <div>\n//                 {getDifferenceInDays(selectedDate.getTime(),selectedDate1.getTime()) ?  \n//                     <Button variant=\"contained\" color=\"success\" > Submit </Button> \n//                     : \n//                     <Button variant=\"contained\" color=\"error\"> Error </Button>\n//                 }\n//             </div>\n//             <div>\n              \n//             </div>\n//         </div>\n//     );\n// }\n\n//------------------------------------------------------------------------------------\n\nimport React from 'react';\n// import './App.css';\nimport { DateRangePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport format from \"date-fns/format\";\nimport getDay from \"date-fns/getDay\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n// import DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useState } from 'react';\n// import 'react-big-calendar/lib/sass/styles';\n\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport DateRangePicker, { DateRange } from '@mui/lab/DateRangePicker';\nimport addWeeks from 'date-fns/addWeeks';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\n\n\n//------------------------------------------------------------------\n\ninterface Props{\n    title?:string,\n    start: Date  ,\n    end?:Date ,\n    allDay?: boolean | null\n}\n\nconst locales = {\n    \"en-US\": require(\"date-fns/locale/en-US\"),\n};\n\nconst localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales,\n});\n\nconst events : Props[] = [\n    {\n        title: \"Big Meeting\",\n        allDay: true,\n        start: new Date(2021, 10, 0),\n        end: new Date(2021, 10, 0),\n    },\n    {\n        title: \"Vacation\",\n        start: new Date(2021, 11, 7),\n        end: new Date(2021, 11, 10),\n    },\n    {\n        title: \"Conference\",\n        start: new Date(2021, 10, 20),\n        end: new Date(2021, 10, 23),\n    },\n];\n\n// function getWeeksAfter(date: Date | null, amount: number) {\n//   return date ? addWeeks(date, amount) : undefined;\n// }\n\n//-----------------------------------------------------------------------------\n\nfunction GoogleCalendar() {\n  \n    // const startValue: Date = new Date(new Date().getFullYear(), new Date().getMonth(), 14);\n    // const endValue: Date = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 15);\n    // const minDate: Date = new Date(new Date().getFullYear(), new Date().getMonth(), 8);\n    // const maxDate: Date = new Date(new Date().getFullYear(), new Date().getMonth()+1, 20);\n  \n    const [value, setValue] = React.useState<Date | any>(new Date());\n    const [value0, setValue0] = React.useState<Date | any>(new Date());\n\n    // const [value1, setValue1] = React.useState<DateRange<Date>>([null, null]);\n\n\n\n    const [newEvent, setNewEvent] = useState({title:\"\", start:new Date(), end: new Date()})\n    const [allEvents, setAllEvents] = useState(events)\n\n    function handleEvent(){\n        setAllEvents([...allEvents, newEvent])\n    }\n\n    return (\n        <div>\n        {/* <DateRangePickerComponent placeholder=\"Enter Date Range\"\n        startDate={startValue}\n        endDate={endValue}\n        min={minDate}\n        max={maxDate}\n        minDays={3}\n        maxDays={5}\n        format=\"dd-MMM-yy\"\n        onChange={(start : Date) => setNewEvent({ ...newEvent, start })}\n        //Uncomment below code to show month range picker. Also comment the properties min, max, mindays and maxdays\n        // start=\"Year\"\n        // depth=\"Year\"\n        ></DateRangePickerComponent> */}\n\n        {/* Prvi datepicker: //style={{ marginRight: \"10px\" }} */}\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <div>\n                <DatePicker\n                    disablePast\n                    label=\"Start date\"\n                    value={value}\n                    onChange={(value) => {\n                        setValue(value)\n                        setNewEvent({ ...newEvent, start:value })}} \n                    renderInput={(params) => <TextField {...params} />}\n                />\n            </div>\n            <br/>\n            <div>\n                <DatePicker\n                    disablePast\n                    label=\"End date\"\n                    value={value0}\n                    onChange={(value0) => {\n                        setValue0(value0)\n                        setNewEvent({ ...newEvent, end:value0 })}} \n                    renderInput={(params) => <TextField {...params} />}\n                />\n            </div>\n\n             {/* <DateRangePicker\n                disablePast\n                value={value1}\n                maxDate={getWeeksAfter(value[0], 4)}\n                onChange={(newValue) => {\n                    setValue1(newValue);\n                    // setNewEvent({ ...newEvent, newValue })}} \n\n                }} */}\n                {/* renderInput={(startProps, endProps) => (\n                <React.Fragment>\n                    {/* setNewEvent([ ...newEvent, {startProps, endProps}])  */}\n                    {/* <TextField {...startProps} />\n                    <Box sx={{ mx: 2 }}> to </Box>\n                    <TextField {...endProps} />\n                </React.Fragment> */}\n                \n            {/* /> */}\n\n        </LocalizationProvider>\n        <br/>\n        <div>\n            {/* <input type=\"text\" placeholder=\"Add Title\" style={{ width: \"20%\", marginRight: \"10px\" }} value={newEvent.title} onChange={(e) => setNewEvent({ ...newEvent, title: e.target.value })} /> */}\n            {/* <DatePicker placeholderText=\"Start Date\"  selected={newEvent.start} onChange={(start : Date) => setNewEvent({ ...newEvent, start })} />\n            <DatePicker placeholderText=\"End Date\" selected={newEvent.end} onChange={(end : Date) => setNewEvent({ ...newEvent, end })} /> */}\n{/*             \n            <button  style={{ marginTop: \"10px\" }} onClick={handleEvent}>\n                Add Event\n            </button> */}\n            <div>\n                <Button variant=\"contained\" size=\"large\" onClick={handleEvent}>\n                    Submit\n                </Button>\n            </div>\n        </div>\n        <Calendar localizer={localizer} events={allEvents} startAccessor=\"start\" endAccessor=\"end\" style={{height: 500, margin:\"50px\"}} />\n        </div>\n    );\n}\n\nexport default GoogleCalendar;",["87","88"],"/home/igor/welcomedev-react-starter/src/components/GoogleLogin.tsx",["89","90"],"/home/igor/welcomedev-react-starter/src/components/MainPage.tsx",["91","92","93"],"import * as React from 'react';\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiDrawer from '@mui/material/Drawer';\nimport Box from '@mui/material/Box';\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Badge from '@mui/material/Badge';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Link from '@mui/material/Link';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport { mainListItems, secondaryListItems } from './ListItems';\n\n// import Chart from './Chart';\n// import Deposits from './Deposits';\n// import Orders from './Orders';\n\nfunction Copyright(props: any) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://qcerris.com/\">\n        QCerris\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth: number = 240;\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nconst AppBar = styled(MuiAppBar, {\n\n  shouldForwardProp: (prop) => prop !== 'open',\n})<AppBarProps>(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create(['width', 'margin'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n  ({ theme, open }) => ({\n    '& .MuiDrawer-paper': {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      boxSizing: 'border-box',\n      ...(!open && {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n          width: theme.spacing(9),\n        },\n      }),\n    },\n  }),\n);\n\nconst mdTheme = createTheme();\n\nfunction DashboardContent() {\n  const [open, setOpen] = React.useState(false);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <ThemeProvider theme={mdTheme}>\n      <Box sx={{ display: 'flex' }}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" open={open}>\n          <Toolbar\n            sx={{\n              pr: '24px', // keep right padding when drawer closed\n            }}\n          >\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={toggleDrawer}\n              sx={{\n                marginRight: '36px',\n                ...(open && { display: 'none' }),\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              Dashboard\n            </Typography>\n            <IconButton color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\" open={open}>\n          <Toolbar\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'flex-end',\n              px: [1],\n            }}\n          >\n            <IconButton onClick={toggleDrawer}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </Toolbar>\n          <Divider />\n          <List>{mainListItems}</List>\n          <Divider />\n          <List>{secondaryListItems}</List>\n        </Drawer>\n        <Box\n          component=\"main\"\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === 'light'\n                ? theme.palette.grey[100]\n                : theme.palette.grey[900],\n            flexGrow: 1,\n            height: '100vh',\n            overflow: 'auto',\n          }}\n        >\n          <Toolbar />\n          {/* <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n            <Grid container spacing={3}>\n              {/* Chart */}\n              {/* <Grid item xs={12} md={8} lg={9}>\n                <Paper\n                  sx={{\n                    p: 2,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: 240,\n                  }}\n                >\n                  <Chart />\n                </Paper>\n              </Grid> */}\n              {/* Recent Deposits */}\n              {/* <Grid item xs={12} md={4} lg={3}>\n                <Paper\n                  sx={{\n                    p: 2,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: 240,\n                  }}\n                >\n                  <Deposits />\n                </Paper>\n              </Grid>\n              Recent Orders\n              <Grid item xs={12}>\n                <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\n                  <Orders />\n                </Paper>\n              </Grid>\n            </Grid>\n            <Copyright sx={{ pt: 4 }} />\n          </Container> */}\n          <Copyright sx={{ pt: 4 }} />\n        </Box> \n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default DashboardContent","/home/igor/welcomedev-react-starter/src/components/ListItems.tsx",[],"/home/igor/welcomedev-react-starter/src/calendar/Calendar.tsx",["94","95","96","97"],"import React, {useState} from \"react\";\nimport {useForm, Controller, SubmitHandler} from 'react-hook-form';\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\"\n// import DatePicker from \"react-modern-calendar-datepicker\";\nimport { Calendar, DayValue, DayRange, Day, utils} from \"react-modern-calendar-datepicker\";\nimport '../App.css';\n\n\nexport default function ModernCalendar()\n{\n    const {handleSubmit}=useForm<DayRange>();\n\n    const [dayRange, setDayRange] = useState<DayRange>({\n        from: null,\n        to: null\n    });\n    \n    const submitSickLeave:SubmitHandler<DayRange>=()=>{\n        console.log(dayRange.from);\n        console.log(dayRange.to);\n    }\n    return<form onSubmit={handleSubmit(submitSickLeave)}>\n        <Calendar\n            calendarClassName=\"App\"\n            value={dayRange}\n            onChange={setDayRange}\n            // minimumDate={utils(new Date().toDateString()).getToday()}\n            // minimumDate={new Date()}\n            colorPrimary=\"#0FBCF9\"\n            colorPrimaryLight=\"rgba(75, 207, 250, 0.4)\"\n           shouldHighlightWeekends\n        />\n        <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={() => {\n              setDayRange({\n                  from: null,\n                  to: null\n              })\n            }}\n            style={{\n                color: \"white\",\n                borderRadius: '0.5rem',\n                padding: '1rem 3rem',\n                borderColor: \"white\",\n                backgroundColor: \"#425F9C\",\n                fontSize: 17\n              }}\n          >\n            Reset\n        </button>\n        <button \n            type=\"submit\"\n            style={{\n                color: \"white\",\n                borderRadius: '0.5rem',\n                padding: '1rem 3rem',\n                borderColor: \"white\",\n                backgroundColor: \"#425F9C\",\n                fontSize: 17\n              }}\n        >\n            Confrim Sick Leave\n        </button>\n    </form>\n}\n\n","/home/igor/welcomedev-react-starter/src/calendar/event-utils.ts",[],"/home/igor/welcomedev-react-starter/src/LoginGoogle/Login.tsx",[],"/home/igor/welcomedev-react-starter/src/LoginGoogle/utils/refreshToken.tsx",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":18},{"ruleId":"102","severity":1,"message":"106","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":24},{"ruleId":"102","severity":1,"message":"107","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":20},{"ruleId":"102","severity":1,"message":"108","line":7,"column":8,"nodeType":"104","messageId":"105","endLine":7,"endColumn":18},{"ruleId":"102","severity":1,"message":"109","line":8,"column":10,"nodeType":"104","messageId":"105","endLine":8,"endColumn":20},{"ruleId":"102","severity":1,"message":"110","line":12,"column":8,"nodeType":"104","messageId":"105","endLine":12,"endColumn":22},{"ruleId":"102","severity":1,"message":"111","line":16,"column":20,"nodeType":"104","messageId":"105","endLine":16,"endColumn":33},{"ruleId":"102","severity":1,"message":"112","line":25,"column":10,"nodeType":"104","messageId":"105","endLine":25,"endColumn":15},{"ruleId":"102","severity":1,"message":"113","line":54,"column":9,"nodeType":"104","messageId":"105","endLine":54,"endColumn":18},{"ruleId":"102","severity":1,"message":"114","line":63,"column":9,"nodeType":"104","messageId":"105","endLine":63,"endColumn":14},{"ruleId":"102","severity":1,"message":"115","line":7,"column":10,"nodeType":"104","messageId":"105","endLine":7,"endColumn":19},{"ruleId":"102","severity":1,"message":"116","line":99,"column":10,"nodeType":"104","messageId":"105","endLine":99,"endColumn":34},{"ruleId":"102","severity":1,"message":"117","line":115,"column":8,"nodeType":"104","messageId":"105","endLine":115,"endColumn":23},{"ruleId":"102","severity":1,"message":"118","line":115,"column":27,"nodeType":"104","messageId":"105","endLine":115,"endColumn":36},{"ruleId":"102","severity":1,"message":"119","line":116,"column":8,"nodeType":"104","messageId":"105","endLine":116,"endColumn":16},{"ruleId":"102","severity":1,"message":"120","line":117,"column":8,"nodeType":"104","messageId":"105","endLine":117,"endColumn":11},{"ruleId":"98","replacedBy":"121"},{"ruleId":"100","replacedBy":"122"},{"ruleId":"102","severity":1,"message":"123","line":126,"column":17,"nodeType":"104","messageId":"105","endLine":126,"endColumn":26},{"ruleId":"102","severity":1,"message":"124","line":128,"column":8,"nodeType":"104","messageId":"105","endLine":128,"endColumn":19},{"ruleId":"102","severity":1,"message":"125","line":13,"column":8,"nodeType":"104","messageId":"105","endLine":13,"endColumn":17},{"ruleId":"102","severity":1,"message":"126","line":14,"column":8,"nodeType":"104","messageId":"105","endLine":14,"endColumn":12},{"ruleId":"102","severity":1,"message":"127","line":15,"column":8,"nodeType":"104","messageId":"105","endLine":15,"endColumn":13},{"ruleId":"102","severity":1,"message":"128","line":2,"column":18,"nodeType":"104","messageId":"105","endLine":2,"endColumn":28},{"ruleId":"102","severity":1,"message":"129","line":5,"column":20,"nodeType":"104","messageId":"105","endLine":5,"endColumn":28},{"ruleId":"102","severity":1,"message":"130","line":5,"column":40,"nodeType":"104","messageId":"105","endLine":5,"endColumn":43},{"ruleId":"102","severity":1,"message":"131","line":5,"column":45,"nodeType":"104","messageId":"105","endLine":5,"endColumn":50},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'SimpleDialogDemo' is defined but never used.","'createUser' is defined but never used.","'SignInSide' is defined but never used.","'useCookies' is defined but never used.","'GoogleCalendar' is defined but never used.","'ThemeProvider' is defined but never used.","'MyApp' is defined but never used.","'colorMode' is assigned a value but never used.","'theme' is assigned a value but never used.","'useEffect' is defined but never used.","'DateRangePickerComponent' is defined but never used.","'DateRangePicker' is defined but never used.","'DateRange' is defined but never used.","'addWeeks' is defined but never used.","'Box' is defined but never used.",["132"],["133"],"'Component' is defined but never used.","'googleLogin' is defined but never used.","'Container' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'Controller' is defined but never used.","'DayValue' is defined but never used.","'Day' is defined but never used.","'utils' is defined but never used.","no-global-assign","no-unsafe-negation"]