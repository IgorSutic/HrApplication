{"ast":null,"code":"var _jsxFileName = \"/home/igor/welcomedev-react-starter/src/calendar/Calendar.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Calendar() {\n  _s();\n\n  const [state, setState] = useState({\n    selection: {\n      startDate: new Date(),\n      endDate: new Date(),\n      key: 'selection'\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(DateRange, {\n    editableDateInputs: true,\n    onChange: item => setState({ ...state,\n      ...item\n    }),\n    moveRangeOnFirstSelection: false,\n    ranges: [state.selection]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this); // const [state, setState] = useState({\n  //     selection: {\n  //         startDate: new Date(),\n  //         endDate: new Date(),\n  //         key: 'selection'\n  //     },\n  //     // compare: {\n  //     //     startDate: new Date(),\n  //     //     endDate: addDays(new Date(), 3),\n  //     //     key: 'compare'\n  //     // }\n  //     });\n  // return (\n  //     <DateRangePicker\n  //         onChange={item => setState({ ...state, ...item })}\n  //         months={1}\n  //         minDate={addDays(new Date(), -300)}\n  //         maxDate={addDays(new Date(), 900)}\n  //         direction=\"vertical\"\n  //         scroll={{ enabled: true }}\n  //         ranges={[state.selection]}\n  //     />\n  //     );\n}\n\n_s(Calendar, \"RR2j0+gqc3smGDvX/wDbNJEmBAU=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/igor/welcomedev-react-starter/src/calendar/Calendar.tsx"],"names":["useState","DateRange","Calendar","state","setState","selection","startDate","Date","endDate","key","item"],"mappings":";;;AAAA,SAAkCA,QAAlC,QAAiD,OAAjD;AACA,SAASC,SAAT,QAA0C,kBAA1C;AACA,OAAO,kCAAP;AACA,OAAO,yCAAP;;;AAIA,SAASC,QAAT,GAAmB;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC;AAC/BK,IAAAA,SAAS,EAAE;AACPC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,EADJ;AAEPC,MAAAA,OAAO,EAAE,IAAID,IAAJ,EAFF;AAGPE,MAAAA,GAAG,EAAE;AAHE;AADoB,GAAD,CAAlC;AAQA,sBACI,QAAC,SAAD;AACA,IAAA,kBAAkB,EAAE,IADpB;AAEA,IAAA,QAAQ,EAAEC,IAAI,IAAIN,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,SAAGO;AAAf,KAAD,CAF1B;AAGA,IAAA,yBAAyB,EAAE,KAH3B;AAIA,IAAA,MAAM,EAAE,CAACP,KAAK,CAACE,SAAP;AAJR;AAAA;AAAA;AAAA;AAAA,UADJ,CATe,CAkBf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;GA1CQH,Q;;KAAAA,Q;AA4CT,eAAeA,QAAf","sourcesContent":["import {Dispatch, SetStateAction, useState} from 'react';\nimport { DateRange ,DateRangePicker} from 'react-date-range';\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\nimport { addDays } from 'date-fns';\n\n\nfunction Calendar(){\n    const [state, setState] = useState({\n        selection: {\n            startDate: new Date(),\n            endDate: new Date(),\n            key: 'selection'\n        }\n        });\n    \n    return(\n        <DateRange\n        editableDateInputs={true}\n        onChange={item => setState({ ...state, ...item })}\n        moveRangeOnFirstSelection={false}\n        ranges={[state.selection]}\n        />\n    );\n\n    // const [state, setState] = useState({\n    //     selection: {\n    //         startDate: new Date(),\n    //         endDate: new Date(),\n    //         key: 'selection'\n    //     },\n    //     // compare: {\n    //     //     startDate: new Date(),\n    //     //     endDate: addDays(new Date(), 3),\n    //     //     key: 'compare'\n    //     // }\n    //     });\n\n    // return (\n    //     <DateRangePicker\n    //         onChange={item => setState({ ...state, ...item })}\n    //         months={1}\n    //         minDate={addDays(new Date(), -300)}\n    //         maxDate={addDays(new Date(), 900)}\n    //         direction=\"vertical\"\n    //         scroll={{ enabled: true }}\n    //         ranges={[state.selection]}\n    //     />\n    //     );\n}\n\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}