{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/time_panel/layout.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"allDayPanelVisible\", \"className\", \"groupOrientation\", \"timeCellTemplate\", \"timePanelData\"];\nimport { createFragment, createComponentVNode, normalizeProps } from \"inferno\";\nimport { Fragment } from \"inferno\";\nimport { InfernoWrapperComponent } from \"@devextreme/vdom\";\nimport { Row } from \"../row\";\nimport { TimePanelCell as Cell } from \"./cell\";\nimport { CellBase } from \"../cell\";\nimport { getKeyByGroup, getIsGroupedAllDayPanel, isVerticalGroupOrientation } from \"../../utils\";\nimport { Table } from \"../table\";\nimport { AllDayPanelTitle } from \"../date_table/all_day_panel/title\";\nexport var viewFunction = _ref => {\n  var {\n    bottomVirtualRowHeight: bottomVirtualRowHeight,\n    isVerticalGroupOrientation: isVerticalGrouping,\n    props: {\n      groupOrientation: groupOrientation,\n      timeCellTemplate: timeCellTemplate,\n      timePanelData: timePanelData\n    },\n    restAttributes: restAttributes,\n    topVirtualRowHeight: topVirtualRowHeight\n  } = _ref;\n  return normalizeProps(createComponentVNode(2, Table, _extends({}, restAttributes, {\n    topVirtualRowHeight: topVirtualRowHeight,\n    bottomVirtualRowHeight: bottomVirtualRowHeight,\n    virtualCellsCount: 1,\n    className: \"dx-scheduler-time-panel\",\n    children: timePanelData.groupedData.map((_ref2, index) => {\n      var {\n        dateTable: dateTable,\n        groupIndex: groupIndex\n      } = _ref2;\n      return createFragment([getIsGroupedAllDayPanel(timePanelData, index) && createComponentVNode(2, Row, {\n        children: createComponentVNode(2, CellBase, {\n          className: \"dx-scheduler-time-panel-title-cell\",\n          children: createComponentVNode(2, AllDayPanelTitle)\n        })\n      }), dateTable.map(cell => {\n        var {\n          cellCountInGroupRow: cellCountInGroupRow\n        } = timePanelData;\n        var {\n          groups: groups,\n          index: cellIndex,\n          isFirstGroupCell: isFirstGroupCell,\n          isLastGroupCell: isLastGroupCell,\n          key: key,\n          startDate: startDate,\n          text: text\n        } = cell;\n        return createComponentVNode(2, Row, {\n          className: \"dx-scheduler-time-panel-row\",\n          children: createComponentVNode(2, Cell, {\n            startDate: startDate,\n            text: text,\n            groups: isVerticalGrouping ? groups : void 0,\n            groupIndex: isVerticalGrouping ? groupIndex : void 0,\n            isFirstGroupCell: isVerticalGrouping && isFirstGroupCell,\n            isLastGroupCell: isVerticalGrouping && isLastGroupCell,\n            index: Math.floor(cellIndex / cellCountInGroupRow),\n            timeCellTemplate: timeCellTemplate\n          })\n        }, key);\n      })], 0, getKeyByGroup(groupIndex, groupOrientation));\n    })\n  })));\n};\nexport var TimePanelTableLayoutProps = {\n  className: \"\",\n  allDayPanelVisible: false,\n  timePanelData: {\n    groupedData: [],\n    cellCountInGroupRow: 0,\n    leftVirtualCellCount: 0,\n    rightVirtualCellCount: 0,\n    topVirtualRowCount: 0,\n    bottomVirtualRowCount: 0\n  }\n};\n\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\n\nexport class TimePanelTableLayout extends InfernoWrapperComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  get topVirtualRowHeight() {\n    return this.props.timePanelData.topVirtualRowHeight || 0;\n  }\n\n  get bottomVirtualRowHeight() {\n    return this.props.timePanelData.bottomVirtualRowHeight || 0;\n  }\n\n  get isVerticalGroupOrientation() {\n    var {\n      groupOrientation: groupOrientation\n    } = this.props;\n    return isVerticalGroupOrientation(groupOrientation);\n  }\n\n  get restAttributes() {\n    var _this$props = this.props,\n        restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return restProps;\n  }\n\n  render() {\n    var props = this.props;\n    return viewFunction({\n      props: _extends({}, props, {\n        timeCellTemplate: getTemplate(props.timeCellTemplate)\n      }),\n      topVirtualRowHeight: this.topVirtualRowHeight,\n      bottomVirtualRowHeight: this.bottomVirtualRowHeight,\n      isVerticalGroupOrientation: this.isVerticalGroupOrientation,\n      restAttributes: this.restAttributes\n    });\n  }\n\n}\nTimePanelTableLayout.defaultProps = _extends({}, TimePanelTableLayoutProps);","map":{"version":3,"sources":["/home/igor/node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/time_panel/layout.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","createFragment","createComponentVNode","normalizeProps","Fragment","InfernoWrapperComponent","Row","TimePanelCell","Cell","CellBase","getKeyByGroup","getIsGroupedAllDayPanel","isVerticalGroupOrientation","Table","AllDayPanelTitle","viewFunction","_ref","bottomVirtualRowHeight","isVerticalGrouping","props","groupOrientation","timeCellTemplate","timePanelData","restAttributes","topVirtualRowHeight","virtualCellsCount","className","children","groupedData","map","_ref2","index","dateTable","groupIndex","cell","cellCountInGroupRow","groups","cellIndex","isFirstGroupCell","isLastGroupCell","key","startDate","text","Math","floor","TimePanelTableLayoutProps","allDayPanelVisible","leftVirtualCellCount","rightVirtualCellCount","topVirtualRowCount","bottomVirtualRowCount","getTemplate","TemplateProp","defaultProps","TimePanelTableLayout","constructor","state","_this$props","restProps","render"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,IAAIC,SAAS,GAAG,CAAC,oBAAD,EAAuB,WAAvB,EAAoC,kBAApC,EAAwD,kBAAxD,EAA4E,eAA5E,CAAhB;AACA,SACIC,cADJ,EAEIC,oBAFJ,EAGIC,cAHJ,QAIO,SAJP;AAKA,SACIC,QADJ,QAEO,SAFP;AAGA,SACIC,uBADJ,QAEO,kBAFP;AAGA,SACIC,GADJ,QAEO,QAFP;AAGA,SACIC,aAAa,IAAIC,IADrB,QAEO,QAFP;AAGA,SACIC,QADJ,QAEO,SAFP;AAGA,SACIC,aADJ,EAEIC,uBAFJ,EAGIC,0BAHJ,QAIO,aAJP;AAKA,SACIC,KADJ,QAEO,UAFP;AAGA,SACIC,gBADJ,QAEO,mCAFP;AAGA,OAAO,IAAIC,YAAY,GAAGC,IAAI,IAAI;AAC9B,MAAI;AACAC,IAAAA,sBAAsB,EAAEA,sBADxB;AAEAL,IAAAA,0BAA0B,EAAEM,kBAF5B;AAGAC,IAAAA,KAAK,EAAE;AACHC,MAAAA,gBAAgB,EAAEA,gBADf;AAEHC,MAAAA,gBAAgB,EAAEA,gBAFf;AAGHC,MAAAA,aAAa,EAAEA;AAHZ,KAHP;AAQAC,IAAAA,cAAc,EAAEA,cARhB;AASAC,IAAAA,mBAAmB,EAAEA;AATrB,MAUAR,IAVJ;AAWA,SAAOb,cAAc,CAACD,oBAAoB,CAAC,CAAD,EAAIW,KAAJ,EAAWd,QAAQ,CAAC,EAAD,EAAKwB,cAAL,EAAqB;AAC9EC,IAAAA,mBAAmB,EAAEA,mBADyD;AAE9EP,IAAAA,sBAAsB,EAAEA,sBAFsD;AAG9EQ,IAAAA,iBAAiB,EAAE,CAH2D;AAI9EC,IAAAA,SAAS,EAAE,yBAJmE;AAK9EC,IAAAA,QAAQ,EAAEL,aAAa,CAACM,WAAd,CAA0BC,GAA1B,CAA8B,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACtD,UAAI;AACAC,QAAAA,SAAS,EAAEA,SADX;AAEAC,QAAAA,UAAU,EAAEA;AAFZ,UAGAH,KAHJ;AAIA,aAAO7B,cAAc,CAAC,CAACU,uBAAuB,CAACW,aAAD,EAAgBS,KAAhB,CAAvB,IAAiD7B,oBAAoB,CAAC,CAAD,EAAII,GAAJ,EAAS;AACjGqB,QAAAA,QAAQ,EAAEzB,oBAAoB,CAAC,CAAD,EAAIO,QAAJ,EAAc;AACxCiB,UAAAA,SAAS,EAAE,oCAD6B;AAExCC,UAAAA,QAAQ,EAAEzB,oBAAoB,CAAC,CAAD,EAAIY,gBAAJ;AAFU,SAAd;AADmE,OAAT,CAAtE,EAKlBkB,SAAS,CAACH,GAAV,CAAcK,IAAI,IAAI;AACtB,YAAI;AACAC,UAAAA,mBAAmB,EAAEA;AADrB,YAEAb,aAFJ;AAGA,YAAI;AACAc,UAAAA,MAAM,EAAEA,MADR;AAEAL,UAAAA,KAAK,EAAEM,SAFP;AAGAC,UAAAA,gBAAgB,EAAEA,gBAHlB;AAIAC,UAAAA,eAAe,EAAEA,eAJjB;AAKAC,UAAAA,GAAG,EAAEA,GALL;AAMAC,UAAAA,SAAS,EAAEA,SANX;AAOAC,UAAAA,IAAI,EAAEA;AAPN,YAQAR,IARJ;AASA,eAAOhC,oBAAoB,CAAC,CAAD,EAAII,GAAJ,EAAS;AAChCoB,UAAAA,SAAS,EAAE,6BADqB;AAEhCC,UAAAA,QAAQ,EAAEzB,oBAAoB,CAAC,CAAD,EAAIM,IAAJ,EAAU;AACpCiC,YAAAA,SAAS,EAAEA,SADyB;AAEpCC,YAAAA,IAAI,EAAEA,IAF8B;AAGpCN,YAAAA,MAAM,EAAElB,kBAAkB,GAAGkB,MAAH,GAAY,KAAK,CAHP;AAIpCH,YAAAA,UAAU,EAAEf,kBAAkB,GAAGe,UAAH,GAAgB,KAAK,CAJf;AAKpCK,YAAAA,gBAAgB,EAAEpB,kBAAkB,IAAIoB,gBALJ;AAMpCC,YAAAA,eAAe,EAAErB,kBAAkB,IAAIqB,eANH;AAOpCR,YAAAA,KAAK,EAAEY,IAAI,CAACC,KAAL,CAAWP,SAAS,GAAGF,mBAAvB,CAP6B;AAQpCd,YAAAA,gBAAgB,EAAEA;AARkB,WAAV;AAFE,SAAT,EAYxBmB,GAZwB,CAA3B;AAaH,OA1BG,CALkB,CAAD,EA+BhB,CA/BgB,EA+Bb9B,aAAa,CAACuB,UAAD,EAAab,gBAAb,CA/BA,CAArB;AAgCH,KArCS;AALoE,GAArB,CAAnB,CAArB,CAArB;AA4CH,CAxDM;AAyDP,OAAO,IAAIyB,yBAAyB,GAAG;AACnCnB,EAAAA,SAAS,EAAE,EADwB;AAEnCoB,EAAAA,kBAAkB,EAAE,KAFe;AAGnCxB,EAAAA,aAAa,EAAE;AACXM,IAAAA,WAAW,EAAE,EADF;AAEXO,IAAAA,mBAAmB,EAAE,CAFV;AAGXY,IAAAA,oBAAoB,EAAE,CAHX;AAIXC,IAAAA,qBAAqB,EAAE,CAJZ;AAKXC,IAAAA,kBAAkB,EAAE,CALT;AAMXC,IAAAA,qBAAqB,EAAE;AANZ;AAHoB,CAAhC;;AAYP,IAAIC,WAAW,GAAGC,YAAY,IAAIA,YAAY,KAAKA,YAAY,CAACC,YAAb,GAA4BlC,KAAK,IAAIhB,cAAc,CAACD,oBAAoB,CAAC,CAAD,EAAIkD,YAAJ,EAAkBrD,QAAQ,CAAC,EAAD,EAAKoB,KAAL,CAA1B,CAArB,CAAnD,GAAkHiC,YAAvH,CAA9C;;AACA,OAAO,MAAME,oBAAN,SAAmCjD,uBAAnC,CAA2D;AAC9DkD,EAAAA,WAAW,CAACpC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKqC,KAAL,GAAa,EAAb;AACH;;AACsB,MAAnBhC,mBAAmB,GAAG;AACtB,WAAO,KAAKL,KAAL,CAAWG,aAAX,CAAyBE,mBAAzB,IAAgD,CAAvD;AACH;;AACyB,MAAtBP,sBAAsB,GAAG;AACzB,WAAO,KAAKE,KAAL,CAAWG,aAAX,CAAyBL,sBAAzB,IAAmD,CAA1D;AACH;;AAC6B,MAA1BL,0BAA0B,GAAG;AAC7B,QAAI;AACAQ,MAAAA,gBAAgB,EAAEA;AADlB,QAEA,KAAKD,KAFT;AAGA,WAAOP,0BAA0B,CAACQ,gBAAD,CAAjC;AACH;;AACiB,MAAdG,cAAc,GAAG;AACjB,QAAIkC,WAAW,GAAG,KAAKtC,KAAvB;AAAA,QACIuC,SAAS,GAAG5D,6BAA6B,CAAC2D,WAAD,EAAczD,SAAd,CAD7C;;AAEA,WAAO0D,SAAP;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,QAAIxC,KAAK,GAAG,KAAKA,KAAjB;AACA,WAAOJ,YAAY,CAAC;AAChBI,MAAAA,KAAK,EAAEpB,QAAQ,CAAC,EAAD,EAAKoB,KAAL,EAAY;AACvBE,QAAAA,gBAAgB,EAAE8B,WAAW,CAAChC,KAAK,CAACE,gBAAP;AADN,OAAZ,CADC;AAIhBG,MAAAA,mBAAmB,EAAE,KAAKA,mBAJV;AAKhBP,MAAAA,sBAAsB,EAAE,KAAKA,sBALb;AAMhBL,MAAAA,0BAA0B,EAAE,KAAKA,0BANjB;AAOhBW,MAAAA,cAAc,EAAE,KAAKA;AAPL,KAAD,CAAnB;AASH;;AAjC6D;AAmClE+B,oBAAoB,CAACD,YAArB,GAAoCtD,QAAQ,CAAC,EAAD,EAAK8C,yBAAL,CAA5C","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/time_panel/layout.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"allDayPanelVisible\", \"className\", \"groupOrientation\", \"timeCellTemplate\", \"timePanelData\"];\r\nimport {\r\n    createFragment,\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    InfernoWrapperComponent\r\n} from \"@devextreme/vdom\";\r\nimport {\r\n    Row\r\n} from \"../row\";\r\nimport {\r\n    TimePanelCell as Cell\r\n} from \"./cell\";\r\nimport {\r\n    CellBase\r\n} from \"../cell\";\r\nimport {\r\n    getKeyByGroup,\r\n    getIsGroupedAllDayPanel,\r\n    isVerticalGroupOrientation\r\n} from \"../../utils\";\r\nimport {\r\n    Table\r\n} from \"../table\";\r\nimport {\r\n    AllDayPanelTitle\r\n} from \"../date_table/all_day_panel/title\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        bottomVirtualRowHeight: bottomVirtualRowHeight,\r\n        isVerticalGroupOrientation: isVerticalGrouping,\r\n        props: {\r\n            groupOrientation: groupOrientation,\r\n            timeCellTemplate: timeCellTemplate,\r\n            timePanelData: timePanelData\r\n        },\r\n        restAttributes: restAttributes,\r\n        topVirtualRowHeight: topVirtualRowHeight\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, Table, _extends({}, restAttributes, {\r\n        topVirtualRowHeight: topVirtualRowHeight,\r\n        bottomVirtualRowHeight: bottomVirtualRowHeight,\r\n        virtualCellsCount: 1,\r\n        className: \"dx-scheduler-time-panel\",\r\n        children: timePanelData.groupedData.map((_ref2, index) => {\r\n            var {\r\n                dateTable: dateTable,\r\n                groupIndex: groupIndex\r\n            } = _ref2;\r\n            return createFragment([getIsGroupedAllDayPanel(timePanelData, index) && createComponentVNode(2, Row, {\r\n                children: createComponentVNode(2, CellBase, {\r\n                    className: \"dx-scheduler-time-panel-title-cell\",\r\n                    children: createComponentVNode(2, AllDayPanelTitle)\r\n                })\r\n            }), dateTable.map(cell => {\r\n                var {\r\n                    cellCountInGroupRow: cellCountInGroupRow\r\n                } = timePanelData;\r\n                var {\r\n                    groups: groups,\r\n                    index: cellIndex,\r\n                    isFirstGroupCell: isFirstGroupCell,\r\n                    isLastGroupCell: isLastGroupCell,\r\n                    key: key,\r\n                    startDate: startDate,\r\n                    text: text\r\n                } = cell;\r\n                return createComponentVNode(2, Row, {\r\n                    className: \"dx-scheduler-time-panel-row\",\r\n                    children: createComponentVNode(2, Cell, {\r\n                        startDate: startDate,\r\n                        text: text,\r\n                        groups: isVerticalGrouping ? groups : void 0,\r\n                        groupIndex: isVerticalGrouping ? groupIndex : void 0,\r\n                        isFirstGroupCell: isVerticalGrouping && isFirstGroupCell,\r\n                        isLastGroupCell: isVerticalGrouping && isLastGroupCell,\r\n                        index: Math.floor(cellIndex / cellCountInGroupRow),\r\n                        timeCellTemplate: timeCellTemplate\r\n                    })\r\n                }, key)\r\n            })], 0, getKeyByGroup(groupIndex, groupOrientation))\r\n        })\r\n    })))\r\n};\r\nexport var TimePanelTableLayoutProps = {\r\n    className: \"\",\r\n    allDayPanelVisible: false,\r\n    timePanelData: {\r\n        groupedData: [],\r\n        cellCountInGroupRow: 0,\r\n        leftVirtualCellCount: 0,\r\n        rightVirtualCellCount: 0,\r\n        topVirtualRowCount: 0,\r\n        bottomVirtualRowCount: 0\r\n    }\r\n};\r\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\r\nexport class TimePanelTableLayout extends InfernoWrapperComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    get topVirtualRowHeight() {\r\n        return this.props.timePanelData.topVirtualRowHeight || 0\r\n    }\r\n    get bottomVirtualRowHeight() {\r\n        return this.props.timePanelData.bottomVirtualRowHeight || 0\r\n    }\r\n    get isVerticalGroupOrientation() {\r\n        var {\r\n            groupOrientation: groupOrientation\r\n        } = this.props;\r\n        return isVerticalGroupOrientation(groupOrientation)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                timeCellTemplate: getTemplate(props.timeCellTemplate)\r\n            }),\r\n            topVirtualRowHeight: this.topVirtualRowHeight,\r\n            bottomVirtualRowHeight: this.bottomVirtualRowHeight,\r\n            isVerticalGroupOrientation: this.isVerticalGroupOrientation,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nTimePanelTableLayout.defaultProps = _extends({}, TimePanelTableLayoutProps);\r\n"]},"metadata":{},"sourceType":"module"}