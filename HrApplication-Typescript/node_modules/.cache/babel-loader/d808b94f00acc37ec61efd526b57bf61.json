{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/header/header.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../../core/renderer\";\nimport { isObject, isDefined } from \"../../../core/utils/type\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { each } from \"../../../core/utils/iterator\";\nimport { inArray } from \"../../../core/utils/array\";\nimport { camelize } from \"../../../core/utils/inflector\";\nimport registerComponent from \"../../../core/component_registrator\";\nimport Widget from \"../../widget/ui.widget\";\nimport { Navigator } from \"./navigator\";\nimport DropDownMenu from \"../../drop_down_menu\";\nimport Tabs from \"../../tabs\";\nimport { TABS_EXPANDED_CLASS } from \"../../tabs/constants\";\nimport errors from \"../../../core/errors\";\nimport messageLocalization from \"../../../localization/message\";\nvar COMPONENT_CLASS = \"dx-scheduler-header\";\nvar VIEW_SWITCHER_CLASS = \"dx-scheduler-view-switcher\";\nvar VIEW_SWITCHER_LABEL_CLASS = \"dx-scheduler-view-switcher-label\";\nvar STEP_MAP = {\n  day: \"day\",\n  week: \"week\",\n  workWeek: \"workWeek\",\n  month: \"month\",\n  timelineDay: \"day\",\n  timelineWeek: \"week\",\n  timelineWorkWeek: \"workWeek\",\n  timelineMonth: \"month\",\n  agenda: \"agenda\"\n};\nvar VIEWS = [\"day\", \"week\", \"workWeek\", \"month\", \"timelineDay\", \"timelineWeek\", \"timelineWorkWeek\", \"timelineMonth\", \"agenda\"];\nexport class Header extends Widget {\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      views: [],\n      isAdaptive: false,\n      intervalCount: 1,\n      currentView: \"day\",\n      firstDayOfWeek: void 0,\n      currentDate: new Date(),\n      min: void 0,\n      max: void 0,\n      useDropDownViewSwitcher: false,\n      _dropDownButtonIcon: \"overlay\"\n    });\n  }\n\n  _setOptionsByReference() {\n    super._setOptionsByReference();\n\n    extend(this._optionsByReference, {\n      currentView: true\n    });\n  }\n\n  _optionChanged(args) {\n    var value = args.value;\n\n    switch (args.name) {\n      case \"views\":\n        this._validateViews();\n\n        this._viewSwitcher.option({\n          items: value,\n          selectedItem: this.option(\"currentView\")\n        });\n\n        break;\n\n      case \"customizeDateNavigatorText\":\n        this._navigator.option(args.name, value);\n\n        break;\n\n      case \"currentView\":\n        this._viewSwitcher.option(\"selectedItem\", value);\n\n        this._navigator.option(\"step\", STEP_MAP[this._getCurrentViewType()]);\n\n        this._changeViewSwitcherLabelText();\n\n        break;\n\n      case \"currentDate\":\n        this._navigator.option(\"date\", value);\n\n        break;\n\n      case \"displayedDate\":\n        this._navigator.option(\"displayedDate\", value);\n\n        break;\n\n      case \"min\":\n      case \"max\":\n      case \"firstDayOfWeek\":\n      case \"intervalCount\":\n        this._navigator.option(args.name, value);\n\n        break;\n\n      case \"tabIndex\":\n      case \"focusStateEnabled\":\n        this._viewSwitcher.option(args.name, value);\n\n        this._navigator.option(args.name, value);\n\n        super._optionChanged(args);\n\n        break;\n\n      case \"useDropDownViewSwitcher\":\n        this._refreshViewSwitcher();\n\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n  _init() {\n    super._init();\n\n    this.$element().addClass(COMPONENT_CLASS);\n  }\n\n  _initMarkup() {\n    super._initMarkup();\n\n    this._renderNavigator();\n\n    this._renderViewSwitcher();\n  }\n\n  _renderNavigator() {\n    this._navigator = this._createComponent(\"<div>\", Navigator, {\n      min: this.option(\"min\"),\n      max: this.option(\"max\"),\n      intervalCount: this.option(\"intervalCount\"),\n      date: this.option(\"currentDate\"),\n      step: STEP_MAP[this._getCurrentViewType()],\n      firstDayOfWeek: this.option(\"firstDayOfWeek\"),\n      tabIndex: this.option(\"tabIndex\"),\n      focusStateEnabled: this.option(\"focusStateEnabled\"),\n      observer: this.option(\"observer\"),\n      customizeDateNavigatorText: this.option(\"customizeDateNavigatorText\"),\n      todayDate: this.option(\"todayDate\")\n    });\n\n    this._navigator.$element().appendTo(this.$element());\n  }\n\n  _renderViewSwitcher() {\n    this._validateViews();\n\n    var $viewSwitcher = $(\"<div>\").addClass(VIEW_SWITCHER_CLASS).appendTo(this.$element());\n    this.option(\"useDropDownViewSwitcher\") ? this._renderViewSwitcherDropDownMenu($viewSwitcher) : this._renderViewSwitcherTabs($viewSwitcher);\n  }\n\n  _validateViews() {\n    var views = this.option(\"views\");\n    each(views, function (_, view) {\n      var isViewIsObject = isObject(view);\n      var viewType = isViewIsObject && view.type ? view.type : view;\n\n      if (-1 === inArray(viewType, VIEWS)) {\n        errors.log(\"W0008\", viewType);\n      }\n    });\n  }\n\n  _getCurrentViewType() {\n    var currentView = this.option(\"currentView\");\n    return currentView.type || currentView;\n  }\n\n  _renderViewSwitcherTabs($element) {\n    var that = this;\n    $element.addClass(TABS_EXPANDED_CLASS);\n    this._viewSwitcher = this._createComponent($element, Tabs, {\n      selectionRequired: true,\n      scrollingEnabled: true,\n      onSelectionChanged: this._updateCurrentView.bind(this),\n      items: this.option(\"views\"),\n      itemTemplate: function (item) {\n        return $(\"<span>\").addClass(\"dx-tab-text\").text(that._getItemText(item));\n      },\n      selectedItem: this.option(\"currentView\"),\n      tabIndex: this.option(\"tabIndex\"),\n      focusStateEnabled: this.option(\"focusStateEnabled\")\n    });\n  }\n\n  _getItemText(item) {\n    return item.name || messageLocalization.format(\"dxScheduler-switcher\" + camelize(item.type || item, true));\n  }\n\n  _refreshViewSwitcher() {\n    this._viewSwitcher._dispose();\n\n    this._viewSwitcher.$element().remove();\n\n    delete this._viewSwitcher;\n\n    this._removeViewSwitcherLabel();\n\n    this._renderViewSwitcher();\n  }\n\n  _removeViewSwitcherLabel() {\n    if (isDefined(this._$viewSwitcherLabel)) {\n      this._$viewSwitcherLabel.detach();\n\n      this._$viewSwitcherLabel.remove();\n\n      delete this._$viewSwitcherLabel;\n    }\n  }\n\n  _renderViewSwitcherDropDownMenu($element) {\n    var that = this;\n    this._$viewSwitcherLabel = $(\"<div>\").addClass(VIEW_SWITCHER_LABEL_CLASS).appendTo(this.$element());\n\n    this._changeViewSwitcherLabelText();\n\n    this._viewSwitcher = this._createComponent($element, DropDownMenu, {\n      onItemClick: this._updateCurrentView.bind(this),\n      buttonIcon: this.option(\"_dropDownButtonIcon\"),\n      items: this.option(\"views\"),\n      selectionMode: this.option(\"isAdaptive\") ? \"single\" : \"none\",\n      selectedItemKeys: [this.option(\"currentView\")],\n      itemTemplate: function (item) {\n        return $(\"<span>\").addClass(\"dx-dropdownmenu-item-text\").text(that._getItemText(item));\n      }\n    });\n  }\n\n  _changeViewSwitcherLabelText() {\n    if (!isDefined(this._$viewSwitcherLabel)) {\n      return;\n    }\n\n    var currentView = this.option(\"currentView\");\n\n    var currentViewText = this._getItemText(currentView);\n\n    this._$viewSwitcherLabel.text(currentViewText);\n  }\n\n  _getCurrentViewName(currentView) {\n    return isObject(currentView) ? currentView.name || currentView.type : currentView;\n  }\n\n  _updateCurrentView(e) {\n    var selectedItem = e.itemData || e.component.option(\"selectedItem\");\n\n    var viewName = this._getCurrentViewName(selectedItem);\n\n    this.notifyObserver(\"currentViewUpdated\", viewName);\n  }\n\n  _renderFocusTarget() {}\n\n  notifyObserver(subject, args) {\n    var observer = this.option(\"observer\");\n\n    if (observer) {\n      observer.fire(subject, args);\n    }\n  }\n\n  invoke() {\n    var observer = this.option(\"observer\");\n\n    if (observer) {\n      return observer.fire.apply(observer, arguments);\n    }\n  }\n\n}\nregisterComponent(\"dxSchedulerHeader\", Header);","map":{"version":3,"sources":["/home/igor/node_modules/devextreme/esm/ui/scheduler/header/header.js"],"names":["$","isObject","isDefined","extend","each","inArray","camelize","registerComponent","Widget","Navigator","DropDownMenu","Tabs","TABS_EXPANDED_CLASS","errors","messageLocalization","COMPONENT_CLASS","VIEW_SWITCHER_CLASS","VIEW_SWITCHER_LABEL_CLASS","STEP_MAP","day","week","workWeek","month","timelineDay","timelineWeek","timelineWorkWeek","timelineMonth","agenda","VIEWS","Header","_getDefaultOptions","views","isAdaptive","intervalCount","currentView","firstDayOfWeek","currentDate","Date","min","max","useDropDownViewSwitcher","_dropDownButtonIcon","_setOptionsByReference","_optionsByReference","_optionChanged","args","value","name","_validateViews","_viewSwitcher","option","items","selectedItem","_navigator","_getCurrentViewType","_changeViewSwitcherLabelText","_refreshViewSwitcher","_init","$element","addClass","_initMarkup","_renderNavigator","_renderViewSwitcher","_createComponent","date","step","tabIndex","focusStateEnabled","observer","customizeDateNavigatorText","todayDate","appendTo","$viewSwitcher","_renderViewSwitcherDropDownMenu","_renderViewSwitcherTabs","_","view","isViewIsObject","viewType","type","log","that","selectionRequired","scrollingEnabled","onSelectionChanged","_updateCurrentView","bind","itemTemplate","item","text","_getItemText","format","_dispose","remove","_removeViewSwitcherLabel","_$viewSwitcherLabel","detach","onItemClick","buttonIcon","selectionMode","selectedItemKeys","currentViewText","_getCurrentViewName","e","itemData","component","viewName","notifyObserver","_renderFocusTarget","subject","fire","invoke","apply","arguments"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAc,wBAAd;AACA,SACIC,QADJ,EAEIC,SAFJ,QAGO,0BAHP;AAIA,SACIC,MADJ,QAEO,4BAFP;AAGA,SACIC,IADJ,QAEO,8BAFP;AAGA,SACIC,OADJ,QAEO,2BAFP;AAGA,SACIC,QADJ,QAEO,+BAFP;AAGA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SACIC,SADJ,QAEO,aAFP;AAGA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SACIC,mBADJ,QAEO,sBAFP;AAGA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;AACA,IAAIC,eAAe,GAAG,qBAAtB;AACA,IAAIC,mBAAmB,GAAG,4BAA1B;AACA,IAAIC,yBAAyB,GAAG,kCAAhC;AACA,IAAIC,QAAQ,GAAG;AACXC,EAAAA,GAAG,EAAE,KADM;AAEXC,EAAAA,IAAI,EAAE,MAFK;AAGXC,EAAAA,QAAQ,EAAE,UAHC;AAIXC,EAAAA,KAAK,EAAE,OAJI;AAKXC,EAAAA,WAAW,EAAE,KALF;AAMXC,EAAAA,YAAY,EAAE,MANH;AAOXC,EAAAA,gBAAgB,EAAE,UAPP;AAQXC,EAAAA,aAAa,EAAE,OARJ;AASXC,EAAAA,MAAM,EAAE;AATG,CAAf;AAWA,IAAIC,KAAK,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,UAAhB,EAA4B,OAA5B,EAAqC,aAArC,EAAoD,cAApD,EAAoE,kBAApE,EAAwF,eAAxF,EAAyG,QAAzG,CAAZ;AACA,OAAO,MAAMC,MAAN,SAAqBrB,MAArB,CAA4B;AAC/BsB,EAAAA,kBAAkB,GAAG;AACjB,WAAO3B,MAAM,CAAC,MAAM2B,kBAAN,EAAD,EAA6B;AACtCC,MAAAA,KAAK,EAAE,EAD+B;AAEtCC,MAAAA,UAAU,EAAE,KAF0B;AAGtCC,MAAAA,aAAa,EAAE,CAHuB;AAItCC,MAAAA,WAAW,EAAE,KAJyB;AAKtCC,MAAAA,cAAc,EAAE,KAAK,CALiB;AAMtCC,MAAAA,WAAW,EAAE,IAAIC,IAAJ,EANyB;AAOtCC,MAAAA,GAAG,EAAE,KAAK,CAP4B;AAQtCC,MAAAA,GAAG,EAAE,KAAK,CAR4B;AAStCC,MAAAA,uBAAuB,EAAE,KATa;AAUtCC,MAAAA,mBAAmB,EAAE;AAViB,KAA7B,CAAb;AAYH;;AACDC,EAAAA,sBAAsB,GAAG;AACrB,UAAMA,sBAAN;;AACAvC,IAAAA,MAAM,CAAC,KAAKwC,mBAAN,EAA2B;AAC7BT,MAAAA,WAAW,EAAE;AADgB,KAA3B,CAAN;AAGH;;AACDU,EAAAA,cAAc,CAACC,IAAD,EAAO;AACjB,QAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;;AACA,YAAQD,IAAI,CAACE,IAAb;AACI,WAAK,OAAL;AACI,aAAKC,cAAL;;AACA,aAAKC,aAAL,CAAmBC,MAAnB,CAA0B;AACtBC,UAAAA,KAAK,EAAEL,KADe;AAEtBM,UAAAA,YAAY,EAAE,KAAKF,MAAL,CAAY,aAAZ;AAFQ,SAA1B;;AAIA;;AACJ,WAAK,4BAAL;AACI,aAAKG,UAAL,CAAgBH,MAAhB,CAAuBL,IAAI,CAACE,IAA5B,EAAkCD,KAAlC;;AACA;;AACJ,WAAK,aAAL;AACI,aAAKG,aAAL,CAAmBC,MAAnB,CAA0B,cAA1B,EAA0CJ,KAA1C;;AACA,aAAKO,UAAL,CAAgBH,MAAhB,CAAuB,MAAvB,EAA+BhC,QAAQ,CAAC,KAAKoC,mBAAL,EAAD,CAAvC;;AACA,aAAKC,4BAAL;;AACA;;AACJ,WAAK,aAAL;AACI,aAAKF,UAAL,CAAgBH,MAAhB,CAAuB,MAAvB,EAA+BJ,KAA/B;;AACA;;AACJ,WAAK,eAAL;AACI,aAAKO,UAAL,CAAgBH,MAAhB,CAAuB,eAAvB,EAAwCJ,KAAxC;;AACA;;AACJ,WAAK,KAAL;AACA,WAAK,KAAL;AACA,WAAK,gBAAL;AACA,WAAK,eAAL;AACI,aAAKO,UAAL,CAAgBH,MAAhB,CAAuBL,IAAI,CAACE,IAA5B,EAAkCD,KAAlC;;AACA;;AACJ,WAAK,UAAL;AACA,WAAK,mBAAL;AACI,aAAKG,aAAL,CAAmBC,MAAnB,CAA0BL,IAAI,CAACE,IAA/B,EAAqCD,KAArC;;AACA,aAAKO,UAAL,CAAgBH,MAAhB,CAAuBL,IAAI,CAACE,IAA5B,EAAkCD,KAAlC;;AACA,cAAMF,cAAN,CAAqBC,IAArB;;AACA;;AACJ,WAAK,yBAAL;AACI,aAAKW,oBAAL;;AACA;;AACJ;AACI,cAAMZ,cAAN,CAAqBC,IAArB;;AAtCR;AAwCH;;AACDY,EAAAA,KAAK,GAAG;AACJ,UAAMA,KAAN;;AACA,SAAKC,QAAL,GAAgBC,QAAhB,CAAyB5C,eAAzB;AACH;;AACD6C,EAAAA,WAAW,GAAG;AACV,UAAMA,WAAN;;AACA,SAAKC,gBAAL;;AACA,SAAKC,mBAAL;AACH;;AACDD,EAAAA,gBAAgB,GAAG;AACf,SAAKR,UAAL,GAAkB,KAAKU,gBAAL,CAAsB,OAAtB,EAA+BtD,SAA/B,EAA0C;AACxD6B,MAAAA,GAAG,EAAE,KAAKY,MAAL,CAAY,KAAZ,CADmD;AAExDX,MAAAA,GAAG,EAAE,KAAKW,MAAL,CAAY,KAAZ,CAFmD;AAGxDjB,MAAAA,aAAa,EAAE,KAAKiB,MAAL,CAAY,eAAZ,CAHyC;AAIxDc,MAAAA,IAAI,EAAE,KAAKd,MAAL,CAAY,aAAZ,CAJkD;AAKxDe,MAAAA,IAAI,EAAE/C,QAAQ,CAAC,KAAKoC,mBAAL,EAAD,CAL0C;AAMxDnB,MAAAA,cAAc,EAAE,KAAKe,MAAL,CAAY,gBAAZ,CANwC;AAOxDgB,MAAAA,QAAQ,EAAE,KAAKhB,MAAL,CAAY,UAAZ,CAP8C;AAQxDiB,MAAAA,iBAAiB,EAAE,KAAKjB,MAAL,CAAY,mBAAZ,CARqC;AASxDkB,MAAAA,QAAQ,EAAE,KAAKlB,MAAL,CAAY,UAAZ,CAT8C;AAUxDmB,MAAAA,0BAA0B,EAAE,KAAKnB,MAAL,CAAY,4BAAZ,CAV4B;AAWxDoB,MAAAA,SAAS,EAAE,KAAKpB,MAAL,CAAY,WAAZ;AAX6C,KAA1C,CAAlB;;AAaA,SAAKG,UAAL,CAAgBK,QAAhB,GAA2Ba,QAA3B,CAAoC,KAAKb,QAAL,EAApC;AACH;;AACDI,EAAAA,mBAAmB,GAAG;AAClB,SAAKd,cAAL;;AACA,QAAIwB,aAAa,GAAGxE,CAAC,CAAC,OAAD,CAAD,CAAW2D,QAAX,CAAoB3C,mBAApB,EAAyCuD,QAAzC,CAAkD,KAAKb,QAAL,EAAlD,CAApB;AACA,SAAKR,MAAL,CAAY,yBAAZ,IAAyC,KAAKuB,+BAAL,CAAqCD,aAArC,CAAzC,GAA+F,KAAKE,uBAAL,CAA6BF,aAA7B,CAA/F;AACH;;AACDxB,EAAAA,cAAc,GAAG;AACb,QAAIjB,KAAK,GAAG,KAAKmB,MAAL,CAAY,OAAZ,CAAZ;AACA9C,IAAAA,IAAI,CAAC2B,KAAD,EAAS,UAAS4C,CAAT,EAAYC,IAAZ,EAAkB;AAC3B,UAAIC,cAAc,GAAG5E,QAAQ,CAAC2E,IAAD,CAA7B;AACA,UAAIE,QAAQ,GAAGD,cAAc,IAAID,IAAI,CAACG,IAAvB,GAA8BH,IAAI,CAACG,IAAnC,GAA0CH,IAAzD;;AACA,UAAI,CAAC,CAAD,KAAOvE,OAAO,CAACyE,QAAD,EAAWlD,KAAX,CAAlB,EAAqC;AACjCf,QAAAA,MAAM,CAACmE,GAAP,CAAW,OAAX,EAAoBF,QAApB;AACH;AACJ,KANG,CAAJ;AAOH;;AACDxB,EAAAA,mBAAmB,GAAG;AAClB,QAAIpB,WAAW,GAAG,KAAKgB,MAAL,CAAY,aAAZ,CAAlB;AACA,WAAOhB,WAAW,CAAC6C,IAAZ,IAAoB7C,WAA3B;AACH;;AACDwC,EAAAA,uBAAuB,CAAChB,QAAD,EAAW;AAC9B,QAAIuB,IAAI,GAAG,IAAX;AACAvB,IAAAA,QAAQ,CAACC,QAAT,CAAkB/C,mBAAlB;AACA,SAAKqC,aAAL,GAAqB,KAAKc,gBAAL,CAAsBL,QAAtB,EAAgC/C,IAAhC,EAAsC;AACvDuE,MAAAA,iBAAiB,EAAE,IADoC;AAEvDC,MAAAA,gBAAgB,EAAE,IAFqC;AAGvDC,MAAAA,kBAAkB,EAAE,KAAKC,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAHmC;AAIvDnC,MAAAA,KAAK,EAAE,KAAKD,MAAL,CAAY,OAAZ,CAJgD;AAKvDqC,MAAAA,YAAY,EAAE,UAASC,IAAT,EAAe;AACzB,eAAOxF,CAAC,CAAC,QAAD,CAAD,CAAY2D,QAAZ,CAAqB,aAArB,EAAoC8B,IAApC,CAAyCR,IAAI,CAACS,YAAL,CAAkBF,IAAlB,CAAzC,CAAP;AACH,OAPsD;AAQvDpC,MAAAA,YAAY,EAAE,KAAKF,MAAL,CAAY,aAAZ,CARyC;AASvDgB,MAAAA,QAAQ,EAAE,KAAKhB,MAAL,CAAY,UAAZ,CAT6C;AAUvDiB,MAAAA,iBAAiB,EAAE,KAAKjB,MAAL,CAAY,mBAAZ;AAVoC,KAAtC,CAArB;AAYH;;AACDwC,EAAAA,YAAY,CAACF,IAAD,EAAO;AACf,WAAOA,IAAI,CAACzC,IAAL,IAAajC,mBAAmB,CAAC6E,MAApB,CAA2B,yBAAyBrF,QAAQ,CAACkF,IAAI,CAACT,IAAL,IAAaS,IAAd,EAAoB,IAApB,CAA5D,CAApB;AACH;;AACDhC,EAAAA,oBAAoB,GAAG;AACnB,SAAKP,aAAL,CAAmB2C,QAAnB;;AACA,SAAK3C,aAAL,CAAmBS,QAAnB,GAA8BmC,MAA9B;;AACA,WAAO,KAAK5C,aAAZ;;AACA,SAAK6C,wBAAL;;AACA,SAAKhC,mBAAL;AACH;;AACDgC,EAAAA,wBAAwB,GAAG;AACvB,QAAI5F,SAAS,CAAC,KAAK6F,mBAAN,CAAb,EAAyC;AACrC,WAAKA,mBAAL,CAAyBC,MAAzB;;AACA,WAAKD,mBAAL,CAAyBF,MAAzB;;AACA,aAAO,KAAKE,mBAAZ;AACH;AACJ;;AACDtB,EAAAA,+BAA+B,CAACf,QAAD,EAAW;AACtC,QAAIuB,IAAI,GAAG,IAAX;AACA,SAAKc,mBAAL,GAA2B/F,CAAC,CAAC,OAAD,CAAD,CAAW2D,QAAX,CAAoB1C,yBAApB,EAA+CsD,QAA/C,CAAwD,KAAKb,QAAL,EAAxD,CAA3B;;AACA,SAAKH,4BAAL;;AACA,SAAKN,aAAL,GAAqB,KAAKc,gBAAL,CAAsBL,QAAtB,EAAgChD,YAAhC,EAA8C;AAC/DuF,MAAAA,WAAW,EAAE,KAAKZ,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CADkD;AAE/DY,MAAAA,UAAU,EAAE,KAAKhD,MAAL,CAAY,qBAAZ,CAFmD;AAG/DC,MAAAA,KAAK,EAAE,KAAKD,MAAL,CAAY,OAAZ,CAHwD;AAI/DiD,MAAAA,aAAa,EAAE,KAAKjD,MAAL,CAAY,YAAZ,IAA4B,QAA5B,GAAuC,MAJS;AAK/DkD,MAAAA,gBAAgB,EAAE,CAAC,KAAKlD,MAAL,CAAY,aAAZ,CAAD,CAL6C;AAM/DqC,MAAAA,YAAY,EAAE,UAASC,IAAT,EAAe;AACzB,eAAOxF,CAAC,CAAC,QAAD,CAAD,CAAY2D,QAAZ,CAAqB,2BAArB,EAAkD8B,IAAlD,CAAuDR,IAAI,CAACS,YAAL,CAAkBF,IAAlB,CAAvD,CAAP;AACH;AAR8D,KAA9C,CAArB;AAUH;;AACDjC,EAAAA,4BAA4B,GAAG;AAC3B,QAAI,CAACrD,SAAS,CAAC,KAAK6F,mBAAN,CAAd,EAA0C;AACtC;AACH;;AACD,QAAI7D,WAAW,GAAG,KAAKgB,MAAL,CAAY,aAAZ,CAAlB;;AACA,QAAImD,eAAe,GAAG,KAAKX,YAAL,CAAkBxD,WAAlB,CAAtB;;AACA,SAAK6D,mBAAL,CAAyBN,IAAzB,CAA8BY,eAA9B;AACH;;AACDC,EAAAA,mBAAmB,CAACpE,WAAD,EAAc;AAC7B,WAAOjC,QAAQ,CAACiC,WAAD,CAAR,GAAwBA,WAAW,CAACa,IAAZ,IAAoBb,WAAW,CAAC6C,IAAxD,GAA+D7C,WAAtE;AACH;;AACDmD,EAAAA,kBAAkB,CAACkB,CAAD,EAAI;AAClB,QAAInD,YAAY,GAAGmD,CAAC,CAACC,QAAF,IAAcD,CAAC,CAACE,SAAF,CAAYvD,MAAZ,CAAmB,cAAnB,CAAjC;;AACA,QAAIwD,QAAQ,GAAG,KAAKJ,mBAAL,CAAyBlD,YAAzB,CAAf;;AACA,SAAKuD,cAAL,CAAoB,oBAApB,EAA0CD,QAA1C;AACH;;AACDE,EAAAA,kBAAkB,GAAG,CAAE;;AACvBD,EAAAA,cAAc,CAACE,OAAD,EAAUhE,IAAV,EAAgB;AAC1B,QAAIuB,QAAQ,GAAG,KAAKlB,MAAL,CAAY,UAAZ,CAAf;;AACA,QAAIkB,QAAJ,EAAc;AACVA,MAAAA,QAAQ,CAAC0C,IAAT,CAAcD,OAAd,EAAuBhE,IAAvB;AACH;AACJ;;AACDkE,EAAAA,MAAM,GAAG;AACL,QAAI3C,QAAQ,GAAG,KAAKlB,MAAL,CAAY,UAAZ,CAAf;;AACA,QAAIkB,QAAJ,EAAc;AACV,aAAOA,QAAQ,CAAC0C,IAAT,CAAcE,KAAd,CAAoB5C,QAApB,EAA8B6C,SAA9B,CAAP;AACH;AACJ;;AAxL8B;AA0LnC1G,iBAAiB,CAAC,mBAAD,EAAsBsB,MAAtB,CAAjB","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/header/header.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../../core/renderer\";\r\nimport {\r\n    isObject,\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    inArray\r\n} from \"../../../core/utils/array\";\r\nimport {\r\n    camelize\r\n} from \"../../../core/utils/inflector\";\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport Widget from \"../../widget/ui.widget\";\r\nimport {\r\n    Navigator\r\n} from \"./navigator\";\r\nimport DropDownMenu from \"../../drop_down_menu\";\r\nimport Tabs from \"../../tabs\";\r\nimport {\r\n    TABS_EXPANDED_CLASS\r\n} from \"../../tabs/constants\";\r\nimport errors from \"../../../core/errors\";\r\nimport messageLocalization from \"../../../localization/message\";\r\nvar COMPONENT_CLASS = \"dx-scheduler-header\";\r\nvar VIEW_SWITCHER_CLASS = \"dx-scheduler-view-switcher\";\r\nvar VIEW_SWITCHER_LABEL_CLASS = \"dx-scheduler-view-switcher-label\";\r\nvar STEP_MAP = {\r\n    day: \"day\",\r\n    week: \"week\",\r\n    workWeek: \"workWeek\",\r\n    month: \"month\",\r\n    timelineDay: \"day\",\r\n    timelineWeek: \"week\",\r\n    timelineWorkWeek: \"workWeek\",\r\n    timelineMonth: \"month\",\r\n    agenda: \"agenda\"\r\n};\r\nvar VIEWS = [\"day\", \"week\", \"workWeek\", \"month\", \"timelineDay\", \"timelineWeek\", \"timelineWorkWeek\", \"timelineMonth\", \"agenda\"];\r\nexport class Header extends Widget {\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            views: [],\r\n            isAdaptive: false,\r\n            intervalCount: 1,\r\n            currentView: \"day\",\r\n            firstDayOfWeek: void 0,\r\n            currentDate: new Date,\r\n            min: void 0,\r\n            max: void 0,\r\n            useDropDownViewSwitcher: false,\r\n            _dropDownButtonIcon: \"overlay\"\r\n        })\r\n    }\r\n    _setOptionsByReference() {\r\n        super._setOptionsByReference();\r\n        extend(this._optionsByReference, {\r\n            currentView: true\r\n        })\r\n    }\r\n    _optionChanged(args) {\r\n        var value = args.value;\r\n        switch (args.name) {\r\n            case \"views\":\r\n                this._validateViews();\r\n                this._viewSwitcher.option({\r\n                    items: value,\r\n                    selectedItem: this.option(\"currentView\")\r\n                });\r\n                break;\r\n            case \"customizeDateNavigatorText\":\r\n                this._navigator.option(args.name, value);\r\n                break;\r\n            case \"currentView\":\r\n                this._viewSwitcher.option(\"selectedItem\", value);\r\n                this._navigator.option(\"step\", STEP_MAP[this._getCurrentViewType()]);\r\n                this._changeViewSwitcherLabelText();\r\n                break;\r\n            case \"currentDate\":\r\n                this._navigator.option(\"date\", value);\r\n                break;\r\n            case \"displayedDate\":\r\n                this._navigator.option(\"displayedDate\", value);\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n            case \"firstDayOfWeek\":\r\n            case \"intervalCount\":\r\n                this._navigator.option(args.name, value);\r\n                break;\r\n            case \"tabIndex\":\r\n            case \"focusStateEnabled\":\r\n                this._viewSwitcher.option(args.name, value);\r\n                this._navigator.option(args.name, value);\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"useDropDownViewSwitcher\":\r\n                this._refreshViewSwitcher();\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this.$element().addClass(COMPONENT_CLASS)\r\n    }\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        this._renderNavigator();\r\n        this._renderViewSwitcher()\r\n    }\r\n    _renderNavigator() {\r\n        this._navigator = this._createComponent(\"<div>\", Navigator, {\r\n            min: this.option(\"min\"),\r\n            max: this.option(\"max\"),\r\n            intervalCount: this.option(\"intervalCount\"),\r\n            date: this.option(\"currentDate\"),\r\n            step: STEP_MAP[this._getCurrentViewType()],\r\n            firstDayOfWeek: this.option(\"firstDayOfWeek\"),\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            observer: this.option(\"observer\"),\r\n            customizeDateNavigatorText: this.option(\"customizeDateNavigatorText\"),\r\n            todayDate: this.option(\"todayDate\")\r\n        });\r\n        this._navigator.$element().appendTo(this.$element())\r\n    }\r\n    _renderViewSwitcher() {\r\n        this._validateViews();\r\n        var $viewSwitcher = $(\"<div>\").addClass(VIEW_SWITCHER_CLASS).appendTo(this.$element());\r\n        this.option(\"useDropDownViewSwitcher\") ? this._renderViewSwitcherDropDownMenu($viewSwitcher) : this._renderViewSwitcherTabs($viewSwitcher)\r\n    }\r\n    _validateViews() {\r\n        var views = this.option(\"views\");\r\n        each(views, (function(_, view) {\r\n            var isViewIsObject = isObject(view);\r\n            var viewType = isViewIsObject && view.type ? view.type : view;\r\n            if (-1 === inArray(viewType, VIEWS)) {\r\n                errors.log(\"W0008\", viewType)\r\n            }\r\n        }))\r\n    }\r\n    _getCurrentViewType() {\r\n        var currentView = this.option(\"currentView\");\r\n        return currentView.type || currentView\r\n    }\r\n    _renderViewSwitcherTabs($element) {\r\n        var that = this;\r\n        $element.addClass(TABS_EXPANDED_CLASS);\r\n        this._viewSwitcher = this._createComponent($element, Tabs, {\r\n            selectionRequired: true,\r\n            scrollingEnabled: true,\r\n            onSelectionChanged: this._updateCurrentView.bind(this),\r\n            items: this.option(\"views\"),\r\n            itemTemplate: function(item) {\r\n                return $(\"<span>\").addClass(\"dx-tab-text\").text(that._getItemText(item))\r\n            },\r\n            selectedItem: this.option(\"currentView\"),\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\")\r\n        })\r\n    }\r\n    _getItemText(item) {\r\n        return item.name || messageLocalization.format(\"dxScheduler-switcher\" + camelize(item.type || item, true))\r\n    }\r\n    _refreshViewSwitcher() {\r\n        this._viewSwitcher._dispose();\r\n        this._viewSwitcher.$element().remove();\r\n        delete this._viewSwitcher;\r\n        this._removeViewSwitcherLabel();\r\n        this._renderViewSwitcher()\r\n    }\r\n    _removeViewSwitcherLabel() {\r\n        if (isDefined(this._$viewSwitcherLabel)) {\r\n            this._$viewSwitcherLabel.detach();\r\n            this._$viewSwitcherLabel.remove();\r\n            delete this._$viewSwitcherLabel\r\n        }\r\n    }\r\n    _renderViewSwitcherDropDownMenu($element) {\r\n        var that = this;\r\n        this._$viewSwitcherLabel = $(\"<div>\").addClass(VIEW_SWITCHER_LABEL_CLASS).appendTo(this.$element());\r\n        this._changeViewSwitcherLabelText();\r\n        this._viewSwitcher = this._createComponent($element, DropDownMenu, {\r\n            onItemClick: this._updateCurrentView.bind(this),\r\n            buttonIcon: this.option(\"_dropDownButtonIcon\"),\r\n            items: this.option(\"views\"),\r\n            selectionMode: this.option(\"isAdaptive\") ? \"single\" : \"none\",\r\n            selectedItemKeys: [this.option(\"currentView\")],\r\n            itemTemplate: function(item) {\r\n                return $(\"<span>\").addClass(\"dx-dropdownmenu-item-text\").text(that._getItemText(item))\r\n            }\r\n        })\r\n    }\r\n    _changeViewSwitcherLabelText() {\r\n        if (!isDefined(this._$viewSwitcherLabel)) {\r\n            return\r\n        }\r\n        var currentView = this.option(\"currentView\");\r\n        var currentViewText = this._getItemText(currentView);\r\n        this._$viewSwitcherLabel.text(currentViewText)\r\n    }\r\n    _getCurrentViewName(currentView) {\r\n        return isObject(currentView) ? currentView.name || currentView.type : currentView\r\n    }\r\n    _updateCurrentView(e) {\r\n        var selectedItem = e.itemData || e.component.option(\"selectedItem\");\r\n        var viewName = this._getCurrentViewName(selectedItem);\r\n        this.notifyObserver(\"currentViewUpdated\", viewName)\r\n    }\r\n    _renderFocusTarget() {}\r\n    notifyObserver(subject, args) {\r\n        var observer = this.option(\"observer\");\r\n        if (observer) {\r\n            observer.fire(subject, args)\r\n        }\r\n    }\r\n    invoke() {\r\n        var observer = this.option(\"observer\");\r\n        if (observer) {\r\n            return observer.fire.apply(observer, arguments)\r\n        }\r\n    }\r\n}\r\nregisterComponent(\"dxSchedulerHeader\", Header);\r\n"]},"metadata":{},"sourceType":"module"}