{"ast":null,"code":"var _jsxFileName = \"/home/igor/welcomedev-react-starter/src/components/GoogleCalendar.tsx\",\n    _s = $RefreshSig$();\n\n//---------------------------------------------\n// import 'whatwg-fetch';\n// import React from 'react';\n// import Scheduler from 'devextreme-react/scheduler';\n// import CustomStore from 'devextreme/data/custom_store';\n// function getData(_:any, requestOptions:any) {\n//   const PUBLIC_KEY = 'AIzaSyBnNAISIUKe6xdhq1_rjor2rxoI3UlMY7k',\n//     CALENDAR_ID = 'f7jnetm22dsjc3npc2lu3buvu4@group.calendar.google.com';\n//   const dataUrl = [ 'https://www.googleapis.com/calendar/v3/calendars/',\n//     CALENDAR_ID, '/events?key=', PUBLIC_KEY].join('');\n//   return fetch(dataUrl, requestOptions).then(\n//     (response) => response.json()\n//   ).then((data) => data.items);\n// }\n// const dataSource = new CustomStore({\n//   load: (options) => getData(options, { showDeleted: false })\n// });\n// const currentDate = new Date();\n// const views:any = ['day', 'workWeek', 'month'];\n// class GoogleCalendar extends React.Component {\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <div className=\"long-title\">\n//           <h3>QCerris</h3>\n//         </div>\n//         <Scheduler\n//           dataSource={dataSource}\n//           views={views}\n//           defaultCurrentView=\"workWeek\"\n//           defaultCurrentDate={currentDate}\n//           height={500}\n//           startDayHour={7}\n//           editing={false}\n//           showAllDayPanel={false}\n//           startDateExpr=\"start.dateTime\"\n//           endDateExpr=\"end.dateTime\"\n//           textExpr=\"summary\"\n//           timeZone=\"Europe/Belgrade\" />\n//       </React.Fragment>\n//     );\n//   }\n// }\n// export default GoogleCalendar;\nimport * as React from 'react'; // import Box from '@mui/material/Box';\n// import AdapterDateFns from '@mui/lab/AdapterDateFns';\n// import LocalizationProvider from '@mui/lab/LocalizationProvider';\n// import DesktopDatePicker from '@mui/lab/DatePicker';\n\nimport Button from '@mui/material/Button'; // import DatePicker1 from './DatePicker1';\n// import DatePicker2 from './DatePicker2';\n// import DateFnsUtils from '@date-io/date-fns'; // choose your lib\n\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { Stack } from '@mui/material';\nimport { Avatar } from 'material-ui';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomInput() {\n  _s();\n\n  const [selectedDate, handleDateChange] = React.useState(new Date());\n  const [selectedDate1, handleDateChange1] = React.useState(new Date()); // const [value1, setValue1] = React.useState<Date | null | number|any>(new Date());\n\n  function getDifferenceInDays(date1, date2) {\n    const diffInMs = Math.abs(date2 - date1);\n    return diffInMs / (1000 * 60 * 60 * 24);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        value: selectedDate,\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        value: selectedDate1,\n        onChange: handleDateChange1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: getDifferenceInDays(selectedDate.getTime(), selectedDate1.getTime()) ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"error\",\n        children: \" Error \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 2,\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          src: \"/static/iamges/QCERRIS.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomInput, \"Wx9x1O2G54ANm5nObTRPiZfB0Yw=\");\n\n_c = CustomInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"sources":["/home/igor/welcomedev-react-starter/src/components/GoogleCalendar.tsx"],"names":["React","Button","DatePicker","MuiPickersUtilsProvider","DateFnsUtils","Stack","Avatar","CustomInput","selectedDate","handleDateChange","useState","Date","selectedDate1","handleDateChange1","getDifferenceInDays","date1","date2","diffInMs","Math","abs","getTime"],"mappings":";;;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB,C,CACA;AACA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;AACA;AACA;;AACA,SACEC,UADF,EAEEC,uBAFF,QAGO,sBAHP;AAIA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,MAAT,QAAuB,aAAvB;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAClC,QAAM,CAACC,YAAD,EAAeC,gBAAf,IAAmCT,KAAK,CAACU,QAAN,CAAyC,IAAIC,IAAJ,EAAzC,CAAzC;AACA,QAAM,CAACC,aAAD,EAAgBC,iBAAhB,IAAqCb,KAAK,CAACU,QAAN,CAAyC,IAAIC,IAAJ,EAAzC,CAA3C,CAFkC,CAIlC;;AAEA,WAASG,mBAAT,CAA6BC,KAA7B,EAAyDC,KAAzD,EAAqF;AACjF,UAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASH,KAAK,GAAGD,KAAjB,CAAjB;AACA,WAAOE,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAf;AACH;;AAED,sBACI;AAAA,4BAGQ,QAAC,uBAAD;AAAyB,MAAA,KAAK,EAAEb,YAAhC;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEI,YAAnB;AAAiC,QAAA,QAAQ,EAAEC;AAA3C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEG,aAAnB;AAAkC,QAAA,QAAQ,EAAEC;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHR,eAQI;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAA,gBACKC,mBAAmB,CAACN,YAAY,CAACY,OAAb,EAAD,EAAwBR,aAAa,CAACQ,OAAd,EAAxB,CAAnB,gBACG,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,gBAGG,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,YATJ,eAgBI;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,KAAjB;AAAuB,QAAA,OAAO,EAAE,CAAhC;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,GAAG,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GAnCuBb,W;;KAAAA,W","sourcesContent":["//---------------------------------------------\n\n// import 'whatwg-fetch';\n// import React from 'react';\n// import Scheduler from 'devextreme-react/scheduler';\n// import CustomStore from 'devextreme/data/custom_store';\n\n// function getData(_:any, requestOptions:any) {\n\n//   const PUBLIC_KEY = 'AIzaSyBnNAISIUKe6xdhq1_rjor2rxoI3UlMY7k',\n//     CALENDAR_ID = 'f7jnetm22dsjc3npc2lu3buvu4@group.calendar.google.com';\n//   const dataUrl = [ 'https://www.googleapis.com/calendar/v3/calendars/',\n//     CALENDAR_ID, '/events?key=', PUBLIC_KEY].join('');\n\n//   return fetch(dataUrl, requestOptions).then(\n//     (response) => response.json()\n//   ).then((data) => data.items);\n// }\n\n// const dataSource = new CustomStore({\n//   load: (options) => getData(options, { showDeleted: false })\n// });\n\n// const currentDate = new Date();\n// const views:any = ['day', 'workWeek', 'month'];\n\n// class GoogleCalendar extends React.Component {\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <div className=\"long-title\">\n//           <h3>QCerris</h3>\n//         </div>\n//         <Scheduler\n//           dataSource={dataSource}\n//           views={views}\n//           defaultCurrentView=\"workWeek\"\n//           defaultCurrentDate={currentDate}\n//           height={500}\n//           startDayHour={7}\n//           editing={false}\n//           showAllDayPanel={false}\n//           startDateExpr=\"start.dateTime\"\n//           endDateExpr=\"end.dateTime\"\n//           textExpr=\"summary\"\n//           timeZone=\"Europe/Belgrade\" />\n//       </React.Fragment>\n\n//     );\n//   }\n// }\n\n// export default GoogleCalendar;\n\nimport * as React from 'react';\n// import Box from '@mui/material/Box';\n// import AdapterDateFns from '@mui/lab/AdapterDateFns';\n// import LocalizationProvider from '@mui/lab/LocalizationProvider';\n// import DesktopDatePicker from '@mui/lab/DatePicker';\nimport Button from '@mui/material/Button';\n// import DatePicker1 from './DatePicker1';\n// import DatePicker2 from './DatePicker2';\n// import DateFnsUtils from '@date-io/date-fns'; // choose your lib\nimport {\n  DatePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { Stack } from '@mui/material';\nimport { Avatar } from 'material-ui';\n\nexport default function CustomInput() {\n    const [selectedDate, handleDateChange] = React.useState<Date | null | number|any>(new Date());\n    const [selectedDate1, handleDateChange1] = React.useState<Date | null | number|any>(new Date());\n\n    // const [value1, setValue1] = React.useState<Date | null | number|any>(new Date());\n\n    function getDifferenceInDays(date1: number | Date | any, date2: number | Date | any) {\n        const diffInMs = Math.abs(date2 - date1);\n        return diffInMs / (1000 * 60 * 60 * 24);\n    }\n\n    return (\n        <div>\n            \n            \n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker value={selectedDate} onChange={handleDateChange} />\n                    <DatePicker value={selectedDate1} onChange={handleDateChange1} />\n                </MuiPickersUtilsProvider>\n         \n            <br/>\n            <div>\n                {getDifferenceInDays(selectedDate.getTime(),selectedDate1.getTime()) ?  \n                    <Button variant=\"contained\" color=\"success\" > Submit </Button> \n                    : \n                    <Button variant=\"contained\" color=\"error\"> Error </Button>\n                }\n            </div>\n            <div>\n                <Stack direction=\"row\" spacing={2}>\n                    <Avatar src=\"/static/iamges/QCERRIS.svg\" />\n                </Stack>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}