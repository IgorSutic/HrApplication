{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/subscribes.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { wrapToArray, inArray } from \"../../core/utils/array\";\nimport { isDefined, isPlainObject } from \"../../core/utils/type\";\nimport dateUtils from \"../../core/utils/date\";\nimport { each } from \"../../core/utils/iterator\";\nimport errors from \"../widget/ui.errors\";\nimport { locate } from \"../../animation/translator\";\nimport { grep } from \"../../core/utils/common\";\nimport { extend } from \"../../core/utils/extend\";\nimport { Deferred } from \"../../core/utils/deferred\";\nimport dateLocalization from \"../../localization/date\";\nimport timeZoneUtils from \"./utils.timeZone\";\nimport { AGENDA_LAST_IN_DATE_APPOINTMENT_CLASS } from \"./constants\";\nimport utils from \"./utils\";\nimport { getFieldExpr as getResourceFieldExpr } from \"./resources/utils\";\nvar toMs = dateUtils.dateToMilliseconds;\nvar subscribes = {\n  getTimeZoneCalculator: function () {\n    return this.timeZoneCalculator;\n  },\n  isCurrentViewAgenda: function () {\n    return \"agenda\" === this.option(\"currentView\");\n  },\n  currentViewUpdated: function (currentView) {\n    this.option(\"currentView\", currentView);\n  },\n  currentDateUpdated: function (date) {\n    this.option(\"currentDate\", date);\n  },\n  getOption: function (name) {\n    return this.option(name);\n  },\n  isVirtualScrolling: function () {\n    return this.isVirtualScrolling();\n  },\n  setCellDataCacheAlias: function (appointment, geometry) {\n    this._workSpace.setCellDataCacheAlias(appointment, geometry);\n  },\n  createAppointmentSettings: function (appointment) {\n    return this._getAppointmentSettingsGenerator().create(appointment);\n  },\n  isGroupedByDate: function () {\n    return this.getWorkSpace().isGroupedByDate();\n  },\n  showAppointmentTooltip: function (options) {\n    var targetedAppointment = this.getTargetedAppointment(options.data, options.target);\n    this.showAppointmentTooltip(options.data, options.target, targetedAppointment);\n  },\n  hideAppointmentTooltip: function () {\n    this.hideAppointmentTooltip();\n  },\n  showAddAppointmentPopup: function (cellData, cellGroups) {\n    var appointmentAdapter = this.createAppointmentAdapter({});\n    appointmentAdapter.allDay = cellData.allDay;\n    appointmentAdapter.startDate = this.timeZoneCalculator.createDate(cellData.startDate, {\n      path: \"fromGrid\"\n    });\n    appointmentAdapter.endDate = this.timeZoneCalculator.createDate(cellData.endDate, {\n      path: \"fromGrid\"\n    });\n    var resultAppointment = extend(appointmentAdapter.source(), cellGroups);\n    this.showAppointmentPopup(resultAppointment, true);\n  },\n  showEditAppointmentPopup: function (options) {\n    var targetedData = this.getTargetedAppointment(options.data, options.target);\n    this.showAppointmentPopup(options.data, false, targetedData);\n  },\n  updateAppointmentAfterResize: function (options) {\n    var info = utils.dataAccessors.getAppointmentInfo(options.$appointment);\n    var exceptionDate = info.sourceAppointment.exceptionDate;\n\n    this._checkRecurringAppointment(options.target, options.data, exceptionDate, function () {\n      this._updateAppointment(options.target, options.data, function () {\n        this._appointments.moveAppointmentBack();\n      });\n    }.bind(this));\n  },\n  getUpdatedData: function (rawAppointment) {\n    return this._getUpdatedData(rawAppointment);\n  },\n  updateAppointmentAfterDrag: function (_ref) {\n    var {\n      event: event,\n      element: element,\n      rawAppointment: rawAppointment,\n      coordinates: coordinates\n    } = _ref;\n    var info = utils.dataAccessors.getAppointmentInfo(element);\n    var appointment = this.createAppointmentAdapter(rawAppointment);\n    var targetedAppointment = this.createAppointmentAdapter(extend({}, rawAppointment, this._getUpdatedData(rawAppointment)));\n    var targetedRawAppointment = targetedAppointment.source();\n\n    var newCellIndex = this._workSpace.getDroppableCellIndex();\n\n    var oldCellIndex = this._workSpace.getCellIndexByCoordinates(coordinates);\n\n    var becomeAllDay = targetedAppointment.allDay;\n    var wasAllDay = appointment.allDay;\n    var movedBetweenAllDayAndSimple = this._workSpace.supportAllDayRow() && (wasAllDay && !becomeAllDay || !wasAllDay && becomeAllDay);\n\n    if (newCellIndex !== oldCellIndex || movedBetweenAllDayAndSimple) {\n      this._checkRecurringAppointment(rawAppointment, targetedRawAppointment, info.sourceAppointment.exceptionDate, function () {\n        this._updateAppointment(rawAppointment, targetedRawAppointment, function () {\n          this._appointments.moveAppointmentBack(event);\n        }, event);\n      }.bind(this), void 0, void 0, event);\n    } else {\n      this._appointments.moveAppointmentBack(event);\n    }\n  },\n  onDeleteButtonPress: function (options) {\n    var targetedData = this.getTargetedAppointment(options.data, $(options.target));\n    this.checkAndDeleteAppointment(options.data, targetedData);\n    this.hideAppointmentTooltip();\n  },\n  getAppointmentColor: function (options) {\n    var resourcesManager = this._resourcesManager;\n    var resourceForPainting = resourcesManager.getResourceForPainting(this._getCurrentViewOption(\"groups\"));\n    var response = new Deferred().resolve().promise();\n\n    if (resourceForPainting) {\n      var field = getResourceFieldExpr(resourceForPainting);\n      var groupIndex = options.groupIndex;\n\n      var groups = this._workSpace._getCellGroups(groupIndex);\n\n      var resourceValues = wrapToArray(resourcesManager.getDataAccessors(field, \"getter\")(options.itemData));\n      var groupId = resourceValues.length ? resourceValues[0] : void 0;\n\n      for (var i = 0; i < groups.length; i++) {\n        if (groups[i].name === field) {\n          groupId = groups[i].id;\n          break;\n        }\n      }\n\n      response = resourcesManager.getResourceColor(field, groupId);\n    }\n\n    return response;\n  },\n  getHeaderHeight: function () {\n    return this._header._$element && parseInt(this._header._$element.outerHeight(), 10);\n  },\n  getResourcesFromItem: function (itemData) {\n    return this._resourcesManager.getResourcesFromItem(itemData);\n  },\n  appointmentTakesSeveralDays: function (appointment) {\n    return this._appointmentModel.appointmentTakesSeveralDays(appointment);\n  },\n\n  getTextAndFormatDate(appointmentRaw, targetedAppointmentRaw, format) {\n    var appointmentAdapter = this.createAppointmentAdapter(appointmentRaw);\n    var targetedAdapter = this.createAppointmentAdapter(targetedAppointmentRaw || appointmentRaw);\n    var startDate = this.timeZoneCalculator.createDate(targetedAdapter.startDate, {\n      path: \"toGrid\"\n    });\n    var endDate = this.timeZoneCalculator.createDate(targetedAdapter.endDate, {\n      path: \"toGrid\"\n    });\n    var formatType = format || this.fire(\"_getTypeFormat\", startDate, endDate, targetedAdapter.allDay);\n    return {\n      text: targetedAdapter.text || appointmentAdapter.text,\n      formatDate: this.fire(\"_formatDates\", startDate, endDate, formatType)\n    };\n  },\n\n  _getTypeFormat(startDate, endDate, isAllDay) {\n    if (isAllDay) {\n      return \"DATE\";\n    }\n\n    if (\"month\" !== this.option(\"currentView\") && dateUtils.sameDate(startDate, endDate)) {\n      return \"TIME\";\n    }\n\n    return \"DATETIME\";\n  },\n\n  _createAppointmentTitle(data) {\n    if (isPlainObject(data)) {\n      return data.text;\n    }\n\n    return String(data);\n  },\n\n  _formatDates(startDate, endDate, formatType) {\n    var isSameDate = startDate.getDate() === endDate.getDate();\n\n    switch (formatType) {\n      case \"DATETIME\":\n        return [dateLocalization.format(startDate, \"monthandday\"), \" \", dateLocalization.format(startDate, \"shorttime\"), \" - \", isSameDate ? \"\" : dateLocalization.format(endDate, \"monthandday\") + \" \", dateLocalization.format(endDate, \"shorttime\")].join(\"\");\n\n      case \"TIME\":\n        return \"\".concat(dateLocalization.format(startDate, \"shorttime\"), \" - \").concat(dateLocalization.format(endDate, \"shorttime\"));\n\n      case \"DATE\":\n        return \"\".concat(dateLocalization.format(startDate, \"monthandday\")).concat(isSameDate ? \"\" : \" - \" + dateLocalization.format(endDate, \"monthandday\"));\n    }\n  },\n\n  getResizableAppointmentArea: function (options) {\n    var allDay = options.allDay;\n\n    var groups = this._getCurrentViewOption(\"groups\");\n\n    if (groups && groups.length) {\n      if (allDay || this.getLayoutManager().getRenderingStrategyInstance()._needHorizontalGroupBounds()) {\n        var horizontalGroupBounds = this._workSpace.getGroupBounds(options.coordinates);\n\n        return {\n          left: horizontalGroupBounds.left,\n          right: horizontalGroupBounds.right,\n          top: 0,\n          bottom: 0\n        };\n      }\n\n      if (this.getLayoutManager().getRenderingStrategyInstance()._needVerticalGroupBounds(allDay) && this._workSpace._isVerticalGroupedWorkSpace()) {\n        var verticalGroupBounds = this._workSpace.getGroupBounds(options.coordinates);\n\n        return {\n          left: 0,\n          right: 0,\n          top: verticalGroupBounds.top,\n          bottom: verticalGroupBounds.bottom\n        };\n      }\n    }\n  },\n  needRecalculateResizableArea: function () {\n    return this.getWorkSpace().needRecalculateResizableArea();\n  },\n  getAppointmentGeometry: function (settings) {\n    return this.getLayoutManager().getRenderingStrategyInstance().getAppointmentGeometry(settings);\n  },\n  isAllDay: function (appointmentData) {\n    return this.getLayoutManager().getRenderingStrategyInstance().isAllDay(appointmentData);\n  },\n  getDeltaTime: function (e, initialSize, itemData) {\n    return this.getLayoutManager().getRenderingStrategyInstance().getDeltaTime(e, initialSize, itemData);\n  },\n  getDropDownAppointmentWidth: function (isAllDay) {\n    return this.getLayoutManager().getRenderingStrategyInstance().getDropDownAppointmentWidth(this._getViewCountConfig().intervalCount, isAllDay);\n  },\n  getDropDownAppointmentHeight: function () {\n    return this.getLayoutManager().getRenderingStrategyInstance().getDropDownAppointmentHeight();\n  },\n  getCellWidth: function () {\n    return this.getWorkSpace().getCellWidth();\n  },\n  getCellHeight: function () {\n    return this.getWorkSpace().getCellHeight();\n  },\n  getResizableStep: function () {\n    var workSpace = this.getWorkSpace();\n    var cellWidth = workSpace.getCellWidth();\n\n    if (workSpace.isGroupedByDate()) {\n      return workSpace._getGroupCount() * cellWidth;\n    }\n\n    return cellWidth;\n  },\n  getRenderingStrategy: function () {\n    return this._getAppointmentsRenderingStrategy();\n  },\n  getMaxAppointmentCountPerCellByType: function (isAllDay) {\n    return this.getRenderingStrategyInstance()._getMaxAppointmentCountPerCellByType(isAllDay);\n  },\n  needCorrectAppointmentDates: function () {\n    return this.getRenderingStrategyInstance().needCorrectAppointmentDates();\n  },\n  getRenderingStrategyDirection: function () {\n    return this.getRenderingStrategyInstance().getDirection();\n  },\n  getWorkSpaceDateTableOffset: function () {\n    return this.getWorkSpaceDateTableOffset();\n  },\n  getFullWeekAppointmentWidth: function (options) {\n    var groupIndex = options.groupIndex;\n    return this._workSpace.getGroupWidth(groupIndex);\n  },\n  getMaxAppointmentWidth: function (options) {\n    var workSpace = this._workSpace;\n    return workSpace.getCellCountToLastViewDate(options.date) * workSpace.getCellWidth();\n  },\n  updateAppointmentStartDate: function (options) {\n    var appointment = options.appointment;\n\n    var firstViewDate = this._workSpace.getStartViewDate();\n\n    var startDate = new Date(options.startDate);\n\n    var startDayHour = this._getCurrentViewOption(\"startDayHour\");\n\n    var updatedStartDate;\n\n    if (this.appointmentTakesAllDay(appointment)) {\n      updatedStartDate = dateUtils.normalizeDate(startDate, firstViewDate);\n    } else {\n      if (startDate < firstViewDate) {\n        startDate = firstViewDate;\n      }\n\n      updatedStartDate = dateUtils.normalizeDate(options.startDate, new Date(startDate));\n    }\n\n    return dateUtils.roundDateByStartDayHour(updatedStartDate, startDayHour);\n  },\n  updateAppointmentEndDate: function (options) {\n    var endDate = options.endDate;\n\n    var endDayHour = this._getCurrentViewOption(\"endDayHour\");\n\n    var startDayHour = this._getCurrentViewOption(\"startDayHour\");\n\n    var updatedEndDate = endDate;\n\n    if (endDate.getHours() >= endDayHour) {\n      updatedEndDate.setHours(endDayHour, 0, 0, 0);\n    } else if (!options.isSameDate && startDayHour > 0 && 60 * endDate.getHours() + endDate.getMinutes() < 60 * startDayHour) {\n      updatedEndDate = new Date(updatedEndDate.getTime() - toMs(\"day\"));\n      updatedEndDate.setHours(endDayHour, 0, 0, 0);\n    }\n\n    return updatedEndDate;\n  },\n  renderCompactAppointments: function (options) {\n    this._compactAppointmentsHelper.render(options);\n  },\n  clearCompactAppointments: function () {\n    this._compactAppointmentsHelper.clear();\n  },\n  supportCompactDropDownAppointments: function () {\n    return this._workSpace._supportCompactDropDownAppointments();\n  },\n  isApplyCompactAppointmentOffset: function () {\n    return this._workSpace._isApplyCompactAppointmentOffset();\n  },\n  getGroupCount: function () {\n    return this._workSpace._getGroupCount();\n  },\n  mapAppointmentFields: function (config) {\n    var {\n      itemData: itemData,\n      itemElement: itemElement,\n      targetedAppointment: targetedAppointment\n    } = config;\n    var targetedData = targetedAppointment || this.getTargetedAppointment(itemData, itemElement);\n    return {\n      appointmentData: config.itemData,\n      appointmentElement: config.itemElement,\n      targetedAppointmentData: targetedData\n    };\n  },\n  getOffsetByAllDayPanel: function (groupIndex) {\n    return this._workSpace._getOffsetByAllDayPanel(groupIndex);\n  },\n  getGroupTop: function (groupIndex) {\n    return this._workSpace._getGroupTop(groupIndex);\n  },\n  updateResizableArea: function () {\n    var $allResizableElements = this.$element().find(\".dx-scheduler-appointment.dx-resizable\");\n    var horizontalResizables = grep($allResizableElements, function (el) {\n      var $el = $(el);\n      var resizableInst = $el.dxResizable(\"instance\");\n      var area = resizableInst.option(\"area\");\n      return inArray(resizableInst.option(\"handles\"), [\"right left\", \"left right\"]) > -1 && isPlainObject(area);\n    });\n    each(horizontalResizables, function (_, el) {\n      var $el = $(el);\n      var position = locate($el);\n\n      var appointmentData = this._appointments._getItemData($el);\n\n      var area = this._appointments._calculateResizableArea({\n        left: position.left\n      }, appointmentData);\n\n      $el.dxResizable(\"instance\").option(\"area\", area);\n    }.bind(this));\n  },\n  getField: function (field, obj) {\n    if (!isDefined(this._dataAccessors.getter[field])) {\n      return;\n    }\n\n    return this._dataAccessors.getter[field](obj);\n  },\n  setField: function (field, obj, value) {\n    if (!isDefined(this._dataAccessors.setter[field])) {\n      return;\n    }\n\n    var splitExprStr = this.option(field + \"Expr\").split(\".\");\n    var rootField = splitExprStr[0];\n\n    if (void 0 === obj[rootField] && splitExprStr.length > 1) {\n      var emptyChain = function (arr) {\n        var result = {};\n        var tmp = result;\n        var arrLength = arr.length - 1;\n\n        for (var i = 1; i < arrLength; i++) {\n          tmp = tmp[arr[i]] = {};\n        }\n\n        return result;\n      }(splitExprStr);\n\n      obj[rootField] = emptyChain;\n    }\n\n    this._dataAccessors.setter[field](obj, value);\n\n    return obj;\n  },\n  renderAppointments: function () {\n    this._renderAppointments();\n  },\n  dayHasAppointment: function (day, appointment, trimTime) {\n    return this.dayHasAppointment(day, appointment, trimTime);\n  },\n  createResourcesTree: function () {\n    return this._resourcesManager.createResourcesTree(this._loadedResources);\n  },\n  getResourceTreeLeaves: function (tree, appointmentResources) {\n    return this._resourcesManager.getResourceTreeLeaves(tree, appointmentResources);\n  },\n  createReducedResourcesTree: function () {\n    var tree = this._resourcesManager.createResourcesTree(this._loadedResources);\n\n    return this._resourcesManager.reduceResourcesTree(tree, this.getFilteredItems());\n  },\n  groupAppointmentsByResources: function (appointments) {\n    var result = {\n      0: appointments\n    };\n\n    var groups = this._getCurrentViewOption(\"groups\");\n\n    if (groups && groups.length && this._resourcesManager.getResourcesData().length) {\n      result = this._resourcesManager.groupAppointmentsByResources(appointments, this._loadedResources);\n    }\n\n    var totalResourceCount = 0;\n    each(this._loadedResources, function (i, resource) {\n      if (!i) {\n        totalResourceCount = resource.items.length;\n      } else {\n        totalResourceCount *= resource.items.length;\n      }\n    });\n\n    for (var j = 0; j < totalResourceCount; j++) {\n      var index = j.toString();\n\n      if (result[index]) {\n        continue;\n      }\n\n      result[index] = [];\n    }\n\n    return result;\n  },\n  getLayoutManager: function () {\n    return this._layoutManager;\n  },\n  getAgendaVerticalStepHeight: function () {\n    return this.getWorkSpace().getAgendaVerticalStepHeight();\n  },\n  getAgendaDuration: function () {\n    return this._getCurrentViewOption(\"agendaDuration\");\n  },\n  getStartViewDate: function () {\n    return this.getStartViewDate();\n  },\n  getEndViewDate: function () {\n    return this.getEndViewDate();\n  },\n  getMaxAppointmentsPerCell: function () {\n    return this.getMaxAppointmentsPerCell();\n  },\n  forceMaxAppointmentPerCell: function () {\n    return this.forceMaxAppointmentPerCell();\n  },\n  onAgendaReady: function (rows) {\n    var $appts = this.getAppointmentsInstance()._itemElements();\n\n    var total = 0;\n\n    var applyClass = function (_, count) {\n      var index = count + total - 1;\n      $appts.eq(index).addClass(AGENDA_LAST_IN_DATE_APPOINTMENT_CLASS);\n      total += count;\n    };\n\n    for (var i = 0; i < rows.length; i++) {\n      each(rows[i], applyClass);\n    }\n  },\n  getTimezone: function () {\n    return this._getTimezoneOffsetByOption();\n  },\n  getTargetedAppointmentData: function (appointment, element) {\n    return this.getTargetedAppointment(appointment, element);\n  },\n  getAppointmentDurationInMs: function (options) {\n    var startDate = options.startDate;\n    var endDate = options.endDate;\n    var allDay = options.allDay;\n    var appointmentDuration = endDate.getTime() - startDate.getTime();\n    var dayDuration = toMs(\"day\");\n\n    var visibleDayDuration = this._workSpace.getVisibleDayDuration();\n\n    var result = 0;\n\n    if (allDay) {\n      var ceilQuantityOfDays = Math.ceil(appointmentDuration / dayDuration);\n      result = ceilQuantityOfDays * visibleDayDuration;\n    } else {\n      var isDifferentDates = !timeZoneUtils.isSameAppointmentDates(startDate, endDate);\n      var floorQuantityOfDays = Math.floor(appointmentDuration / dayDuration);\n      var tailDuration;\n\n      if (isDifferentDates) {\n        var startDateEndHour = new Date(new Date(startDate).setHours(this.option(\"endDayHour\"), 0, 0));\n        var hiddenDayDuration = dayDuration - visibleDayDuration - (startDate.getTime() > startDateEndHour.getTime() ? startDate.getTime() - startDateEndHour.getTime() : 0);\n        tailDuration = appointmentDuration - (floorQuantityOfDays ? floorQuantityOfDays * dayDuration : hiddenDayDuration);\n        var startDayTime = this.option(\"startDayHour\") * toMs(\"hour\");\n        var endPartDuration = endDate - dateUtils.trimTime(endDate);\n\n        if (endPartDuration < startDayTime) {\n          if (floorQuantityOfDays) {\n            tailDuration -= hiddenDayDuration;\n          }\n\n          tailDuration += startDayTime - endPartDuration;\n        }\n      } else {\n        tailDuration = appointmentDuration % dayDuration;\n      }\n\n      if (tailDuration > visibleDayDuration) {\n        tailDuration = visibleDayDuration;\n      }\n\n      result = floorQuantityOfDays * visibleDayDuration + tailDuration || toMs(\"minute\");\n    }\n\n    return result;\n  },\n  replaceWrongEndDate: function (appointment, startDate, endDate) {\n    this._appointmentModel.replaceWrongEndDate(appointment, startDate, endDate);\n  },\n  calculateAppointmentEndDate: function (isAllDay, startDate) {\n    return this._appointmentModel._calculateAppointmentEndDate(isAllDay, startDate);\n  },\n  getEndDayHour: function () {\n    return this._workSpace.option(\"endDayHour\") || this.option(\"endDayHour\");\n  },\n  getStartDayHour: function () {\n    return this._workSpace.option(\"startDayHour\") || this.option(\"startDayHour\");\n  },\n  isAdaptive: function () {\n    return this.option(\"adaptivityEnabled\");\n  },\n  validateDayHours: function () {\n    var endDayHour = this._getCurrentViewOption(\"endDayHour\");\n\n    var startDayHour = this._getCurrentViewOption(\"startDayHour\");\n\n    if (startDayHour >= endDayHour) {\n      throw errors.Error(\"E1058\");\n    }\n  },\n  removeDroppableCellClass: function () {\n    this._workSpace.removeDroppableCellClass();\n  }\n};\nexport default subscribes;","map":{"version":3,"sources":["/home/igor/node_modules/devextreme/esm/ui/scheduler/subscribes.js"],"names":["$","wrapToArray","inArray","isDefined","isPlainObject","dateUtils","each","errors","locate","grep","extend","Deferred","dateLocalization","timeZoneUtils","AGENDA_LAST_IN_DATE_APPOINTMENT_CLASS","utils","getFieldExpr","getResourceFieldExpr","toMs","dateToMilliseconds","subscribes","getTimeZoneCalculator","timeZoneCalculator","isCurrentViewAgenda","option","currentViewUpdated","currentView","currentDateUpdated","date","getOption","name","isVirtualScrolling","setCellDataCacheAlias","appointment","geometry","_workSpace","createAppointmentSettings","_getAppointmentSettingsGenerator","create","isGroupedByDate","getWorkSpace","showAppointmentTooltip","options","targetedAppointment","getTargetedAppointment","data","target","hideAppointmentTooltip","showAddAppointmentPopup","cellData","cellGroups","appointmentAdapter","createAppointmentAdapter","allDay","startDate","createDate","path","endDate","resultAppointment","source","showAppointmentPopup","showEditAppointmentPopup","targetedData","updateAppointmentAfterResize","info","dataAccessors","getAppointmentInfo","$appointment","exceptionDate","sourceAppointment","_checkRecurringAppointment","_updateAppointment","_appointments","moveAppointmentBack","bind","getUpdatedData","rawAppointment","_getUpdatedData","updateAppointmentAfterDrag","_ref","event","element","coordinates","targetedRawAppointment","newCellIndex","getDroppableCellIndex","oldCellIndex","getCellIndexByCoordinates","becomeAllDay","wasAllDay","movedBetweenAllDayAndSimple","supportAllDayRow","onDeleteButtonPress","checkAndDeleteAppointment","getAppointmentColor","resourcesManager","_resourcesManager","resourceForPainting","getResourceForPainting","_getCurrentViewOption","response","resolve","promise","field","groupIndex","groups","_getCellGroups","resourceValues","getDataAccessors","itemData","groupId","length","i","id","getResourceColor","getHeaderHeight","_header","_$element","parseInt","outerHeight","getResourcesFromItem","appointmentTakesSeveralDays","_appointmentModel","getTextAndFormatDate","appointmentRaw","targetedAppointmentRaw","format","targetedAdapter","formatType","fire","text","formatDate","_getTypeFormat","isAllDay","sameDate","_createAppointmentTitle","String","_formatDates","isSameDate","getDate","join","concat","getResizableAppointmentArea","getLayoutManager","getRenderingStrategyInstance","_needHorizontalGroupBounds","horizontalGroupBounds","getGroupBounds","left","right","top","bottom","_needVerticalGroupBounds","_isVerticalGroupedWorkSpace","verticalGroupBounds","needRecalculateResizableArea","getAppointmentGeometry","settings","appointmentData","getDeltaTime","e","initialSize","getDropDownAppointmentWidth","_getViewCountConfig","intervalCount","getDropDownAppointmentHeight","getCellWidth","getCellHeight","getResizableStep","workSpace","cellWidth","_getGroupCount","getRenderingStrategy","_getAppointmentsRenderingStrategy","getMaxAppointmentCountPerCellByType","_getMaxAppointmentCountPerCellByType","needCorrectAppointmentDates","getRenderingStrategyDirection","getDirection","getWorkSpaceDateTableOffset","getFullWeekAppointmentWidth","getGroupWidth","getMaxAppointmentWidth","getCellCountToLastViewDate","updateAppointmentStartDate","firstViewDate","getStartViewDate","Date","startDayHour","updatedStartDate","appointmentTakesAllDay","normalizeDate","roundDateByStartDayHour","updateAppointmentEndDate","endDayHour","updatedEndDate","getHours","setHours","getMinutes","getTime","renderCompactAppointments","_compactAppointmentsHelper","render","clearCompactAppointments","clear","supportCompactDropDownAppointments","_supportCompactDropDownAppointments","isApplyCompactAppointmentOffset","_isApplyCompactAppointmentOffset","getGroupCount","mapAppointmentFields","config","itemElement","appointmentElement","targetedAppointmentData","getOffsetByAllDayPanel","_getOffsetByAllDayPanel","getGroupTop","_getGroupTop","updateResizableArea","$allResizableElements","$element","find","horizontalResizables","el","$el","resizableInst","dxResizable","area","_","position","_getItemData","_calculateResizableArea","getField","obj","_dataAccessors","getter","setField","value","setter","splitExprStr","split","rootField","emptyChain","arr","result","tmp","arrLength","renderAppointments","_renderAppointments","dayHasAppointment","day","trimTime","createResourcesTree","_loadedResources","getResourceTreeLeaves","tree","appointmentResources","createReducedResourcesTree","reduceResourcesTree","getFilteredItems","groupAppointmentsByResources","appointments","getResourcesData","totalResourceCount","resource","items","j","index","toString","_layoutManager","getAgendaVerticalStepHeight","getAgendaDuration","getEndViewDate","getMaxAppointmentsPerCell","forceMaxAppointmentPerCell","onAgendaReady","rows","$appts","getAppointmentsInstance","_itemElements","total","applyClass","count","eq","addClass","getTimezone","_getTimezoneOffsetByOption","getTargetedAppointmentData","getAppointmentDurationInMs","appointmentDuration","dayDuration","visibleDayDuration","getVisibleDayDuration","ceilQuantityOfDays","Math","ceil","isDifferentDates","isSameAppointmentDates","floorQuantityOfDays","floor","tailDuration","startDateEndHour","hiddenDayDuration","startDayTime","endPartDuration","replaceWrongEndDate","calculateAppointmentEndDate","_calculateAppointmentEndDate","getEndDayHour","getStartDayHour","isAdaptive","validateDayHours","Error","removeDroppableCellClass"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAc,qBAAd;AACA,SACIC,WADJ,EAEIC,OAFJ,QAGO,wBAHP;AAIA,SACIC,SADJ,EAEIC,aAFJ,QAGO,uBAHP;AAIA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SACIC,IADJ,QAEO,2BAFP;AAGA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SACIC,MADJ,QAEO,4BAFP;AAGA,SACIC,IADJ,QAEO,yBAFP;AAGA,SACIC,MADJ,QAEO,yBAFP;AAGA,SACIC,QADJ,QAEO,2BAFP;AAGA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,SACIC,qCADJ,QAEO,aAFP;AAGA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SACIC,YAAY,IAAIC,oBADpB,QAEO,mBAFP;AAGA,IAAIC,IAAI,GAAGb,SAAS,CAACc,kBAArB;AACA,IAAIC,UAAU,GAAG;AACbC,EAAAA,qBAAqB,EAAE,YAAW;AAC9B,WAAO,KAAKC,kBAAZ;AACH,GAHY;AAIbC,EAAAA,mBAAmB,EAAE,YAAW;AAC5B,WAAO,aAAa,KAAKC,MAAL,CAAY,aAAZ,CAApB;AACH,GANY;AAObC,EAAAA,kBAAkB,EAAE,UAASC,WAAT,EAAsB;AACtC,SAAKF,MAAL,CAAY,aAAZ,EAA2BE,WAA3B;AACH,GATY;AAUbC,EAAAA,kBAAkB,EAAE,UAASC,IAAT,EAAe;AAC/B,SAAKJ,MAAL,CAAY,aAAZ,EAA2BI,IAA3B;AACH,GAZY;AAabC,EAAAA,SAAS,EAAE,UAASC,IAAT,EAAe;AACtB,WAAO,KAAKN,MAAL,CAAYM,IAAZ,CAAP;AACH,GAfY;AAgBbC,EAAAA,kBAAkB,EAAE,YAAW;AAC3B,WAAO,KAAKA,kBAAL,EAAP;AACH,GAlBY;AAmBbC,EAAAA,qBAAqB,EAAE,UAASC,WAAT,EAAsBC,QAAtB,EAAgC;AACnD,SAAKC,UAAL,CAAgBH,qBAAhB,CAAsCC,WAAtC,EAAmDC,QAAnD;AACH,GArBY;AAsBbE,EAAAA,yBAAyB,EAAE,UAASH,WAAT,EAAsB;AAC7C,WAAO,KAAKI,gCAAL,GAAwCC,MAAxC,CAA+CL,WAA/C,CAAP;AACH,GAxBY;AAyBbM,EAAAA,eAAe,EAAE,YAAW;AACxB,WAAO,KAAKC,YAAL,GAAoBD,eAApB,EAAP;AACH,GA3BY;AA4BbE,EAAAA,sBAAsB,EAAE,UAASC,OAAT,EAAkB;AACtC,QAAIC,mBAAmB,GAAG,KAAKC,sBAAL,CAA4BF,OAAO,CAACG,IAApC,EAA0CH,OAAO,CAACI,MAAlD,CAA1B;AACA,SAAKL,sBAAL,CAA4BC,OAAO,CAACG,IAApC,EAA0CH,OAAO,CAACI,MAAlD,EAA0DH,mBAA1D;AACH,GA/BY;AAgCbI,EAAAA,sBAAsB,EAAE,YAAW;AAC/B,SAAKA,sBAAL;AACH,GAlCY;AAmCbC,EAAAA,uBAAuB,EAAE,UAASC,QAAT,EAAmBC,UAAnB,EAA+B;AACpD,QAAIC,kBAAkB,GAAG,KAAKC,wBAAL,CAA8B,EAA9B,CAAzB;AACAD,IAAAA,kBAAkB,CAACE,MAAnB,GAA4BJ,QAAQ,CAACI,MAArC;AACAF,IAAAA,kBAAkB,CAACG,SAAnB,GAA+B,KAAKhC,kBAAL,CAAwBiC,UAAxB,CAAmCN,QAAQ,CAACK,SAA5C,EAAuD;AAClFE,MAAAA,IAAI,EAAE;AAD4E,KAAvD,CAA/B;AAGAL,IAAAA,kBAAkB,CAACM,OAAnB,GAA6B,KAAKnC,kBAAL,CAAwBiC,UAAxB,CAAmCN,QAAQ,CAACQ,OAA5C,EAAqD;AAC9ED,MAAAA,IAAI,EAAE;AADwE,KAArD,CAA7B;AAGA,QAAIE,iBAAiB,GAAGhD,MAAM,CAACyC,kBAAkB,CAACQ,MAAnB,EAAD,EAA8BT,UAA9B,CAA9B;AACA,SAAKU,oBAAL,CAA0BF,iBAA1B,EAA6C,IAA7C;AACH,GA9CY;AA+CbG,EAAAA,wBAAwB,EAAE,UAASnB,OAAT,EAAkB;AACxC,QAAIoB,YAAY,GAAG,KAAKlB,sBAAL,CAA4BF,OAAO,CAACG,IAApC,EAA0CH,OAAO,CAACI,MAAlD,CAAnB;AACA,SAAKc,oBAAL,CAA0BlB,OAAO,CAACG,IAAlC,EAAwC,KAAxC,EAA+CiB,YAA/C;AACH,GAlDY;AAmDbC,EAAAA,4BAA4B,EAAE,UAASrB,OAAT,EAAkB;AAC5C,QAAIsB,IAAI,GAAGjD,KAAK,CAACkD,aAAN,CAAoBC,kBAApB,CAAuCxB,OAAO,CAACyB,YAA/C,CAAX;AACA,QAAIC,aAAa,GAAGJ,IAAI,CAACK,iBAAL,CAAuBD,aAA3C;;AACA,SAAKE,0BAAL,CAAgC5B,OAAO,CAACI,MAAxC,EAAgDJ,OAAO,CAACG,IAAxD,EAA8DuB,aAA9D,EAA6E,YAAW;AACpF,WAAKG,kBAAL,CAAwB7B,OAAO,CAACI,MAAhC,EAAwCJ,OAAO,CAACG,IAAhD,EAAuD,YAAW;AAC9D,aAAK2B,aAAL,CAAmBC,mBAAnB;AACH,OAFD;AAGH,KAJ4E,CAI3EC,IAJ2E,CAItE,IAJsE,CAA7E;AAKH,GA3DY;AA4DbC,EAAAA,cAAc,EAAE,UAASC,cAAT,EAAyB;AACrC,WAAO,KAAKC,eAAL,CAAqBD,cAArB,CAAP;AACH,GA9DY;AA+DbE,EAAAA,0BAA0B,EAAE,UAASC,IAAT,EAAe;AACvC,QAAI;AACAC,MAAAA,KAAK,EAAEA,KADP;AAEAC,MAAAA,OAAO,EAAEA,OAFT;AAGAL,MAAAA,cAAc,EAAEA,cAHhB;AAIAM,MAAAA,WAAW,EAAEA;AAJb,QAKAH,IALJ;AAMA,QAAIf,IAAI,GAAGjD,KAAK,CAACkD,aAAN,CAAoBC,kBAApB,CAAuCe,OAAvC,CAAX;AACA,QAAIhD,WAAW,GAAG,KAAKmB,wBAAL,CAA8BwB,cAA9B,CAAlB;AACA,QAAIjC,mBAAmB,GAAG,KAAKS,wBAAL,CAA8B1C,MAAM,CAAC,EAAD,EAAKkE,cAAL,EAAqB,KAAKC,eAAL,CAAqBD,cAArB,CAArB,CAApC,CAA1B;AACA,QAAIO,sBAAsB,GAAGxC,mBAAmB,CAACgB,MAApB,EAA7B;;AACA,QAAIyB,YAAY,GAAG,KAAKjD,UAAL,CAAgBkD,qBAAhB,EAAnB;;AACA,QAAIC,YAAY,GAAG,KAAKnD,UAAL,CAAgBoD,yBAAhB,CAA0CL,WAA1C,CAAnB;;AACA,QAAIM,YAAY,GAAG7C,mBAAmB,CAACU,MAAvC;AACA,QAAIoC,SAAS,GAAGxD,WAAW,CAACoB,MAA5B;AACA,QAAIqC,2BAA2B,GAAG,KAAKvD,UAAL,CAAgBwD,gBAAhB,OAAuCF,SAAS,IAAI,CAACD,YAAd,IAA8B,CAACC,SAAD,IAAcD,YAAnF,CAAlC;;AACA,QAAIJ,YAAY,KAAKE,YAAjB,IAAiCI,2BAArC,EAAkE;AAC9D,WAAKpB,0BAAL,CAAgCM,cAAhC,EAAgDO,sBAAhD,EAAwEnB,IAAI,CAACK,iBAAL,CAAuBD,aAA/F,EAA8G,YAAW;AACrH,aAAKG,kBAAL,CAAwBK,cAAxB,EAAwCO,sBAAxC,EAAiE,YAAW;AACxE,eAAKX,aAAL,CAAmBC,mBAAnB,CAAuCO,KAAvC;AACH,SAFD,EAEIA,KAFJ;AAGH,OAJ6G,CAI5GN,IAJ4G,CAIvG,IAJuG,CAA9G,EAIc,KAAK,CAJnB,EAIsB,KAAK,CAJ3B,EAI8BM,KAJ9B;AAKH,KAND,MAMO;AACH,WAAKR,aAAL,CAAmBC,mBAAnB,CAAuCO,KAAvC;AACH;AACJ,GAxFY;AAyFbY,EAAAA,mBAAmB,EAAE,UAASlD,OAAT,EAAkB;AACnC,QAAIoB,YAAY,GAAG,KAAKlB,sBAAL,CAA4BF,OAAO,CAACG,IAApC,EAA0C7C,CAAC,CAAC0C,OAAO,CAACI,MAAT,CAA3C,CAAnB;AACA,SAAK+C,yBAAL,CAA+BnD,OAAO,CAACG,IAAvC,EAA6CiB,YAA7C;AACA,SAAKf,sBAAL;AACH,GA7FY;AA8Fb+C,EAAAA,mBAAmB,EAAE,UAASpD,OAAT,EAAkB;AACnC,QAAIqD,gBAAgB,GAAG,KAAKC,iBAA5B;AACA,QAAIC,mBAAmB,GAAGF,gBAAgB,CAACG,sBAAjB,CAAwC,KAAKC,qBAAL,CAA2B,QAA3B,CAAxC,CAA1B;AACA,QAAIC,QAAQ,GAAI,IAAIzF,QAAJ,EAAD,CAAe0F,OAAf,GAAyBC,OAAzB,EAAf;;AACA,QAAIL,mBAAJ,EAAyB;AACrB,UAAIM,KAAK,GAAGtF,oBAAoB,CAACgF,mBAAD,CAAhC;AACA,UAAIO,UAAU,GAAG9D,OAAO,CAAC8D,UAAzB;;AACA,UAAIC,MAAM,GAAG,KAAKtE,UAAL,CAAgBuE,cAAhB,CAA+BF,UAA/B,CAAb;;AACA,UAAIG,cAAc,GAAG1G,WAAW,CAAC8F,gBAAgB,CAACa,gBAAjB,CAAkCL,KAAlC,EAAyC,QAAzC,EAAmD7D,OAAO,CAACmE,QAA3D,CAAD,CAAhC;AACA,UAAIC,OAAO,GAAGH,cAAc,CAACI,MAAf,GAAwBJ,cAAc,CAAC,CAAD,CAAtC,GAA4C,KAAK,CAA/D;;AACA,WAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,MAAM,CAACM,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;AACpC,YAAIP,MAAM,CAACO,CAAD,CAAN,CAAUlF,IAAV,KAAmByE,KAAvB,EAA8B;AAC1BO,UAAAA,OAAO,GAAGL,MAAM,CAACO,CAAD,CAAN,CAAUC,EAApB;AACA;AACH;AACJ;;AACDb,MAAAA,QAAQ,GAAGL,gBAAgB,CAACmB,gBAAjB,CAAkCX,KAAlC,EAAyCO,OAAzC,CAAX;AACH;;AACD,WAAOV,QAAP;AACH,GAjHY;AAkHbe,EAAAA,eAAe,EAAE,YAAW;AACxB,WAAO,KAAKC,OAAL,CAAaC,SAAb,IAA0BC,QAAQ,CAAC,KAAKF,OAAL,CAAaC,SAAb,CAAuBE,WAAvB,EAAD,EAAuC,EAAvC,CAAzC;AACH,GApHY;AAqHbC,EAAAA,oBAAoB,EAAE,UAASX,QAAT,EAAmB;AACrC,WAAO,KAAKb,iBAAL,CAAuBwB,oBAAvB,CAA4CX,QAA5C,CAAP;AACH,GAvHY;AAwHbY,EAAAA,2BAA2B,EAAE,UAASxF,WAAT,EAAsB;AAC/C,WAAO,KAAKyF,iBAAL,CAAuBD,2BAAvB,CAAmDxF,WAAnD,CAAP;AACH,GA1HY;;AA2Hb0F,EAAAA,oBAAoB,CAACC,cAAD,EAAiBC,sBAAjB,EAAyCC,MAAzC,EAAiD;AACjE,QAAI3E,kBAAkB,GAAG,KAAKC,wBAAL,CAA8BwE,cAA9B,CAAzB;AACA,QAAIG,eAAe,GAAG,KAAK3E,wBAAL,CAA8ByE,sBAAsB,IAAID,cAAxD,CAAtB;AACA,QAAItE,SAAS,GAAG,KAAKhC,kBAAL,CAAwBiC,UAAxB,CAAmCwE,eAAe,CAACzE,SAAnD,EAA8D;AAC1EE,MAAAA,IAAI,EAAE;AADoE,KAA9D,CAAhB;AAGA,QAAIC,OAAO,GAAG,KAAKnC,kBAAL,CAAwBiC,UAAxB,CAAmCwE,eAAe,CAACtE,OAAnD,EAA4D;AACtED,MAAAA,IAAI,EAAE;AADgE,KAA5D,CAAd;AAGA,QAAIwE,UAAU,GAAGF,MAAM,IAAI,KAAKG,IAAL,CAAU,gBAAV,EAA4B3E,SAA5B,EAAuCG,OAAvC,EAAgDsE,eAAe,CAAC1E,MAAhE,CAA3B;AACA,WAAO;AACH6E,MAAAA,IAAI,EAAEH,eAAe,CAACG,IAAhB,IAAwB/E,kBAAkB,CAAC+E,IAD9C;AAEHC,MAAAA,UAAU,EAAE,KAAKF,IAAL,CAAU,cAAV,EAA0B3E,SAA1B,EAAqCG,OAArC,EAA8CuE,UAA9C;AAFT,KAAP;AAIH,GAzIY;;AA0IbI,EAAAA,cAAc,CAAC9E,SAAD,EAAYG,OAAZ,EAAqB4E,QAArB,EAA+B;AACzC,QAAIA,QAAJ,EAAc;AACV,aAAO,MAAP;AACH;;AACD,QAAI,YAAY,KAAK7G,MAAL,CAAY,aAAZ,CAAZ,IAA0CnB,SAAS,CAACiI,QAAV,CAAmBhF,SAAnB,EAA8BG,OAA9B,CAA9C,EAAsF;AAClF,aAAO,MAAP;AACH;;AACD,WAAO,UAAP;AACH,GAlJY;;AAmJb8E,EAAAA,uBAAuB,CAAC1F,IAAD,EAAO;AAC1B,QAAIzC,aAAa,CAACyC,IAAD,CAAjB,EAAyB;AACrB,aAAOA,IAAI,CAACqF,IAAZ;AACH;;AACD,WAAOM,MAAM,CAAC3F,IAAD,CAAb;AACH,GAxJY;;AAyJb4F,EAAAA,YAAY,CAACnF,SAAD,EAAYG,OAAZ,EAAqBuE,UAArB,EAAiC;AACzC,QAAIU,UAAU,GAAGpF,SAAS,CAACqF,OAAV,OAAwBlF,OAAO,CAACkF,OAAR,EAAzC;;AACA,YAAQX,UAAR;AACI,WAAK,UAAL;AACI,eAAO,CAACpH,gBAAgB,CAACkH,MAAjB,CAAwBxE,SAAxB,EAAmC,aAAnC,CAAD,EAAoD,GAApD,EAAyD1C,gBAAgB,CAACkH,MAAjB,CAAwBxE,SAAxB,EAAmC,WAAnC,CAAzD,EAA0G,KAA1G,EAAiHoF,UAAU,GAAG,EAAH,GAAQ9H,gBAAgB,CAACkH,MAAjB,CAAwBrE,OAAxB,EAAiC,aAAjC,IAAkD,GAArL,EAA0L7C,gBAAgB,CAACkH,MAAjB,CAAwBrE,OAAxB,EAAiC,WAAjC,CAA1L,EAAyOmF,IAAzO,CAA8O,EAA9O,CAAP;;AACJ,WAAK,MAAL;AACI,eAAO,GAAGC,MAAH,CAAUjI,gBAAgB,CAACkH,MAAjB,CAAwBxE,SAAxB,EAAmC,WAAnC,CAAV,EAA2D,KAA3D,EAAkEuF,MAAlE,CAAyEjI,gBAAgB,CAACkH,MAAjB,CAAwBrE,OAAxB,EAAiC,WAAjC,CAAzE,CAAP;;AACJ,WAAK,MAAL;AACI,eAAO,GAAGoF,MAAH,CAAUjI,gBAAgB,CAACkH,MAAjB,CAAwBxE,SAAxB,EAAmC,aAAnC,CAAV,EAA6DuF,MAA7D,CAAoEH,UAAU,GAAG,EAAH,GAAQ,QAAQ9H,gBAAgB,CAACkH,MAAjB,CAAwBrE,OAAxB,EAAiC,aAAjC,CAA9F,CAAP;AANR;AAQH,GAnKY;;AAoKbqF,EAAAA,2BAA2B,EAAE,UAASpG,OAAT,EAAkB;AAC3C,QAAIW,MAAM,GAAGX,OAAO,CAACW,MAArB;;AACA,QAAIoD,MAAM,GAAG,KAAKN,qBAAL,CAA2B,QAA3B,CAAb;;AACA,QAAIM,MAAM,IAAIA,MAAM,CAACM,MAArB,EAA6B;AACzB,UAAI1D,MAAM,IAAI,KAAK0F,gBAAL,GAAwBC,4BAAxB,GAAuDC,0BAAvD,EAAd,EAAmG;AAC/F,YAAIC,qBAAqB,GAAG,KAAK/G,UAAL,CAAgBgH,cAAhB,CAA+BzG,OAAO,CAACwC,WAAvC,CAA5B;;AACA,eAAO;AACHkE,UAAAA,IAAI,EAAEF,qBAAqB,CAACE,IADzB;AAEHC,UAAAA,KAAK,EAAEH,qBAAqB,CAACG,KAF1B;AAGHC,UAAAA,GAAG,EAAE,CAHF;AAIHC,UAAAA,MAAM,EAAE;AAJL,SAAP;AAMH;;AACD,UAAI,KAAKR,gBAAL,GAAwBC,4BAAxB,GAAuDQ,wBAAvD,CAAgFnG,MAAhF,KAA2F,KAAKlB,UAAL,CAAgBsH,2BAAhB,EAA/F,EAA8I;AAC1I,YAAIC,mBAAmB,GAAG,KAAKvH,UAAL,CAAgBgH,cAAhB,CAA+BzG,OAAO,CAACwC,WAAvC,CAA1B;;AACA,eAAO;AACHkE,UAAAA,IAAI,EAAE,CADH;AAEHC,UAAAA,KAAK,EAAE,CAFJ;AAGHC,UAAAA,GAAG,EAAEI,mBAAmB,CAACJ,GAHtB;AAIHC,UAAAA,MAAM,EAAEG,mBAAmB,CAACH;AAJzB,SAAP;AAMH;AACJ;AACJ,GA3LY;AA4LbI,EAAAA,4BAA4B,EAAE,YAAW;AACrC,WAAO,KAAKnH,YAAL,GAAoBmH,4BAApB,EAAP;AACH,GA9LY;AA+LbC,EAAAA,sBAAsB,EAAE,UAASC,QAAT,EAAmB;AACvC,WAAO,KAAKd,gBAAL,GAAwBC,4BAAxB,GAAuDY,sBAAvD,CAA8EC,QAA9E,CAAP;AACH,GAjMY;AAkMbxB,EAAAA,QAAQ,EAAE,UAASyB,eAAT,EAA0B;AAChC,WAAO,KAAKf,gBAAL,GAAwBC,4BAAxB,GAAuDX,QAAvD,CAAgEyB,eAAhE,CAAP;AACH,GApMY;AAqMbC,EAAAA,YAAY,EAAE,UAASC,CAAT,EAAYC,WAAZ,EAAyBpD,QAAzB,EAAmC;AAC7C,WAAO,KAAKkC,gBAAL,GAAwBC,4BAAxB,GAAuDe,YAAvD,CAAoEC,CAApE,EAAuEC,WAAvE,EAAoFpD,QAApF,CAAP;AACH,GAvMY;AAwMbqD,EAAAA,2BAA2B,EAAE,UAAS7B,QAAT,EAAmB;AAC5C,WAAO,KAAKU,gBAAL,GAAwBC,4BAAxB,GAAuDkB,2BAAvD,CAAmF,KAAKC,mBAAL,GAA2BC,aAA9G,EAA6H/B,QAA7H,CAAP;AACH,GA1MY;AA2MbgC,EAAAA,4BAA4B,EAAE,YAAW;AACrC,WAAO,KAAKtB,gBAAL,GAAwBC,4BAAxB,GAAuDqB,4BAAvD,EAAP;AACH,GA7MY;AA8MbC,EAAAA,YAAY,EAAE,YAAW;AACrB,WAAO,KAAK9H,YAAL,GAAoB8H,YAApB,EAAP;AACH,GAhNY;AAiNbC,EAAAA,aAAa,EAAE,YAAW;AACtB,WAAO,KAAK/H,YAAL,GAAoB+H,aAApB,EAAP;AACH,GAnNY;AAoNbC,EAAAA,gBAAgB,EAAE,YAAW;AACzB,QAAIC,SAAS,GAAG,KAAKjI,YAAL,EAAhB;AACA,QAAIkI,SAAS,GAAGD,SAAS,CAACH,YAAV,EAAhB;;AACA,QAAIG,SAAS,CAAClI,eAAV,EAAJ,EAAiC;AAC7B,aAAOkI,SAAS,CAACE,cAAV,KAA6BD,SAApC;AACH;;AACD,WAAOA,SAAP;AACH,GA3NY;AA4NbE,EAAAA,oBAAoB,EAAE,YAAW;AAC7B,WAAO,KAAKC,iCAAL,EAAP;AACH,GA9NY;AA+NbC,EAAAA,mCAAmC,EAAE,UAASzC,QAAT,EAAmB;AACpD,WAAO,KAAKW,4BAAL,GAAoC+B,oCAApC,CAAyE1C,QAAzE,CAAP;AACH,GAjOY;AAkOb2C,EAAAA,2BAA2B,EAAE,YAAW;AACpC,WAAO,KAAKhC,4BAAL,GAAoCgC,2BAApC,EAAP;AACH,GApOY;AAqObC,EAAAA,6BAA6B,EAAE,YAAW;AACtC,WAAO,KAAKjC,4BAAL,GAAoCkC,YAApC,EAAP;AACH,GAvOY;AAwObC,EAAAA,2BAA2B,EAAE,YAAW;AACpC,WAAO,KAAKA,2BAAL,EAAP;AACH,GA1OY;AA2ObC,EAAAA,2BAA2B,EAAE,UAAS1I,OAAT,EAAkB;AAC3C,QAAI8D,UAAU,GAAG9D,OAAO,CAAC8D,UAAzB;AACA,WAAO,KAAKrE,UAAL,CAAgBkJ,aAAhB,CAA8B7E,UAA9B,CAAP;AACH,GA9OY;AA+Ob8E,EAAAA,sBAAsB,EAAE,UAAS5I,OAAT,EAAkB;AACtC,QAAI+H,SAAS,GAAG,KAAKtI,UAArB;AACA,WAAOsI,SAAS,CAACc,0BAAV,CAAqC7I,OAAO,CAACd,IAA7C,IAAqD6I,SAAS,CAACH,YAAV,EAA5D;AACH,GAlPY;AAmPbkB,EAAAA,0BAA0B,EAAE,UAAS9I,OAAT,EAAkB;AAC1C,QAAIT,WAAW,GAAGS,OAAO,CAACT,WAA1B;;AACA,QAAIwJ,aAAa,GAAG,KAAKtJ,UAAL,CAAgBuJ,gBAAhB,EAApB;;AACA,QAAIpI,SAAS,GAAG,IAAIqI,IAAJ,CAASjJ,OAAO,CAACY,SAAjB,CAAhB;;AACA,QAAIsI,YAAY,GAAG,KAAKzF,qBAAL,CAA2B,cAA3B,CAAnB;;AACA,QAAI0F,gBAAJ;;AACA,QAAI,KAAKC,sBAAL,CAA4B7J,WAA5B,CAAJ,EAA8C;AAC1C4J,MAAAA,gBAAgB,GAAGxL,SAAS,CAAC0L,aAAV,CAAwBzI,SAAxB,EAAmCmI,aAAnC,CAAnB;AACH,KAFD,MAEO;AACH,UAAInI,SAAS,GAAGmI,aAAhB,EAA+B;AAC3BnI,QAAAA,SAAS,GAAGmI,aAAZ;AACH;;AACDI,MAAAA,gBAAgB,GAAGxL,SAAS,CAAC0L,aAAV,CAAwBrJ,OAAO,CAACY,SAAhC,EAA2C,IAAIqI,IAAJ,CAASrI,SAAT,CAA3C,CAAnB;AACH;;AACD,WAAOjD,SAAS,CAAC2L,uBAAV,CAAkCH,gBAAlC,EAAoDD,YAApD,CAAP;AACH,GAlQY;AAmQbK,EAAAA,wBAAwB,EAAE,UAASvJ,OAAT,EAAkB;AACxC,QAAIe,OAAO,GAAGf,OAAO,CAACe,OAAtB;;AACA,QAAIyI,UAAU,GAAG,KAAK/F,qBAAL,CAA2B,YAA3B,CAAjB;;AACA,QAAIyF,YAAY,GAAG,KAAKzF,qBAAL,CAA2B,cAA3B,CAAnB;;AACA,QAAIgG,cAAc,GAAG1I,OAArB;;AACA,QAAIA,OAAO,CAAC2I,QAAR,MAAsBF,UAA1B,EAAsC;AAClCC,MAAAA,cAAc,CAACE,QAAf,CAAwBH,UAAxB,EAAoC,CAApC,EAAuC,CAAvC,EAA0C,CAA1C;AACH,KAFD,MAEO,IAAI,CAACxJ,OAAO,CAACgG,UAAT,IAAuBkD,YAAY,GAAG,CAAtC,IAA2C,KAAKnI,OAAO,CAAC2I,QAAR,EAAL,GAA0B3I,OAAO,CAAC6I,UAAR,EAA1B,GAAiD,KAAKV,YAArG,EAAmH;AACtHO,MAAAA,cAAc,GAAG,IAAIR,IAAJ,CAASQ,cAAc,CAACI,OAAf,KAA2BrL,IAAI,CAAC,KAAD,CAAxC,CAAjB;AACAiL,MAAAA,cAAc,CAACE,QAAf,CAAwBH,UAAxB,EAAoC,CAApC,EAAuC,CAAvC,EAA0C,CAA1C;AACH;;AACD,WAAOC,cAAP;AACH,GA/QY;AAgRbK,EAAAA,yBAAyB,EAAE,UAAS9J,OAAT,EAAkB;AACzC,SAAK+J,0BAAL,CAAgCC,MAAhC,CAAuChK,OAAvC;AACH,GAlRY;AAmRbiK,EAAAA,wBAAwB,EAAE,YAAW;AACjC,SAAKF,0BAAL,CAAgCG,KAAhC;AACH,GArRY;AAsRbC,EAAAA,kCAAkC,EAAE,YAAW;AAC3C,WAAO,KAAK1K,UAAL,CAAgB2K,mCAAhB,EAAP;AACH,GAxRY;AAyRbC,EAAAA,+BAA+B,EAAE,YAAW;AACxC,WAAO,KAAK5K,UAAL,CAAgB6K,gCAAhB,EAAP;AACH,GA3RY;AA4RbC,EAAAA,aAAa,EAAE,YAAW;AACtB,WAAO,KAAK9K,UAAL,CAAgBwI,cAAhB,EAAP;AACH,GA9RY;AA+RbuC,EAAAA,oBAAoB,EAAE,UAASC,MAAT,EAAiB;AACnC,QAAI;AACAtG,MAAAA,QAAQ,EAAEA,QADV;AAEAuG,MAAAA,WAAW,EAAEA,WAFb;AAGAzK,MAAAA,mBAAmB,EAAEA;AAHrB,QAIAwK,MAJJ;AAKA,QAAIrJ,YAAY,GAAGnB,mBAAmB,IAAI,KAAKC,sBAAL,CAA4BiE,QAA5B,EAAsCuG,WAAtC,CAA1C;AACA,WAAO;AACHtD,MAAAA,eAAe,EAAEqD,MAAM,CAACtG,QADrB;AAEHwG,MAAAA,kBAAkB,EAAEF,MAAM,CAACC,WAFxB;AAGHE,MAAAA,uBAAuB,EAAExJ;AAHtB,KAAP;AAKH,GA3SY;AA4SbyJ,EAAAA,sBAAsB,EAAE,UAAS/G,UAAT,EAAqB;AACzC,WAAO,KAAKrE,UAAL,CAAgBqL,uBAAhB,CAAwChH,UAAxC,CAAP;AACH,GA9SY;AA+SbiH,EAAAA,WAAW,EAAE,UAASjH,UAAT,EAAqB;AAC9B,WAAO,KAAKrE,UAAL,CAAgBuL,YAAhB,CAA6BlH,UAA7B,CAAP;AACH,GAjTY;AAkTbmH,EAAAA,mBAAmB,EAAE,YAAW;AAC5B,QAAIC,qBAAqB,GAAG,KAAKC,QAAL,GAAgBC,IAAhB,CAAqB,wCAArB,CAA5B;AACA,QAAIC,oBAAoB,GAAGtN,IAAI,CAACmN,qBAAD,EAAyB,UAASI,EAAT,EAAa;AACjE,UAAIC,GAAG,GAAGjO,CAAC,CAACgO,EAAD,CAAX;AACA,UAAIE,aAAa,GAAGD,GAAG,CAACE,WAAJ,CAAgB,UAAhB,CAApB;AACA,UAAIC,IAAI,GAAGF,aAAa,CAAC1M,MAAd,CAAqB,MAArB,CAAX;AACA,aAAOtB,OAAO,CAACgO,aAAa,CAAC1M,MAAd,CAAqB,SAArB,CAAD,EAAkC,CAAC,YAAD,EAAe,YAAf,CAAlC,CAAP,GAAyE,CAAC,CAA1E,IAA+EpB,aAAa,CAACgO,IAAD,CAAnG;AACH,KAL8B,CAA/B;AAMA9N,IAAAA,IAAI,CAACyN,oBAAD,EAAuB,UAASM,CAAT,EAAYL,EAAZ,EAAgB;AACvC,UAAIC,GAAG,GAAGjO,CAAC,CAACgO,EAAD,CAAX;AACA,UAAIM,QAAQ,GAAG9N,MAAM,CAACyN,GAAD,CAArB;;AACA,UAAInE,eAAe,GAAG,KAAKtF,aAAL,CAAmB+J,YAAnB,CAAgCN,GAAhC,CAAtB;;AACA,UAAIG,IAAI,GAAG,KAAK5J,aAAL,CAAmBgK,uBAAnB,CAA2C;AAClDpF,QAAAA,IAAI,EAAEkF,QAAQ,CAAClF;AADmC,OAA3C,EAERU,eAFQ,CAAX;;AAGAmE,MAAAA,GAAG,CAACE,WAAJ,CAAgB,UAAhB,EAA4B3M,MAA5B,CAAmC,MAAnC,EAA2C4M,IAA3C;AACH,KAR0B,CAQzB1J,IARyB,CAQpB,IARoB,CAAvB,CAAJ;AASH,GAnUY;AAoUb+J,EAAAA,QAAQ,EAAE,UAASlI,KAAT,EAAgBmI,GAAhB,EAAqB;AAC3B,QAAI,CAACvO,SAAS,CAAC,KAAKwO,cAAL,CAAoBC,MAApB,CAA2BrI,KAA3B,CAAD,CAAd,EAAmD;AAC/C;AACH;;AACD,WAAO,KAAKoI,cAAL,CAAoBC,MAApB,CAA2BrI,KAA3B,EAAkCmI,GAAlC,CAAP;AACH,GAzUY;AA0UbG,EAAAA,QAAQ,EAAE,UAAStI,KAAT,EAAgBmI,GAAhB,EAAqBI,KAArB,EAA4B;AAClC,QAAI,CAAC3O,SAAS,CAAC,KAAKwO,cAAL,CAAoBI,MAApB,CAA2BxI,KAA3B,CAAD,CAAd,EAAmD;AAC/C;AACH;;AACD,QAAIyI,YAAY,GAAG,KAAKxN,MAAL,CAAY+E,KAAK,GAAG,MAApB,EAA4B0I,KAA5B,CAAkC,GAAlC,CAAnB;AACA,QAAIC,SAAS,GAAGF,YAAY,CAAC,CAAD,CAA5B;;AACA,QAAI,KAAK,CAAL,KAAWN,GAAG,CAACQ,SAAD,CAAd,IAA6BF,YAAY,CAACjI,MAAb,GAAsB,CAAvD,EAA0D;AACtD,UAAIoI,UAAU,GAAG,UAASC,GAAT,EAAc;AAC3B,YAAIC,MAAM,GAAG,EAAb;AACA,YAAIC,GAAG,GAAGD,MAAV;AACA,YAAIE,SAAS,GAAGH,GAAG,CAACrI,MAAJ,GAAa,CAA7B;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuI,SAApB,EAA+BvI,CAAC,EAAhC,EAAoC;AAChCsI,UAAAA,GAAG,GAAGA,GAAG,CAACF,GAAG,CAACpI,CAAD,CAAJ,CAAH,GAAc,EAApB;AACH;;AACD,eAAOqI,MAAP;AACH,OARgB,CAQfL,YARe,CAAjB;;AASAN,MAAAA,GAAG,CAACQ,SAAD,CAAH,GAAiBC,UAAjB;AACH;;AACD,SAAKR,cAAL,CAAoBI,MAApB,CAA2BxI,KAA3B,EAAkCmI,GAAlC,EAAuCI,KAAvC;;AACA,WAAOJ,GAAP;AACH,GA9VY;AA+Vbc,EAAAA,kBAAkB,EAAE,YAAW;AAC3B,SAAKC,mBAAL;AACH,GAjWY;AAkWbC,EAAAA,iBAAiB,EAAE,UAASC,GAAT,EAAc1N,WAAd,EAA2B2N,QAA3B,EAAqC;AACpD,WAAO,KAAKF,iBAAL,CAAuBC,GAAvB,EAA4B1N,WAA5B,EAAyC2N,QAAzC,CAAP;AACH,GApWY;AAqWbC,EAAAA,mBAAmB,EAAE,YAAW;AAC5B,WAAO,KAAK7J,iBAAL,CAAuB6J,mBAAvB,CAA2C,KAAKC,gBAAhD,CAAP;AACH,GAvWY;AAwWbC,EAAAA,qBAAqB,EAAE,UAASC,IAAT,EAAeC,oBAAf,EAAqC;AACxD,WAAO,KAAKjK,iBAAL,CAAuB+J,qBAAvB,CAA6CC,IAA7C,EAAmDC,oBAAnD,CAAP;AACH,GA1WY;AA2WbC,EAAAA,0BAA0B,EAAE,YAAW;AACnC,QAAIF,IAAI,GAAG,KAAKhK,iBAAL,CAAuB6J,mBAAvB,CAA2C,KAAKC,gBAAhD,CAAX;;AACA,WAAO,KAAK9J,iBAAL,CAAuBmK,mBAAvB,CAA2CH,IAA3C,EAAiD,KAAKI,gBAAL,EAAjD,CAAP;AACH,GA9WY;AA+WbC,EAAAA,4BAA4B,EAAE,UAASC,YAAT,EAAuB;AACjD,QAAIjB,MAAM,GAAG;AACT,SAAGiB;AADM,KAAb;;AAGA,QAAI7J,MAAM,GAAG,KAAKN,qBAAL,CAA2B,QAA3B,CAAb;;AACA,QAAIM,MAAM,IAAIA,MAAM,CAACM,MAAjB,IAA2B,KAAKf,iBAAL,CAAuBuK,gBAAvB,GAA0CxJ,MAAzE,EAAiF;AAC7EsI,MAAAA,MAAM,GAAG,KAAKrJ,iBAAL,CAAuBqK,4BAAvB,CAAoDC,YAApD,EAAkE,KAAKR,gBAAvE,CAAT;AACH;;AACD,QAAIU,kBAAkB,GAAG,CAAzB;AACAlQ,IAAAA,IAAI,CAAC,KAAKwP,gBAAN,EAAyB,UAAS9I,CAAT,EAAYyJ,QAAZ,EAAsB;AAC/C,UAAI,CAACzJ,CAAL,EAAQ;AACJwJ,QAAAA,kBAAkB,GAAGC,QAAQ,CAACC,KAAT,CAAe3J,MAApC;AACH,OAFD,MAEO;AACHyJ,QAAAA,kBAAkB,IAAIC,QAAQ,CAACC,KAAT,CAAe3J,MAArC;AACH;AACJ,KANG,CAAJ;;AAOA,SAAK,IAAI4J,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,kBAApB,EAAwCG,CAAC,EAAzC,EAA6C;AACzC,UAAIC,KAAK,GAAGD,CAAC,CAACE,QAAF,EAAZ;;AACA,UAAIxB,MAAM,CAACuB,KAAD,CAAV,EAAmB;AACf;AACH;;AACDvB,MAAAA,MAAM,CAACuB,KAAD,CAAN,GAAgB,EAAhB;AACH;;AACD,WAAOvB,MAAP;AACH,GAvYY;AAwYbtG,EAAAA,gBAAgB,EAAE,YAAW;AACzB,WAAO,KAAK+H,cAAZ;AACH,GA1YY;AA2YbC,EAAAA,2BAA2B,EAAE,YAAW;AACpC,WAAO,KAAKvO,YAAL,GAAoBuO,2BAApB,EAAP;AACH,GA7YY;AA8YbC,EAAAA,iBAAiB,EAAE,YAAW;AAC1B,WAAO,KAAK7K,qBAAL,CAA2B,gBAA3B,CAAP;AACH,GAhZY;AAiZbuF,EAAAA,gBAAgB,EAAE,YAAW;AACzB,WAAO,KAAKA,gBAAL,EAAP;AACH,GAnZY;AAoZbuF,EAAAA,cAAc,EAAE,YAAW;AACvB,WAAO,KAAKA,cAAL,EAAP;AACH,GAtZY;AAuZbC,EAAAA,yBAAyB,EAAE,YAAW;AAClC,WAAO,KAAKA,yBAAL,EAAP;AACH,GAzZY;AA0ZbC,EAAAA,0BAA0B,EAAE,YAAW;AACnC,WAAO,KAAKA,0BAAL,EAAP;AACH,GA5ZY;AA6ZbC,EAAAA,aAAa,EAAE,UAASC,IAAT,EAAe;AAC1B,QAAIC,MAAM,GAAG,KAAKC,uBAAL,GAA+BC,aAA/B,EAAb;;AACA,QAAIC,KAAK,GAAG,CAAZ;;AACA,QAAIC,UAAU,GAAG,UAASrD,CAAT,EAAYsD,KAAZ,EAAmB;AAChC,UAAIf,KAAK,GAAGe,KAAK,GAAGF,KAAR,GAAgB,CAA5B;AACAH,MAAAA,MAAM,CAACM,EAAP,CAAUhB,KAAV,EAAiBiB,QAAjB,CAA0B/Q,qCAA1B;AACA2Q,MAAAA,KAAK,IAAIE,KAAT;AACH,KAJD;;AAKA,SAAK,IAAI3K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqK,IAAI,CAACtK,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AAClC1G,MAAAA,IAAI,CAAC+Q,IAAI,CAACrK,CAAD,CAAL,EAAU0K,UAAV,CAAJ;AACH;AACJ,GAxaY;AAyabI,EAAAA,WAAW,EAAE,YAAW;AACpB,WAAO,KAAKC,0BAAL,EAAP;AACH,GA3aY;AA4abC,EAAAA,0BAA0B,EAAE,UAAS/P,WAAT,EAAsBgD,OAAtB,EAA+B;AACvD,WAAO,KAAKrC,sBAAL,CAA4BX,WAA5B,EAAyCgD,OAAzC,CAAP;AACH,GA9aY;AA+abgN,EAAAA,0BAA0B,EAAE,UAASvP,OAAT,EAAkB;AAC1C,QAAIY,SAAS,GAAGZ,OAAO,CAACY,SAAxB;AACA,QAAIG,OAAO,GAAGf,OAAO,CAACe,OAAtB;AACA,QAAIJ,MAAM,GAAGX,OAAO,CAACW,MAArB;AACA,QAAI6O,mBAAmB,GAAGzO,OAAO,CAAC8I,OAAR,KAAoBjJ,SAAS,CAACiJ,OAAV,EAA9C;AACA,QAAI4F,WAAW,GAAGjR,IAAI,CAAC,KAAD,CAAtB;;AACA,QAAIkR,kBAAkB,GAAG,KAAKjQ,UAAL,CAAgBkQ,qBAAhB,EAAzB;;AACA,QAAIhD,MAAM,GAAG,CAAb;;AACA,QAAIhM,MAAJ,EAAY;AACR,UAAIiP,kBAAkB,GAAGC,IAAI,CAACC,IAAL,CAAUN,mBAAmB,GAAGC,WAAhC,CAAzB;AACA9C,MAAAA,MAAM,GAAGiD,kBAAkB,GAAGF,kBAA9B;AACH,KAHD,MAGO;AACH,UAAIK,gBAAgB,GAAG,CAAC5R,aAAa,CAAC6R,sBAAd,CAAqCpP,SAArC,EAAgDG,OAAhD,CAAxB;AACA,UAAIkP,mBAAmB,GAAGJ,IAAI,CAACK,KAAL,CAAWV,mBAAmB,GAAGC,WAAjC,CAA1B;AACA,UAAIU,YAAJ;;AACA,UAAIJ,gBAAJ,EAAsB;AAClB,YAAIK,gBAAgB,GAAG,IAAInH,IAAJ,CAAS,IAAIA,IAAJ,CAASrI,SAAT,EAAoB+I,QAApB,CAA6B,KAAK7K,MAAL,CAAY,YAAZ,CAA7B,EAAwD,CAAxD,EAA2D,CAA3D,CAAT,CAAvB;AACA,YAAIuR,iBAAiB,GAAGZ,WAAW,GAAGC,kBAAd,IAAoC9O,SAAS,CAACiJ,OAAV,KAAsBuG,gBAAgB,CAACvG,OAAjB,EAAtB,GAAmDjJ,SAAS,CAACiJ,OAAV,KAAsBuG,gBAAgB,CAACvG,OAAjB,EAAzE,GAAsG,CAA1I,CAAxB;AACAsG,QAAAA,YAAY,GAAGX,mBAAmB,IAAIS,mBAAmB,GAAGA,mBAAmB,GAAGR,WAAzB,GAAuCY,iBAA9D,CAAlC;AACA,YAAIC,YAAY,GAAG,KAAKxR,MAAL,CAAY,cAAZ,IAA8BN,IAAI,CAAC,MAAD,CAArD;AACA,YAAI+R,eAAe,GAAGxP,OAAO,GAAGpD,SAAS,CAACuP,QAAV,CAAmBnM,OAAnB,CAAhC;;AACA,YAAIwP,eAAe,GAAGD,YAAtB,EAAoC;AAChC,cAAIL,mBAAJ,EAAyB;AACrBE,YAAAA,YAAY,IAAIE,iBAAhB;AACH;;AACDF,UAAAA,YAAY,IAAIG,YAAY,GAAGC,eAA/B;AACH;AACJ,OAZD,MAYO;AACHJ,QAAAA,YAAY,GAAGX,mBAAmB,GAAGC,WAArC;AACH;;AACD,UAAIU,YAAY,GAAGT,kBAAnB,EAAuC;AACnCS,QAAAA,YAAY,GAAGT,kBAAf;AACH;;AACD/C,MAAAA,MAAM,GAAGsD,mBAAmB,GAAGP,kBAAtB,GAA2CS,YAA3C,IAA2D3R,IAAI,CAAC,QAAD,CAAxE;AACH;;AACD,WAAOmO,MAAP;AACH,GAndY;AAodb6D,EAAAA,mBAAmB,EAAE,UAASjR,WAAT,EAAsBqB,SAAtB,EAAiCG,OAAjC,EAA0C;AAC3D,SAAKiE,iBAAL,CAAuBwL,mBAAvB,CAA2CjR,WAA3C,EAAwDqB,SAAxD,EAAmEG,OAAnE;AACH,GAtdY;AAudb0P,EAAAA,2BAA2B,EAAE,UAAS9K,QAAT,EAAmB/E,SAAnB,EAA8B;AACvD,WAAO,KAAKoE,iBAAL,CAAuB0L,4BAAvB,CAAoD/K,QAApD,EAA8D/E,SAA9D,CAAP;AACH,GAzdY;AA0db+P,EAAAA,aAAa,EAAE,YAAW;AACtB,WAAO,KAAKlR,UAAL,CAAgBX,MAAhB,CAAuB,YAAvB,KAAwC,KAAKA,MAAL,CAAY,YAAZ,CAA/C;AACH,GA5dY;AA6db8R,EAAAA,eAAe,EAAE,YAAW;AACxB,WAAO,KAAKnR,UAAL,CAAgBX,MAAhB,CAAuB,cAAvB,KAA0C,KAAKA,MAAL,CAAY,cAAZ,CAAjD;AACH,GA/dY;AAgeb+R,EAAAA,UAAU,EAAE,YAAW;AACnB,WAAO,KAAK/R,MAAL,CAAY,mBAAZ,CAAP;AACH,GAleY;AAmebgS,EAAAA,gBAAgB,EAAE,YAAW;AACzB,QAAItH,UAAU,GAAG,KAAK/F,qBAAL,CAA2B,YAA3B,CAAjB;;AACA,QAAIyF,YAAY,GAAG,KAAKzF,qBAAL,CAA2B,cAA3B,CAAnB;;AACA,QAAIyF,YAAY,IAAIM,UAApB,EAAgC;AAC5B,YAAM3L,MAAM,CAACkT,KAAP,CAAa,OAAb,CAAN;AACH;AACJ,GAzeY;AA0ebC,EAAAA,wBAAwB,EAAE,YAAW;AACjC,SAAKvR,UAAL,CAAgBuR,wBAAhB;AACH;AA5eY,CAAjB;AA8eA,eAAetS,UAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/subscribes.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    wrapToArray,\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject\r\n} from \"../../core/utils/type\";\r\nimport dateUtils from \"../../core/utils/date\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    locate\r\n} from \"../../animation/translator\";\r\nimport {\r\n    grep\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport timeZoneUtils from \"./utils.timeZone\";\r\nimport {\r\n    AGENDA_LAST_IN_DATE_APPOINTMENT_CLASS\r\n} from \"./constants\";\r\nimport utils from \"./utils\";\r\nimport {\r\n    getFieldExpr as getResourceFieldExpr\r\n} from \"./resources/utils\";\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nvar subscribes = {\r\n    getTimeZoneCalculator: function() {\r\n        return this.timeZoneCalculator\r\n    },\r\n    isCurrentViewAgenda: function() {\r\n        return \"agenda\" === this.option(\"currentView\")\r\n    },\r\n    currentViewUpdated: function(currentView) {\r\n        this.option(\"currentView\", currentView)\r\n    },\r\n    currentDateUpdated: function(date) {\r\n        this.option(\"currentDate\", date)\r\n    },\r\n    getOption: function(name) {\r\n        return this.option(name)\r\n    },\r\n    isVirtualScrolling: function() {\r\n        return this.isVirtualScrolling()\r\n    },\r\n    setCellDataCacheAlias: function(appointment, geometry) {\r\n        this._workSpace.setCellDataCacheAlias(appointment, geometry)\r\n    },\r\n    createAppointmentSettings: function(appointment) {\r\n        return this._getAppointmentSettingsGenerator().create(appointment)\r\n    },\r\n    isGroupedByDate: function() {\r\n        return this.getWorkSpace().isGroupedByDate()\r\n    },\r\n    showAppointmentTooltip: function(options) {\r\n        var targetedAppointment = this.getTargetedAppointment(options.data, options.target);\r\n        this.showAppointmentTooltip(options.data, options.target, targetedAppointment)\r\n    },\r\n    hideAppointmentTooltip: function() {\r\n        this.hideAppointmentTooltip()\r\n    },\r\n    showAddAppointmentPopup: function(cellData, cellGroups) {\r\n        var appointmentAdapter = this.createAppointmentAdapter({});\r\n        appointmentAdapter.allDay = cellData.allDay;\r\n        appointmentAdapter.startDate = this.timeZoneCalculator.createDate(cellData.startDate, {\r\n            path: \"fromGrid\"\r\n        });\r\n        appointmentAdapter.endDate = this.timeZoneCalculator.createDate(cellData.endDate, {\r\n            path: \"fromGrid\"\r\n        });\r\n        var resultAppointment = extend(appointmentAdapter.source(), cellGroups);\r\n        this.showAppointmentPopup(resultAppointment, true)\r\n    },\r\n    showEditAppointmentPopup: function(options) {\r\n        var targetedData = this.getTargetedAppointment(options.data, options.target);\r\n        this.showAppointmentPopup(options.data, false, targetedData)\r\n    },\r\n    updateAppointmentAfterResize: function(options) {\r\n        var info = utils.dataAccessors.getAppointmentInfo(options.$appointment);\r\n        var exceptionDate = info.sourceAppointment.exceptionDate;\r\n        this._checkRecurringAppointment(options.target, options.data, exceptionDate, function() {\r\n            this._updateAppointment(options.target, options.data, (function() {\r\n                this._appointments.moveAppointmentBack()\r\n            }))\r\n        }.bind(this))\r\n    },\r\n    getUpdatedData: function(rawAppointment) {\r\n        return this._getUpdatedData(rawAppointment)\r\n    },\r\n    updateAppointmentAfterDrag: function(_ref) {\r\n        var {\r\n            event: event,\r\n            element: element,\r\n            rawAppointment: rawAppointment,\r\n            coordinates: coordinates\r\n        } = _ref;\r\n        var info = utils.dataAccessors.getAppointmentInfo(element);\r\n        var appointment = this.createAppointmentAdapter(rawAppointment);\r\n        var targetedAppointment = this.createAppointmentAdapter(extend({}, rawAppointment, this._getUpdatedData(rawAppointment)));\r\n        var targetedRawAppointment = targetedAppointment.source();\r\n        var newCellIndex = this._workSpace.getDroppableCellIndex();\r\n        var oldCellIndex = this._workSpace.getCellIndexByCoordinates(coordinates);\r\n        var becomeAllDay = targetedAppointment.allDay;\r\n        var wasAllDay = appointment.allDay;\r\n        var movedBetweenAllDayAndSimple = this._workSpace.supportAllDayRow() && (wasAllDay && !becomeAllDay || !wasAllDay && becomeAllDay);\r\n        if (newCellIndex !== oldCellIndex || movedBetweenAllDayAndSimple) {\r\n            this._checkRecurringAppointment(rawAppointment, targetedRawAppointment, info.sourceAppointment.exceptionDate, function() {\r\n                this._updateAppointment(rawAppointment, targetedRawAppointment, (function() {\r\n                    this._appointments.moveAppointmentBack(event)\r\n                }), event)\r\n            }.bind(this), void 0, void 0, event)\r\n        } else {\r\n            this._appointments.moveAppointmentBack(event)\r\n        }\r\n    },\r\n    onDeleteButtonPress: function(options) {\r\n        var targetedData = this.getTargetedAppointment(options.data, $(options.target));\r\n        this.checkAndDeleteAppointment(options.data, targetedData);\r\n        this.hideAppointmentTooltip()\r\n    },\r\n    getAppointmentColor: function(options) {\r\n        var resourcesManager = this._resourcesManager;\r\n        var resourceForPainting = resourcesManager.getResourceForPainting(this._getCurrentViewOption(\"groups\"));\r\n        var response = (new Deferred).resolve().promise();\r\n        if (resourceForPainting) {\r\n            var field = getResourceFieldExpr(resourceForPainting);\r\n            var groupIndex = options.groupIndex;\r\n            var groups = this._workSpace._getCellGroups(groupIndex);\r\n            var resourceValues = wrapToArray(resourcesManager.getDataAccessors(field, \"getter\")(options.itemData));\r\n            var groupId = resourceValues.length ? resourceValues[0] : void 0;\r\n            for (var i = 0; i < groups.length; i++) {\r\n                if (groups[i].name === field) {\r\n                    groupId = groups[i].id;\r\n                    break\r\n                }\r\n            }\r\n            response = resourcesManager.getResourceColor(field, groupId)\r\n        }\r\n        return response\r\n    },\r\n    getHeaderHeight: function() {\r\n        return this._header._$element && parseInt(this._header._$element.outerHeight(), 10)\r\n    },\r\n    getResourcesFromItem: function(itemData) {\r\n        return this._resourcesManager.getResourcesFromItem(itemData)\r\n    },\r\n    appointmentTakesSeveralDays: function(appointment) {\r\n        return this._appointmentModel.appointmentTakesSeveralDays(appointment)\r\n    },\r\n    getTextAndFormatDate(appointmentRaw, targetedAppointmentRaw, format) {\r\n        var appointmentAdapter = this.createAppointmentAdapter(appointmentRaw);\r\n        var targetedAdapter = this.createAppointmentAdapter(targetedAppointmentRaw || appointmentRaw);\r\n        var startDate = this.timeZoneCalculator.createDate(targetedAdapter.startDate, {\r\n            path: \"toGrid\"\r\n        });\r\n        var endDate = this.timeZoneCalculator.createDate(targetedAdapter.endDate, {\r\n            path: \"toGrid\"\r\n        });\r\n        var formatType = format || this.fire(\"_getTypeFormat\", startDate, endDate, targetedAdapter.allDay);\r\n        return {\r\n            text: targetedAdapter.text || appointmentAdapter.text,\r\n            formatDate: this.fire(\"_formatDates\", startDate, endDate, formatType)\r\n        }\r\n    },\r\n    _getTypeFormat(startDate, endDate, isAllDay) {\r\n        if (isAllDay) {\r\n            return \"DATE\"\r\n        }\r\n        if (\"month\" !== this.option(\"currentView\") && dateUtils.sameDate(startDate, endDate)) {\r\n            return \"TIME\"\r\n        }\r\n        return \"DATETIME\"\r\n    },\r\n    _createAppointmentTitle(data) {\r\n        if (isPlainObject(data)) {\r\n            return data.text\r\n        }\r\n        return String(data)\r\n    },\r\n    _formatDates(startDate, endDate, formatType) {\r\n        var isSameDate = startDate.getDate() === endDate.getDate();\r\n        switch (formatType) {\r\n            case \"DATETIME\":\r\n                return [dateLocalization.format(startDate, \"monthandday\"), \" \", dateLocalization.format(startDate, \"shorttime\"), \" - \", isSameDate ? \"\" : dateLocalization.format(endDate, \"monthandday\") + \" \", dateLocalization.format(endDate, \"shorttime\")].join(\"\");\r\n            case \"TIME\":\r\n                return \"\".concat(dateLocalization.format(startDate, \"shorttime\"), \" - \").concat(dateLocalization.format(endDate, \"shorttime\"));\r\n            case \"DATE\":\r\n                return \"\".concat(dateLocalization.format(startDate, \"monthandday\")).concat(isSameDate ? \"\" : \" - \" + dateLocalization.format(endDate, \"monthandday\"))\r\n        }\r\n    },\r\n    getResizableAppointmentArea: function(options) {\r\n        var allDay = options.allDay;\r\n        var groups = this._getCurrentViewOption(\"groups\");\r\n        if (groups && groups.length) {\r\n            if (allDay || this.getLayoutManager().getRenderingStrategyInstance()._needHorizontalGroupBounds()) {\r\n                var horizontalGroupBounds = this._workSpace.getGroupBounds(options.coordinates);\r\n                return {\r\n                    left: horizontalGroupBounds.left,\r\n                    right: horizontalGroupBounds.right,\r\n                    top: 0,\r\n                    bottom: 0\r\n                }\r\n            }\r\n            if (this.getLayoutManager().getRenderingStrategyInstance()._needVerticalGroupBounds(allDay) && this._workSpace._isVerticalGroupedWorkSpace()) {\r\n                var verticalGroupBounds = this._workSpace.getGroupBounds(options.coordinates);\r\n                return {\r\n                    left: 0,\r\n                    right: 0,\r\n                    top: verticalGroupBounds.top,\r\n                    bottom: verticalGroupBounds.bottom\r\n                }\r\n            }\r\n        }\r\n    },\r\n    needRecalculateResizableArea: function() {\r\n        return this.getWorkSpace().needRecalculateResizableArea()\r\n    },\r\n    getAppointmentGeometry: function(settings) {\r\n        return this.getLayoutManager().getRenderingStrategyInstance().getAppointmentGeometry(settings)\r\n    },\r\n    isAllDay: function(appointmentData) {\r\n        return this.getLayoutManager().getRenderingStrategyInstance().isAllDay(appointmentData)\r\n    },\r\n    getDeltaTime: function(e, initialSize, itemData) {\r\n        return this.getLayoutManager().getRenderingStrategyInstance().getDeltaTime(e, initialSize, itemData)\r\n    },\r\n    getDropDownAppointmentWidth: function(isAllDay) {\r\n        return this.getLayoutManager().getRenderingStrategyInstance().getDropDownAppointmentWidth(this._getViewCountConfig().intervalCount, isAllDay)\r\n    },\r\n    getDropDownAppointmentHeight: function() {\r\n        return this.getLayoutManager().getRenderingStrategyInstance().getDropDownAppointmentHeight()\r\n    },\r\n    getCellWidth: function() {\r\n        return this.getWorkSpace().getCellWidth()\r\n    },\r\n    getCellHeight: function() {\r\n        return this.getWorkSpace().getCellHeight()\r\n    },\r\n    getResizableStep: function() {\r\n        var workSpace = this.getWorkSpace();\r\n        var cellWidth = workSpace.getCellWidth();\r\n        if (workSpace.isGroupedByDate()) {\r\n            return workSpace._getGroupCount() * cellWidth\r\n        }\r\n        return cellWidth\r\n    },\r\n    getRenderingStrategy: function() {\r\n        return this._getAppointmentsRenderingStrategy()\r\n    },\r\n    getMaxAppointmentCountPerCellByType: function(isAllDay) {\r\n        return this.getRenderingStrategyInstance()._getMaxAppointmentCountPerCellByType(isAllDay)\r\n    },\r\n    needCorrectAppointmentDates: function() {\r\n        return this.getRenderingStrategyInstance().needCorrectAppointmentDates()\r\n    },\r\n    getRenderingStrategyDirection: function() {\r\n        return this.getRenderingStrategyInstance().getDirection()\r\n    },\r\n    getWorkSpaceDateTableOffset: function() {\r\n        return this.getWorkSpaceDateTableOffset()\r\n    },\r\n    getFullWeekAppointmentWidth: function(options) {\r\n        var groupIndex = options.groupIndex;\r\n        return this._workSpace.getGroupWidth(groupIndex)\r\n    },\r\n    getMaxAppointmentWidth: function(options) {\r\n        var workSpace = this._workSpace;\r\n        return workSpace.getCellCountToLastViewDate(options.date) * workSpace.getCellWidth()\r\n    },\r\n    updateAppointmentStartDate: function(options) {\r\n        var appointment = options.appointment;\r\n        var firstViewDate = this._workSpace.getStartViewDate();\r\n        var startDate = new Date(options.startDate);\r\n        var startDayHour = this._getCurrentViewOption(\"startDayHour\");\r\n        var updatedStartDate;\r\n        if (this.appointmentTakesAllDay(appointment)) {\r\n            updatedStartDate = dateUtils.normalizeDate(startDate, firstViewDate)\r\n        } else {\r\n            if (startDate < firstViewDate) {\r\n                startDate = firstViewDate\r\n            }\r\n            updatedStartDate = dateUtils.normalizeDate(options.startDate, new Date(startDate))\r\n        }\r\n        return dateUtils.roundDateByStartDayHour(updatedStartDate, startDayHour)\r\n    },\r\n    updateAppointmentEndDate: function(options) {\r\n        var endDate = options.endDate;\r\n        var endDayHour = this._getCurrentViewOption(\"endDayHour\");\r\n        var startDayHour = this._getCurrentViewOption(\"startDayHour\");\r\n        var updatedEndDate = endDate;\r\n        if (endDate.getHours() >= endDayHour) {\r\n            updatedEndDate.setHours(endDayHour, 0, 0, 0)\r\n        } else if (!options.isSameDate && startDayHour > 0 && 60 * endDate.getHours() + endDate.getMinutes() < 60 * startDayHour) {\r\n            updatedEndDate = new Date(updatedEndDate.getTime() - toMs(\"day\"));\r\n            updatedEndDate.setHours(endDayHour, 0, 0, 0)\r\n        }\r\n        return updatedEndDate\r\n    },\r\n    renderCompactAppointments: function(options) {\r\n        this._compactAppointmentsHelper.render(options)\r\n    },\r\n    clearCompactAppointments: function() {\r\n        this._compactAppointmentsHelper.clear()\r\n    },\r\n    supportCompactDropDownAppointments: function() {\r\n        return this._workSpace._supportCompactDropDownAppointments()\r\n    },\r\n    isApplyCompactAppointmentOffset: function() {\r\n        return this._workSpace._isApplyCompactAppointmentOffset()\r\n    },\r\n    getGroupCount: function() {\r\n        return this._workSpace._getGroupCount()\r\n    },\r\n    mapAppointmentFields: function(config) {\r\n        var {\r\n            itemData: itemData,\r\n            itemElement: itemElement,\r\n            targetedAppointment: targetedAppointment\r\n        } = config;\r\n        var targetedData = targetedAppointment || this.getTargetedAppointment(itemData, itemElement);\r\n        return {\r\n            appointmentData: config.itemData,\r\n            appointmentElement: config.itemElement,\r\n            targetedAppointmentData: targetedData\r\n        }\r\n    },\r\n    getOffsetByAllDayPanel: function(groupIndex) {\r\n        return this._workSpace._getOffsetByAllDayPanel(groupIndex)\r\n    },\r\n    getGroupTop: function(groupIndex) {\r\n        return this._workSpace._getGroupTop(groupIndex)\r\n    },\r\n    updateResizableArea: function() {\r\n        var $allResizableElements = this.$element().find(\".dx-scheduler-appointment.dx-resizable\");\r\n        var horizontalResizables = grep($allResizableElements, (function(el) {\r\n            var $el = $(el);\r\n            var resizableInst = $el.dxResizable(\"instance\");\r\n            var area = resizableInst.option(\"area\");\r\n            return inArray(resizableInst.option(\"handles\"), [\"right left\", \"left right\"]) > -1 && isPlainObject(area)\r\n        }));\r\n        each(horizontalResizables, function(_, el) {\r\n            var $el = $(el);\r\n            var position = locate($el);\r\n            var appointmentData = this._appointments._getItemData($el);\r\n            var area = this._appointments._calculateResizableArea({\r\n                left: position.left\r\n            }, appointmentData);\r\n            $el.dxResizable(\"instance\").option(\"area\", area)\r\n        }.bind(this))\r\n    },\r\n    getField: function(field, obj) {\r\n        if (!isDefined(this._dataAccessors.getter[field])) {\r\n            return\r\n        }\r\n        return this._dataAccessors.getter[field](obj)\r\n    },\r\n    setField: function(field, obj, value) {\r\n        if (!isDefined(this._dataAccessors.setter[field])) {\r\n            return\r\n        }\r\n        var splitExprStr = this.option(field + \"Expr\").split(\".\");\r\n        var rootField = splitExprStr[0];\r\n        if (void 0 === obj[rootField] && splitExprStr.length > 1) {\r\n            var emptyChain = function(arr) {\r\n                var result = {};\r\n                var tmp = result;\r\n                var arrLength = arr.length - 1;\r\n                for (var i = 1; i < arrLength; i++) {\r\n                    tmp = tmp[arr[i]] = {}\r\n                }\r\n                return result\r\n            }(splitExprStr);\r\n            obj[rootField] = emptyChain\r\n        }\r\n        this._dataAccessors.setter[field](obj, value);\r\n        return obj\r\n    },\r\n    renderAppointments: function() {\r\n        this._renderAppointments()\r\n    },\r\n    dayHasAppointment: function(day, appointment, trimTime) {\r\n        return this.dayHasAppointment(day, appointment, trimTime)\r\n    },\r\n    createResourcesTree: function() {\r\n        return this._resourcesManager.createResourcesTree(this._loadedResources)\r\n    },\r\n    getResourceTreeLeaves: function(tree, appointmentResources) {\r\n        return this._resourcesManager.getResourceTreeLeaves(tree, appointmentResources)\r\n    },\r\n    createReducedResourcesTree: function() {\r\n        var tree = this._resourcesManager.createResourcesTree(this._loadedResources);\r\n        return this._resourcesManager.reduceResourcesTree(tree, this.getFilteredItems())\r\n    },\r\n    groupAppointmentsByResources: function(appointments) {\r\n        var result = {\r\n            0: appointments\r\n        };\r\n        var groups = this._getCurrentViewOption(\"groups\");\r\n        if (groups && groups.length && this._resourcesManager.getResourcesData().length) {\r\n            result = this._resourcesManager.groupAppointmentsByResources(appointments, this._loadedResources)\r\n        }\r\n        var totalResourceCount = 0;\r\n        each(this._loadedResources, (function(i, resource) {\r\n            if (!i) {\r\n                totalResourceCount = resource.items.length\r\n            } else {\r\n                totalResourceCount *= resource.items.length\r\n            }\r\n        }));\r\n        for (var j = 0; j < totalResourceCount; j++) {\r\n            var index = j.toString();\r\n            if (result[index]) {\r\n                continue\r\n            }\r\n            result[index] = []\r\n        }\r\n        return result\r\n    },\r\n    getLayoutManager: function() {\r\n        return this._layoutManager\r\n    },\r\n    getAgendaVerticalStepHeight: function() {\r\n        return this.getWorkSpace().getAgendaVerticalStepHeight()\r\n    },\r\n    getAgendaDuration: function() {\r\n        return this._getCurrentViewOption(\"agendaDuration\")\r\n    },\r\n    getStartViewDate: function() {\r\n        return this.getStartViewDate()\r\n    },\r\n    getEndViewDate: function() {\r\n        return this.getEndViewDate()\r\n    },\r\n    getMaxAppointmentsPerCell: function() {\r\n        return this.getMaxAppointmentsPerCell()\r\n    },\r\n    forceMaxAppointmentPerCell: function() {\r\n        return this.forceMaxAppointmentPerCell()\r\n    },\r\n    onAgendaReady: function(rows) {\r\n        var $appts = this.getAppointmentsInstance()._itemElements();\r\n        var total = 0;\r\n        var applyClass = function(_, count) {\r\n            var index = count + total - 1;\r\n            $appts.eq(index).addClass(AGENDA_LAST_IN_DATE_APPOINTMENT_CLASS);\r\n            total += count\r\n        };\r\n        for (var i = 0; i < rows.length; i++) {\r\n            each(rows[i], applyClass)\r\n        }\r\n    },\r\n    getTimezone: function() {\r\n        return this._getTimezoneOffsetByOption()\r\n    },\r\n    getTargetedAppointmentData: function(appointment, element) {\r\n        return this.getTargetedAppointment(appointment, element)\r\n    },\r\n    getAppointmentDurationInMs: function(options) {\r\n        var startDate = options.startDate;\r\n        var endDate = options.endDate;\r\n        var allDay = options.allDay;\r\n        var appointmentDuration = endDate.getTime() - startDate.getTime();\r\n        var dayDuration = toMs(\"day\");\r\n        var visibleDayDuration = this._workSpace.getVisibleDayDuration();\r\n        var result = 0;\r\n        if (allDay) {\r\n            var ceilQuantityOfDays = Math.ceil(appointmentDuration / dayDuration);\r\n            result = ceilQuantityOfDays * visibleDayDuration\r\n        } else {\r\n            var isDifferentDates = !timeZoneUtils.isSameAppointmentDates(startDate, endDate);\r\n            var floorQuantityOfDays = Math.floor(appointmentDuration / dayDuration);\r\n            var tailDuration;\r\n            if (isDifferentDates) {\r\n                var startDateEndHour = new Date(new Date(startDate).setHours(this.option(\"endDayHour\"), 0, 0));\r\n                var hiddenDayDuration = dayDuration - visibleDayDuration - (startDate.getTime() > startDateEndHour.getTime() ? startDate.getTime() - startDateEndHour.getTime() : 0);\r\n                tailDuration = appointmentDuration - (floorQuantityOfDays ? floorQuantityOfDays * dayDuration : hiddenDayDuration);\r\n                var startDayTime = this.option(\"startDayHour\") * toMs(\"hour\");\r\n                var endPartDuration = endDate - dateUtils.trimTime(endDate);\r\n                if (endPartDuration < startDayTime) {\r\n                    if (floorQuantityOfDays) {\r\n                        tailDuration -= hiddenDayDuration\r\n                    }\r\n                    tailDuration += startDayTime - endPartDuration\r\n                }\r\n            } else {\r\n                tailDuration = appointmentDuration % dayDuration\r\n            }\r\n            if (tailDuration > visibleDayDuration) {\r\n                tailDuration = visibleDayDuration\r\n            }\r\n            result = floorQuantityOfDays * visibleDayDuration + tailDuration || toMs(\"minute\")\r\n        }\r\n        return result\r\n    },\r\n    replaceWrongEndDate: function(appointment, startDate, endDate) {\r\n        this._appointmentModel.replaceWrongEndDate(appointment, startDate, endDate)\r\n    },\r\n    calculateAppointmentEndDate: function(isAllDay, startDate) {\r\n        return this._appointmentModel._calculateAppointmentEndDate(isAllDay, startDate)\r\n    },\r\n    getEndDayHour: function() {\r\n        return this._workSpace.option(\"endDayHour\") || this.option(\"endDayHour\")\r\n    },\r\n    getStartDayHour: function() {\r\n        return this._workSpace.option(\"startDayHour\") || this.option(\"startDayHour\")\r\n    },\r\n    isAdaptive: function() {\r\n        return this.option(\"adaptivityEnabled\")\r\n    },\r\n    validateDayHours: function() {\r\n        var endDayHour = this._getCurrentViewOption(\"endDayHour\");\r\n        var startDayHour = this._getCurrentViewOption(\"startDayHour\");\r\n        if (startDayHour >= endDayHour) {\r\n            throw errors.Error(\"E1058\")\r\n        }\r\n    },\r\n    removeDroppableCellClass: function() {\r\n        this._workSpace.removeDroppableCellClass()\r\n    }\r\n};\r\nexport default subscribes;\r\n"]},"metadata":{},"sourceType":"module"}