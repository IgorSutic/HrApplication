{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/appointment_form.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport Form from \"../form\";\nimport dateSerialization from \"../../core/utils/date_serialization\";\nimport messageLocalization from \"../../localization/message\";\nimport devices from \"../../core/devices\";\nimport DataSource from \"../../data/data_source\";\nimport timeZoneDataUtils from \"./timezones/utils.timezones_data\";\nimport { extend } from \"../../core/utils/extend\";\nimport \"./recurrence_editor\";\nimport \"../text_area\";\nimport \"../tag_box\";\nimport \"../switch\";\nimport \"../select_box\";\nvar SCREEN_SIZE_OF_SINGLE_COLUMN = 600;\nexport var APPOINTMENT_FORM_GROUP_NAMES = {\n  Main: \"mainGroup\",\n  Recurrence: \"recurrenceGroup\"\n};\nvar SchedulerAppointmentForm = {\n  _appointmentForm: {},\n  _lockDateShiftFlag: false,\n  _validateAppointmentFormDate: function (editor, value, previousValue) {\n    var isCurrentDateCorrect = null === value || !!value;\n    var isPreviousDateCorrect = null === previousValue || !!previousValue;\n\n    if (!isCurrentDateCorrect && isPreviousDateCorrect) {\n      editor.option(\"value\", previousValue);\n    }\n  },\n  _getAllDayStartDate: function (startDate) {\n    return new Date(new Date(startDate).setHours(0, 0, 0, 0));\n  },\n  _getStartDateWithStartHour: function (startDate, startDayHour) {\n    return new Date(new Date(startDate).setHours(startDayHour));\n  },\n  create: function (componentCreator, $container, isReadOnly, formData) {\n    this._appointmentForm = componentCreator($container, Form, {\n      items: this._editors,\n      readOnly: isReadOnly,\n      showValidationSummary: true,\n      scrollingEnabled: true,\n      colCount: \"auto\",\n      colCountByScreen: {\n        lg: 2,\n        xs: 1\n      },\n      formData: formData,\n      showColonAfterLabel: false,\n      labelLocation: \"top\",\n      screenByWidth: width => width < SCREEN_SIZE_OF_SINGLE_COLUMN || \"desktop\" !== devices.current().deviceType ? \"xs\" : \"lg\"\n    });\n    return this._appointmentForm;\n  },\n  _dateBoxValueChanged: function (args, dateExpr, isNeedCorrect) {\n    this._validateAppointmentFormDate(args.component, args.value, args.previousValue);\n\n    var value = dateSerialization.deserializeDate(args.value);\n    var previousValue = dateSerialization.deserializeDate(args.previousValue);\n\n    var dateEditor = this._appointmentForm.getEditor(dateExpr);\n\n    var dateValue = dateSerialization.deserializeDate(dateEditor.option(\"value\"));\n\n    if (!this._appointmentForm._lockDateShiftFlag && dateValue && value && isNeedCorrect(dateValue, value)) {\n      var duration = previousValue ? dateValue.getTime() - previousValue.getTime() : 0;\n      dateEditor.option(\"value\", new Date(value.getTime() + duration));\n    }\n  },\n  _createTimezoneEditor: function (timeZoneExpr, secondTimeZoneExpr, visibleIndex, colSpan, isMainTimeZone) {\n    var isShow = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : false;\n    var noTzTitle = messageLocalization.format(\"dxScheduler-noTimezoneTitle\");\n    return {\n      dataField: timeZoneExpr,\n      editorType: \"dxSelectBox\",\n      visibleIndex: visibleIndex,\n      colSpan: colSpan,\n      label: {\n        text: \" \"\n      },\n      editorOptions: {\n        displayExpr: \"title\",\n        valueExpr: \"id\",\n        placeholder: noTzTitle,\n        searchEnabled: true,\n        onValueChanged: args => {\n          var form = this._appointmentForm;\n          var secondTimezoneEditor = form.getEditor(secondTimeZoneExpr);\n\n          if (isMainTimeZone) {\n            secondTimezoneEditor.option(\"value\", args.value);\n          }\n        }\n      },\n      visible: isShow\n    };\n  },\n  _createDateBoxEditor: function (dataExpr, colSpan, firstDayOfWeek, label, callback) {\n    return {\n      dataField: dataExpr,\n      editorType: \"dxDateBox\",\n      colSpan: colSpan,\n      label: {\n        text: messageLocalization.format(label)\n      },\n      validationRules: [{\n        type: \"required\"\n      }],\n      editorOptions: {\n        width: \"100%\",\n        calendarOptions: {\n          firstDayOfWeek: firstDayOfWeek\n        },\n        onValueChanged: callback\n      }\n    };\n  },\n  _createDateBoxItems: function (dataExprs, schedulerInst, allowTimeZoneEditing) {\n    var colSpan = allowTimeZoneEditing ? 2 : 1;\n    var firstDayOfWeek = schedulerInst.option(\"firstDayOfWeek\");\n    return [this._createDateBoxEditor(dataExprs.startDateExpr, colSpan, firstDayOfWeek, \"dxScheduler-editorLabelStartDate\", args => {\n      this._dateBoxValueChanged(args, dataExprs.endDateExpr, (endValue, startValue) => endValue < startValue);\n    }), this._createTimezoneEditor(dataExprs.startDateTimeZoneExpr, dataExprs.endDateTimeZoneExpr, 1, colSpan, true, allowTimeZoneEditing), this._createDateBoxEditor(dataExprs.endDateExpr, colSpan, firstDayOfWeek, \"dxScheduler-editorLabelEndDate\", args => {\n      this._dateBoxValueChanged(args, dataExprs.startDateExpr, (startValue, endValue) => endValue < startValue);\n    }), this._createTimezoneEditor(dataExprs.endDateTimeZoneExpr, dataExprs.startDateTimeZoneExpr, 3, colSpan, false, allowTimeZoneEditing)];\n  },\n  _changeFormItemDateType: function (itemPath, isAllDay) {\n    var itemEditorOptions = this._appointmentForm.itemOption(itemPath).editorOptions;\n\n    var type = isAllDay ? \"date\" : \"datetime\";\n\n    var newEditorOption = _extends({}, itemEditorOptions, {\n      type: type\n    });\n\n    this._appointmentForm.itemOption(itemPath, \"editorOptions\", newEditorOption);\n  },\n  _createMainItems: function (dataExprs, schedulerInst, triggerResize, changeSize, allowTimeZoneEditing) {\n    return [{\n      dataField: dataExprs.textExpr,\n      editorType: \"dxTextBox\",\n      colSpan: 2,\n      label: {\n        text: messageLocalization.format(\"dxScheduler-editorLabelTitle\")\n      }\n    }, {\n      itemType: \"group\",\n      colSpan: 2,\n      colCountByScreen: {\n        lg: 2,\n        xs: 1\n      },\n      items: this._createDateBoxItems(dataExprs, schedulerInst, allowTimeZoneEditing)\n    }, {\n      itemType: \"group\",\n      colCountByScreen: {\n        lg: 3,\n        xs: 3\n      },\n      colSpan: 2,\n      items: [{\n        dataField: dataExprs.allDayExpr,\n        cssClass: \"dx-appointment-form-switch\",\n        editorType: \"dxSwitch\",\n        label: {\n          text: messageLocalization.format(\"dxScheduler-allDay\"),\n          location: \"right\"\n        },\n        editorOptions: {\n          onValueChanged: args => {\n            var value = args.value;\n\n            var startDateEditor = this._appointmentForm.getEditor(dataExprs.startDateExpr);\n\n            var endDateEditor = this._appointmentForm.getEditor(dataExprs.endDateExpr);\n\n            var startDate = dateSerialization.deserializeDate(startDateEditor.option(\"value\"));\n\n            if (!this._appointmentForm._lockDateShiftFlag && startDate) {\n              if (value) {\n                var allDayStartDate = this._getAllDayStartDate(startDate);\n\n                startDateEditor.option(\"value\", new Date(allDayStartDate));\n                endDateEditor.option(\"value\", new Date(allDayStartDate));\n              } else {\n                var startDateWithStartHour = this._getStartDateWithStartHour(startDate, schedulerInst.option(\"startDayHour\"));\n\n                var endDate = schedulerInst._workSpace.calculateEndDate(startDateWithStartHour);\n\n                startDateEditor.option(\"value\", startDateWithStartHour);\n                endDateEditor.option(\"value\", endDate);\n              }\n            }\n\n            var startDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, \".\").concat(dataExprs.startDateExpr);\n            var endDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, \".\").concat(dataExprs.endDateExpr);\n\n            this._changeFormItemDateType(startDateItemPath, value);\n\n            this._changeFormItemDateType(endDateItemPath, value);\n          }\n        }\n      }, {\n        editorType: \"dxSwitch\",\n        dataField: \"repeat\",\n        cssClass: \"dx-appointment-form-switch\",\n        name: \"visibilityChanged\",\n        label: {\n          text: messageLocalization.format(\"dxScheduler-editorLabelRecurrence\"),\n          location: \"right\"\n        },\n        editorOptions: {\n          onValueChanged: args => {\n            var form = this._appointmentForm;\n            var colSpan = args.value ? 1 : 2;\n            form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Main, \"colSpan\", colSpan);\n            form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Recurrence, \"colSpan\", colSpan);\n\n            this._updateRecurrenceItemVisibility(dataExprs.recurrenceRuleExpr, args.value, form);\n\n            changeSize(args.value);\n            triggerResize();\n          }\n        }\n      }]\n    }, {\n      itemType: \"empty\",\n      colSpan: 2\n    }, {\n      dataField: dataExprs.descriptionExpr,\n      editorType: \"dxTextArea\",\n      colSpan: 2,\n      label: {\n        text: messageLocalization.format(\"dxScheduler-editorLabelDescription\")\n      }\n    }, {\n      itemType: \"empty\",\n      colSpan: 2\n    }];\n  },\n  _updateRecurrenceItemVisibility: function (recurrenceRuleExpr, value, form) {\n    var _form$getEditor;\n\n    form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Recurrence, \"visible\", value);\n    !value && form.updateData(recurrenceRuleExpr, \"\");\n    null === (_form$getEditor = form.getEditor(recurrenceRuleExpr)) || void 0 === _form$getEditor ? void 0 : _form$getEditor.changeValueByVisibility(value);\n  },\n  prepareAppointmentFormEditors: function (dataExprs, schedulerInst, triggerResize, changeSize, appointmentData, allowTimeZoneEditing, readOnly) {\n    var recurrenceEditorVisibility = !!this.getRecurrenceRule(appointmentData, dataExprs);\n    changeSize(recurrenceEditorVisibility);\n    this._editors = [{\n      itemType: \"group\",\n      name: APPOINTMENT_FORM_GROUP_NAMES.Main,\n      colCountByScreen: {\n        lg: 2,\n        xs: 1\n      },\n      colSpan: recurrenceEditorVisibility ? 1 : 2,\n      items: this._createMainItems(dataExprs, schedulerInst, triggerResize, changeSize, allowTimeZoneEditing)\n    }, {\n      itemType: \"group\",\n      name: APPOINTMENT_FORM_GROUP_NAMES.Recurrence,\n      visible: recurrenceEditorVisibility,\n      colSpan: recurrenceEditorVisibility ? 1 : 2,\n      items: this._createRecurrenceEditor(dataExprs, schedulerInst, readOnly)\n    }];\n    return this._editors;\n  },\n  _createRecurrenceEditor: (dataExprs, schedulerInst, readOnly) => [{\n    dataField: dataExprs.recurrenceRuleExpr,\n    editorType: \"dxRecurrenceEditor\",\n    editorOptions: {\n      readOnly: readOnly,\n      firstDayOfWeek: schedulerInst.option(\"firstDayOfWeek\")\n    },\n    label: {\n      text: \" \",\n      visible: false\n    }\n  }],\n  getRecurrenceRule: (data, dataExprs) => data[dataExprs.recurrenceRuleExpr],\n  concatResources: function (resources) {\n    this._editors[0].items = this._editors[0].items.concat(resources);\n  },\n  setEditorsType: function (form, startDateExpr, endDateExpr, allDay) {\n    var startDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, \".\").concat(startDateExpr);\n    var endDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Recurrence, \".\").concat(endDateExpr);\n    var startDateFormItem = form.itemOption(startDateItemPath);\n    var endDateFormItem = form.itemOption(endDateItemPath);\n\n    if (startDateFormItem && endDateFormItem) {\n      var startDateEditorOptions = startDateFormItem.editorOptions;\n      var endDateEditorOptions = endDateFormItem.editorOptions;\n      startDateEditorOptions.type = endDateEditorOptions.type = allDay ? \"date\" : \"datetime\";\n      form.itemOption(startDateItemPath, \"editorOptions\", startDateEditorOptions);\n      form.itemOption(endDateItemPath, \"editorOptions\", endDateEditorOptions);\n    }\n  },\n\n  updateTimeZoneEditorDataSource(date, expression) {\n    var timeZoneDataSource = new DataSource({\n      store: timeZoneDataUtils.getDisplayedTimeZones(date),\n      paginate: true,\n      pageSize: 10\n    });\n    var options = {\n      dataSource: timeZoneDataSource\n    };\n    this.setEditorOptions(expression, \"Main\", options);\n  },\n\n  updateRecurrenceEditorStartDate(date, expression) {\n    var options = {\n      startDate: date\n    };\n    this.setEditorOptions(expression, \"Recurrence\", options);\n  },\n\n  setEditorOptions(name, groupName, options) {\n    var editorPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.groupName, \".\").concat(name);\n\n    var editor = this._appointmentForm.itemOption(editorPath);\n\n    editor && this._appointmentForm.itemOption(editorPath, \"editorOptions\", extend({}, editor.editorOptions, options));\n  },\n\n  updateFormData: function (appointmentForm, formData, dataExprs) {\n    appointmentForm._lockDateShiftFlag = true;\n    var startDate = new Date(formData[dataExprs.startDateExpr]);\n    var endDate = new Date(formData[dataExprs.endDateExpr]);\n    this.updateTimeZoneEditorDataSource(startDate, dataExprs.startDateTimeZoneExpr);\n    this.updateTimeZoneEditorDataSource(endDate, dataExprs.endDateTimeZoneExpr);\n    this.updateRecurrenceEditorStartDate(startDate, dataExprs.recurrenceRuleExpr);\n    appointmentForm.option(\"formData\", formData);\n    appointmentForm._lockDateShiftFlag = false;\n  }\n};\nexport { SchedulerAppointmentForm as AppointmentForm };","map":{"version":3,"sources":["/home/igor/node_modules/devextreme/esm/ui/scheduler/appointment_form.js"],"names":["_extends","Form","dateSerialization","messageLocalization","devices","DataSource","timeZoneDataUtils","extend","SCREEN_SIZE_OF_SINGLE_COLUMN","APPOINTMENT_FORM_GROUP_NAMES","Main","Recurrence","SchedulerAppointmentForm","_appointmentForm","_lockDateShiftFlag","_validateAppointmentFormDate","editor","value","previousValue","isCurrentDateCorrect","isPreviousDateCorrect","option","_getAllDayStartDate","startDate","Date","setHours","_getStartDateWithStartHour","startDayHour","create","componentCreator","$container","isReadOnly","formData","items","_editors","readOnly","showValidationSummary","scrollingEnabled","colCount","colCountByScreen","lg","xs","showColonAfterLabel","labelLocation","screenByWidth","width","current","deviceType","_dateBoxValueChanged","args","dateExpr","isNeedCorrect","component","deserializeDate","dateEditor","getEditor","dateValue","duration","getTime","_createTimezoneEditor","timeZoneExpr","secondTimeZoneExpr","visibleIndex","colSpan","isMainTimeZone","isShow","arguments","length","noTzTitle","format","dataField","editorType","label","text","editorOptions","displayExpr","valueExpr","placeholder","searchEnabled","onValueChanged","form","secondTimezoneEditor","visible","_createDateBoxEditor","dataExpr","firstDayOfWeek","callback","validationRules","type","calendarOptions","_createDateBoxItems","dataExprs","schedulerInst","allowTimeZoneEditing","startDateExpr","endDateExpr","endValue","startValue","startDateTimeZoneExpr","endDateTimeZoneExpr","_changeFormItemDateType","itemPath","isAllDay","itemEditorOptions","itemOption","newEditorOption","_createMainItems","triggerResize","changeSize","textExpr","itemType","allDayExpr","cssClass","location","startDateEditor","endDateEditor","allDayStartDate","startDateWithStartHour","endDate","_workSpace","calculateEndDate","startDateItemPath","concat","endDateItemPath","name","_updateRecurrenceItemVisibility","recurrenceRuleExpr","descriptionExpr","_form$getEditor","updateData","changeValueByVisibility","prepareAppointmentFormEditors","appointmentData","recurrenceEditorVisibility","getRecurrenceRule","_createRecurrenceEditor","data","concatResources","resources","setEditorsType","allDay","startDateFormItem","endDateFormItem","startDateEditorOptions","endDateEditorOptions","updateTimeZoneEditorDataSource","date","expression","timeZoneDataSource","store","getDisplayedTimeZones","paginate","pageSize","options","dataSource","setEditorOptions","updateRecurrenceEditorStartDate","groupName","editorPath","updateFormData","appointmentForm","AppointmentForm"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/appointment_form.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport Form from \"../form\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport devices from \"../../core/devices\";\r\nimport DataSource from \"../../data/data_source\";\r\nimport timeZoneDataUtils from \"./timezones/utils.timezones_data\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport \"./recurrence_editor\";\r\nimport \"../text_area\";\r\nimport \"../tag_box\";\r\nimport \"../switch\";\r\nimport \"../select_box\";\r\nvar SCREEN_SIZE_OF_SINGLE_COLUMN = 600;\r\nexport var APPOINTMENT_FORM_GROUP_NAMES = {\r\n    Main: \"mainGroup\",\r\n    Recurrence: \"recurrenceGroup\"\r\n};\r\nvar SchedulerAppointmentForm = {\r\n    _appointmentForm: {},\r\n    _lockDateShiftFlag: false,\r\n    _validateAppointmentFormDate: function(editor, value, previousValue) {\r\n        var isCurrentDateCorrect = null === value || !!value;\r\n        var isPreviousDateCorrect = null === previousValue || !!previousValue;\r\n        if (!isCurrentDateCorrect && isPreviousDateCorrect) {\r\n            editor.option(\"value\", previousValue)\r\n        }\r\n    },\r\n    _getAllDayStartDate: function(startDate) {\r\n        return new Date(new Date(startDate).setHours(0, 0, 0, 0))\r\n    },\r\n    _getStartDateWithStartHour: function(startDate, startDayHour) {\r\n        return new Date(new Date(startDate).setHours(startDayHour))\r\n    },\r\n    create: function(componentCreator, $container, isReadOnly, formData) {\r\n        this._appointmentForm = componentCreator($container, Form, {\r\n            items: this._editors,\r\n            readOnly: isReadOnly,\r\n            showValidationSummary: true,\r\n            scrollingEnabled: true,\r\n            colCount: \"auto\",\r\n            colCountByScreen: {\r\n                lg: 2,\r\n                xs: 1\r\n            },\r\n            formData: formData,\r\n            showColonAfterLabel: false,\r\n            labelLocation: \"top\",\r\n            screenByWidth: width => width < SCREEN_SIZE_OF_SINGLE_COLUMN || \"desktop\" !== devices.current().deviceType ? \"xs\" : \"lg\"\r\n        });\r\n        return this._appointmentForm\r\n    },\r\n    _dateBoxValueChanged: function(args, dateExpr, isNeedCorrect) {\r\n        this._validateAppointmentFormDate(args.component, args.value, args.previousValue);\r\n        var value = dateSerialization.deserializeDate(args.value);\r\n        var previousValue = dateSerialization.deserializeDate(args.previousValue);\r\n        var dateEditor = this._appointmentForm.getEditor(dateExpr);\r\n        var dateValue = dateSerialization.deserializeDate(dateEditor.option(\"value\"));\r\n        if (!this._appointmentForm._lockDateShiftFlag && dateValue && value && isNeedCorrect(dateValue, value)) {\r\n            var duration = previousValue ? dateValue.getTime() - previousValue.getTime() : 0;\r\n            dateEditor.option(\"value\", new Date(value.getTime() + duration))\r\n        }\r\n    },\r\n    _createTimezoneEditor: function(timeZoneExpr, secondTimeZoneExpr, visibleIndex, colSpan, isMainTimeZone) {\r\n        var isShow = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : false;\r\n        var noTzTitle = messageLocalization.format(\"dxScheduler-noTimezoneTitle\");\r\n        return {\r\n            dataField: timeZoneExpr,\r\n            editorType: \"dxSelectBox\",\r\n            visibleIndex: visibleIndex,\r\n            colSpan: colSpan,\r\n            label: {\r\n                text: \" \"\r\n            },\r\n            editorOptions: {\r\n                displayExpr: \"title\",\r\n                valueExpr: \"id\",\r\n                placeholder: noTzTitle,\r\n                searchEnabled: true,\r\n                onValueChanged: args => {\r\n                    var form = this._appointmentForm;\r\n                    var secondTimezoneEditor = form.getEditor(secondTimeZoneExpr);\r\n                    if (isMainTimeZone) {\r\n                        secondTimezoneEditor.option(\"value\", args.value)\r\n                    }\r\n                }\r\n            },\r\n            visible: isShow\r\n        }\r\n    },\r\n    _createDateBoxEditor: function(dataExpr, colSpan, firstDayOfWeek, label, callback) {\r\n        return {\r\n            dataField: dataExpr,\r\n            editorType: \"dxDateBox\",\r\n            colSpan: colSpan,\r\n            label: {\r\n                text: messageLocalization.format(label)\r\n            },\r\n            validationRules: [{\r\n                type: \"required\"\r\n            }],\r\n            editorOptions: {\r\n                width: \"100%\",\r\n                calendarOptions: {\r\n                    firstDayOfWeek: firstDayOfWeek\r\n                },\r\n                onValueChanged: callback\r\n            }\r\n        }\r\n    },\r\n    _createDateBoxItems: function(dataExprs, schedulerInst, allowTimeZoneEditing) {\r\n        var colSpan = allowTimeZoneEditing ? 2 : 1;\r\n        var firstDayOfWeek = schedulerInst.option(\"firstDayOfWeek\");\r\n        return [this._createDateBoxEditor(dataExprs.startDateExpr, colSpan, firstDayOfWeek, \"dxScheduler-editorLabelStartDate\", args => {\r\n            this._dateBoxValueChanged(args, dataExprs.endDateExpr, (endValue, startValue) => endValue < startValue)\r\n        }), this._createTimezoneEditor(dataExprs.startDateTimeZoneExpr, dataExprs.endDateTimeZoneExpr, 1, colSpan, true, allowTimeZoneEditing), this._createDateBoxEditor(dataExprs.endDateExpr, colSpan, firstDayOfWeek, \"dxScheduler-editorLabelEndDate\", args => {\r\n            this._dateBoxValueChanged(args, dataExprs.startDateExpr, (startValue, endValue) => endValue < startValue)\r\n        }), this._createTimezoneEditor(dataExprs.endDateTimeZoneExpr, dataExprs.startDateTimeZoneExpr, 3, colSpan, false, allowTimeZoneEditing)]\r\n    },\r\n    _changeFormItemDateType: function(itemPath, isAllDay) {\r\n        var itemEditorOptions = this._appointmentForm.itemOption(itemPath).editorOptions;\r\n        var type = isAllDay ? \"date\" : \"datetime\";\r\n        var newEditorOption = _extends({}, itemEditorOptions, {\r\n            type: type\r\n        });\r\n        this._appointmentForm.itemOption(itemPath, \"editorOptions\", newEditorOption)\r\n    },\r\n    _createMainItems: function(dataExprs, schedulerInst, triggerResize, changeSize, allowTimeZoneEditing) {\r\n        return [{\r\n            dataField: dataExprs.textExpr,\r\n            editorType: \"dxTextBox\",\r\n            colSpan: 2,\r\n            label: {\r\n                text: messageLocalization.format(\"dxScheduler-editorLabelTitle\")\r\n            }\r\n        }, {\r\n            itemType: \"group\",\r\n            colSpan: 2,\r\n            colCountByScreen: {\r\n                lg: 2,\r\n                xs: 1\r\n            },\r\n            items: this._createDateBoxItems(dataExprs, schedulerInst, allowTimeZoneEditing)\r\n        }, {\r\n            itemType: \"group\",\r\n            colCountByScreen: {\r\n                lg: 3,\r\n                xs: 3\r\n            },\r\n            colSpan: 2,\r\n            items: [{\r\n                dataField: dataExprs.allDayExpr,\r\n                cssClass: \"dx-appointment-form-switch\",\r\n                editorType: \"dxSwitch\",\r\n                label: {\r\n                    text: messageLocalization.format(\"dxScheduler-allDay\"),\r\n                    location: \"right\"\r\n                },\r\n                editorOptions: {\r\n                    onValueChanged: args => {\r\n                        var value = args.value;\r\n                        var startDateEditor = this._appointmentForm.getEditor(dataExprs.startDateExpr);\r\n                        var endDateEditor = this._appointmentForm.getEditor(dataExprs.endDateExpr);\r\n                        var startDate = dateSerialization.deserializeDate(startDateEditor.option(\"value\"));\r\n                        if (!this._appointmentForm._lockDateShiftFlag && startDate) {\r\n                            if (value) {\r\n                                var allDayStartDate = this._getAllDayStartDate(startDate);\r\n                                startDateEditor.option(\"value\", new Date(allDayStartDate));\r\n                                endDateEditor.option(\"value\", new Date(allDayStartDate))\r\n                            } else {\r\n                                var startDateWithStartHour = this._getStartDateWithStartHour(startDate, schedulerInst.option(\"startDayHour\"));\r\n                                var endDate = schedulerInst._workSpace.calculateEndDate(startDateWithStartHour);\r\n                                startDateEditor.option(\"value\", startDateWithStartHour);\r\n                                endDateEditor.option(\"value\", endDate)\r\n                            }\r\n                        }\r\n                        var startDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, \".\").concat(dataExprs.startDateExpr);\r\n                        var endDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, \".\").concat(dataExprs.endDateExpr);\r\n                        this._changeFormItemDateType(startDateItemPath, value);\r\n                        this._changeFormItemDateType(endDateItemPath, value)\r\n                    }\r\n                }\r\n            }, {\r\n                editorType: \"dxSwitch\",\r\n                dataField: \"repeat\",\r\n                cssClass: \"dx-appointment-form-switch\",\r\n                name: \"visibilityChanged\",\r\n                label: {\r\n                    text: messageLocalization.format(\"dxScheduler-editorLabelRecurrence\"),\r\n                    location: \"right\"\r\n                },\r\n                editorOptions: {\r\n                    onValueChanged: args => {\r\n                        var form = this._appointmentForm;\r\n                        var colSpan = args.value ? 1 : 2;\r\n                        form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Main, \"colSpan\", colSpan);\r\n                        form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Recurrence, \"colSpan\", colSpan);\r\n                        this._updateRecurrenceItemVisibility(dataExprs.recurrenceRuleExpr, args.value, form);\r\n                        changeSize(args.value);\r\n                        triggerResize()\r\n                    }\r\n                }\r\n            }]\r\n        }, {\r\n            itemType: \"empty\",\r\n            colSpan: 2\r\n        }, {\r\n            dataField: dataExprs.descriptionExpr,\r\n            editorType: \"dxTextArea\",\r\n            colSpan: 2,\r\n            label: {\r\n                text: messageLocalization.format(\"dxScheduler-editorLabelDescription\")\r\n            }\r\n        }, {\r\n            itemType: \"empty\",\r\n            colSpan: 2\r\n        }]\r\n    },\r\n    _updateRecurrenceItemVisibility: function(recurrenceRuleExpr, value, form) {\r\n        var _form$getEditor;\r\n        form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Recurrence, \"visible\", value);\r\n        !value && form.updateData(recurrenceRuleExpr, \"\");\r\n        null === (_form$getEditor = form.getEditor(recurrenceRuleExpr)) || void 0 === _form$getEditor ? void 0 : _form$getEditor.changeValueByVisibility(value)\r\n    },\r\n    prepareAppointmentFormEditors: function(dataExprs, schedulerInst, triggerResize, changeSize, appointmentData, allowTimeZoneEditing, readOnly) {\r\n        var recurrenceEditorVisibility = !!this.getRecurrenceRule(appointmentData, dataExprs);\r\n        changeSize(recurrenceEditorVisibility);\r\n        this._editors = [{\r\n            itemType: \"group\",\r\n            name: APPOINTMENT_FORM_GROUP_NAMES.Main,\r\n            colCountByScreen: {\r\n                lg: 2,\r\n                xs: 1\r\n            },\r\n            colSpan: recurrenceEditorVisibility ? 1 : 2,\r\n            items: this._createMainItems(dataExprs, schedulerInst, triggerResize, changeSize, allowTimeZoneEditing)\r\n        }, {\r\n            itemType: \"group\",\r\n            name: APPOINTMENT_FORM_GROUP_NAMES.Recurrence,\r\n            visible: recurrenceEditorVisibility,\r\n            colSpan: recurrenceEditorVisibility ? 1 : 2,\r\n            items: this._createRecurrenceEditor(dataExprs, schedulerInst, readOnly)\r\n        }];\r\n        return this._editors\r\n    },\r\n    _createRecurrenceEditor: (dataExprs, schedulerInst, readOnly) => [{\r\n        dataField: dataExprs.recurrenceRuleExpr,\r\n        editorType: \"dxRecurrenceEditor\",\r\n        editorOptions: {\r\n            readOnly: readOnly,\r\n            firstDayOfWeek: schedulerInst.option(\"firstDayOfWeek\")\r\n        },\r\n        label: {\r\n            text: \" \",\r\n            visible: false\r\n        }\r\n    }],\r\n    getRecurrenceRule: (data, dataExprs) => data[dataExprs.recurrenceRuleExpr],\r\n    concatResources: function(resources) {\r\n        this._editors[0].items = this._editors[0].items.concat(resources)\r\n    },\r\n    setEditorsType: function(form, startDateExpr, endDateExpr, allDay) {\r\n        var startDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, \".\").concat(startDateExpr);\r\n        var endDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Recurrence, \".\").concat(endDateExpr);\r\n        var startDateFormItem = form.itemOption(startDateItemPath);\r\n        var endDateFormItem = form.itemOption(endDateItemPath);\r\n        if (startDateFormItem && endDateFormItem) {\r\n            var startDateEditorOptions = startDateFormItem.editorOptions;\r\n            var endDateEditorOptions = endDateFormItem.editorOptions;\r\n            startDateEditorOptions.type = endDateEditorOptions.type = allDay ? \"date\" : \"datetime\";\r\n            form.itemOption(startDateItemPath, \"editorOptions\", startDateEditorOptions);\r\n            form.itemOption(endDateItemPath, \"editorOptions\", endDateEditorOptions)\r\n        }\r\n    },\r\n    updateTimeZoneEditorDataSource(date, expression) {\r\n        var timeZoneDataSource = new DataSource({\r\n            store: timeZoneDataUtils.getDisplayedTimeZones(date),\r\n            paginate: true,\r\n            pageSize: 10\r\n        });\r\n        var options = {\r\n            dataSource: timeZoneDataSource\r\n        };\r\n        this.setEditorOptions(expression, \"Main\", options)\r\n    },\r\n    updateRecurrenceEditorStartDate(date, expression) {\r\n        var options = {\r\n            startDate: date\r\n        };\r\n        this.setEditorOptions(expression, \"Recurrence\", options)\r\n    },\r\n    setEditorOptions(name, groupName, options) {\r\n        var editorPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.groupName, \".\").concat(name);\r\n        var editor = this._appointmentForm.itemOption(editorPath);\r\n        editor && this._appointmentForm.itemOption(editorPath, \"editorOptions\", extend({}, editor.editorOptions, options))\r\n    },\r\n    updateFormData: function(appointmentForm, formData, dataExprs) {\r\n        appointmentForm._lockDateShiftFlag = true;\r\n        var startDate = new Date(formData[dataExprs.startDateExpr]);\r\n        var endDate = new Date(formData[dataExprs.endDateExpr]);\r\n        this.updateTimeZoneEditorDataSource(startDate, dataExprs.startDateTimeZoneExpr);\r\n        this.updateTimeZoneEditorDataSource(endDate, dataExprs.endDateTimeZoneExpr);\r\n        this.updateRecurrenceEditorStartDate(startDate, dataExprs.recurrenceRuleExpr);\r\n        appointmentForm.option(\"formData\", formData);\r\n        appointmentForm._lockDateShiftFlag = false\r\n    }\r\n};\r\nexport {\r\n    SchedulerAppointmentForm as AppointmentForm\r\n};\r\n"]},"metadata":{},"sourceType":"module"}