{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.work_space_work_week.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport registerComponent from \"../../../core/component_registrator\";\nimport dateUtils from \"../../../core/utils/date\";\nimport { isDataOnWeekend, getWeekendsCount, getFirstDayOfWeek, getFirstViewDate } from \"./utils/work_week\";\nimport SchedulerWorkSpaceWeek from \"./ui.scheduler.work_space_week\";\nvar toMs = dateUtils.dateToMilliseconds;\nvar WORK_WEEK_CLASS = \"dx-scheduler-work-space-work-week\";\nvar dayIndexes = [1, 2, 3, 4, 5];\nvar weekCounter = 0;\n\nclass SchedulerWorkSpaceWorkWeek extends SchedulerWorkSpaceWeek {\n  constructor() {\n    super(...arguments);\n    this._isSkippedData = isDataOnWeekend;\n    this._getWeekendsCount = getWeekendsCount;\n  }\n\n  _getElementClass() {\n    return WORK_WEEK_CLASS;\n  }\n\n  _getCellCount() {\n    return 5 * this.option(\"intervalCount\");\n  }\n\n  _firstDayOfWeek() {\n    return getFirstDayOfWeek(this.option(\"firstDayOfWeek\"));\n  }\n\n  _getDateByIndex(headerIndex) {\n    var resultDate = new Date(this._firstViewDate);\n\n    if (headerIndex % this._getCellCount() === 0) {\n      weekCounter = 0;\n    }\n\n    resultDate.setDate(this._firstViewDate.getDate() + headerIndex + weekCounter);\n    var index = resultDate.getDay();\n\n    while (-1 === dayIndexes.indexOf(index)) {\n      resultDate.setDate(resultDate.getDate() + 1);\n      index = resultDate.getDay();\n      weekCounter++;\n    }\n\n    return resultDate;\n  }\n\n  _renderView() {\n    weekCounter = 0;\n\n    super._renderView();\n  }\n\n  _setFirstViewDate() {\n    this._firstViewDate = getFirstViewDate(this._getViewStartByOptions(), this._firstDayOfWeek());\n\n    this._setStartDayHour(this._firstViewDate);\n  }\n\n  _getOffsetByCount(cellIndex) {\n    var cellsInGroup = this._getCellCount();\n\n    var inGroup = Math.floor(cellIndex / cellsInGroup);\n    cellIndex -= cellsInGroup * inGroup;\n    var weekendCount = Math.floor(cellIndex / 5);\n    return toMs(\"day\") * weekendCount * 2;\n  }\n\n}\n\nregisterComponent(\"dxSchedulerWorkSpaceWorkWeek\", SchedulerWorkSpaceWorkWeek);\nexport default SchedulerWorkSpaceWorkWeek;","map":{"version":3,"sources":["/home/igor/node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.work_space_work_week.js"],"names":["registerComponent","dateUtils","isDataOnWeekend","getWeekendsCount","getFirstDayOfWeek","getFirstViewDate","SchedulerWorkSpaceWeek","toMs","dateToMilliseconds","WORK_WEEK_CLASS","dayIndexes","weekCounter","SchedulerWorkSpaceWorkWeek","constructor","arguments","_isSkippedData","_getWeekendsCount","_getElementClass","_getCellCount","option","_firstDayOfWeek","_getDateByIndex","headerIndex","resultDate","Date","_firstViewDate","setDate","getDate","index","getDay","indexOf","_renderView","_setFirstViewDate","_getViewStartByOptions","_setStartDayHour","_getOffsetByCount","cellIndex","cellsInGroup","inGroup","Math","floor","weekendCount"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SACIC,eADJ,EAEIC,gBAFJ,EAGIC,iBAHJ,EAIIC,gBAJJ,QAKO,mBALP;AAMA,OAAOC,sBAAP,MAAmC,gCAAnC;AACA,IAAIC,IAAI,GAAGN,SAAS,CAACO,kBAArB;AACA,IAAIC,eAAe,GAAG,mCAAtB;AACA,IAAIC,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAjB;AACA,IAAIC,WAAW,GAAG,CAAlB;;AACA,MAAMC,0BAAN,SAAyCN,sBAAzC,CAAgE;AAC5DO,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA,SAAKC,cAAL,GAAsBb,eAAtB;AACA,SAAKc,iBAAL,GAAyBb,gBAAzB;AACH;;AACDc,EAAAA,gBAAgB,GAAG;AACf,WAAOR,eAAP;AACH;;AACDS,EAAAA,aAAa,GAAG;AACZ,WAAO,IAAI,KAAKC,MAAL,CAAY,eAAZ,CAAX;AACH;;AACDC,EAAAA,eAAe,GAAG;AACd,WAAOhB,iBAAiB,CAAC,KAAKe,MAAL,CAAY,gBAAZ,CAAD,CAAxB;AACH;;AACDE,EAAAA,eAAe,CAACC,WAAD,EAAc;AACzB,QAAIC,UAAU,GAAG,IAAIC,IAAJ,CAAS,KAAKC,cAAd,CAAjB;;AACA,QAAIH,WAAW,GAAG,KAAKJ,aAAL,EAAd,KAAuC,CAA3C,EAA8C;AAC1CP,MAAAA,WAAW,GAAG,CAAd;AACH;;AACDY,IAAAA,UAAU,CAACG,OAAX,CAAmB,KAAKD,cAAL,CAAoBE,OAApB,KAAgCL,WAAhC,GAA8CX,WAAjE;AACA,QAAIiB,KAAK,GAAGL,UAAU,CAACM,MAAX,EAAZ;;AACA,WAAO,CAAC,CAAD,KAAOnB,UAAU,CAACoB,OAAX,CAAmBF,KAAnB,CAAd,EAAyC;AACrCL,MAAAA,UAAU,CAACG,OAAX,CAAmBH,UAAU,CAACI,OAAX,KAAuB,CAA1C;AACAC,MAAAA,KAAK,GAAGL,UAAU,CAACM,MAAX,EAAR;AACAlB,MAAAA,WAAW;AACd;;AACD,WAAOY,UAAP;AACH;;AACDQ,EAAAA,WAAW,GAAG;AACVpB,IAAAA,WAAW,GAAG,CAAd;;AACA,UAAMoB,WAAN;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKP,cAAL,GAAsBpB,gBAAgB,CAAC,KAAK4B,sBAAL,EAAD,EAAgC,KAAKb,eAAL,EAAhC,CAAtC;;AACA,SAAKc,gBAAL,CAAsB,KAAKT,cAA3B;AACH;;AACDU,EAAAA,iBAAiB,CAACC,SAAD,EAAY;AACzB,QAAIC,YAAY,GAAG,KAAKnB,aAAL,EAAnB;;AACA,QAAIoB,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWJ,SAAS,GAAGC,YAAvB,CAAd;AACAD,IAAAA,SAAS,IAAIC,YAAY,GAAGC,OAA5B;AACA,QAAIG,YAAY,GAAGF,IAAI,CAACC,KAAL,CAAWJ,SAAS,GAAG,CAAvB,CAAnB;AACA,WAAO7B,IAAI,CAAC,KAAD,CAAJ,GAAckC,YAAd,GAA6B,CAApC;AACH;;AA3C2D;;AA6ChEzC,iBAAiB,CAAC,8BAAD,EAAiCY,0BAAjC,CAAjB;AACA,eAAeA,0BAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.work_space_work_week.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport dateUtils from \"../../../core/utils/date\";\r\nimport {\r\n    isDataOnWeekend,\r\n    getWeekendsCount,\r\n    getFirstDayOfWeek,\r\n    getFirstViewDate\r\n} from \"./utils/work_week\";\r\nimport SchedulerWorkSpaceWeek from \"./ui.scheduler.work_space_week\";\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nvar WORK_WEEK_CLASS = \"dx-scheduler-work-space-work-week\";\r\nvar dayIndexes = [1, 2, 3, 4, 5];\r\nvar weekCounter = 0;\r\nclass SchedulerWorkSpaceWorkWeek extends SchedulerWorkSpaceWeek {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._isSkippedData = isDataOnWeekend;\r\n        this._getWeekendsCount = getWeekendsCount\r\n    }\r\n    _getElementClass() {\r\n        return WORK_WEEK_CLASS\r\n    }\r\n    _getCellCount() {\r\n        return 5 * this.option(\"intervalCount\")\r\n    }\r\n    _firstDayOfWeek() {\r\n        return getFirstDayOfWeek(this.option(\"firstDayOfWeek\"))\r\n    }\r\n    _getDateByIndex(headerIndex) {\r\n        var resultDate = new Date(this._firstViewDate);\r\n        if (headerIndex % this._getCellCount() === 0) {\r\n            weekCounter = 0\r\n        }\r\n        resultDate.setDate(this._firstViewDate.getDate() + headerIndex + weekCounter);\r\n        var index = resultDate.getDay();\r\n        while (-1 === dayIndexes.indexOf(index)) {\r\n            resultDate.setDate(resultDate.getDate() + 1);\r\n            index = resultDate.getDay();\r\n            weekCounter++\r\n        }\r\n        return resultDate\r\n    }\r\n    _renderView() {\r\n        weekCounter = 0;\r\n        super._renderView()\r\n    }\r\n    _setFirstViewDate() {\r\n        this._firstViewDate = getFirstViewDate(this._getViewStartByOptions(), this._firstDayOfWeek());\r\n        this._setStartDayHour(this._firstViewDate)\r\n    }\r\n    _getOffsetByCount(cellIndex) {\r\n        var cellsInGroup = this._getCellCount();\r\n        var inGroup = Math.floor(cellIndex / cellsInGroup);\r\n        cellIndex -= cellsInGroup * inGroup;\r\n        var weekendCount = Math.floor(cellIndex / 5);\r\n        return toMs(\"day\") * weekendCount * 2\r\n    }\r\n}\r\nregisterComponent(\"dxSchedulerWorkSpaceWorkWeek\", SchedulerWorkSpaceWorkWeek);\r\nexport default SchedulerWorkSpaceWorkWeek;\r\n"]},"metadata":{},"sourceType":"module"}