{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/resources/resourceManager.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { wrapToArray, inArray } from \"../../../core/utils/array\";\nimport { grep } from \"../../../core/utils/common\";\nimport { isDefined } from \"../../../core/utils/type\";\nimport { deepExtendArraySafe } from \"../../../core/utils/object\";\nimport { each, map } from \"../../../core/utils/iterator\";\nimport { extend } from \"../../../core/utils/extend\";\nimport query from \"../../../data/query\";\nimport { compileGetter, compileSetter } from \"../../../core/utils/data\";\nimport { when, Deferred } from \"../../../core/utils/deferred\";\nimport { AgendaResourceProcessor } from \"./agendaResourceProcessor\";\nimport { getDisplayExpr, getFieldExpr, getValueExpr, getWrappedDataSource } from \"./utils\";\nexport class ResourceManager {\n  constructor(resources) {\n    this._resourceLoader = {};\n    this.agendaProcessor = new AgendaResourceProcessor();\n    this.setResources(resources);\n  }\n\n  _mapResourceData(resource, data) {\n    var valueGetter = compileGetter(getValueExpr(resource));\n    var displayGetter = compileGetter(getDisplayExpr(resource));\n    return map(data, function (item) {\n      var result = {\n        id: valueGetter(item),\n        text: displayGetter(item)\n      };\n\n      if (item.color) {\n        result.color = item.color;\n      }\n\n      return result;\n    });\n  }\n\n  _isMultipleResource(resourceField) {\n    var result = false;\n    each(this.getResources(), function (_, resource) {\n      var field = getFieldExpr(resource);\n\n      if (field === resourceField) {\n        result = resource.allowMultiple;\n        return false;\n      }\n    }.bind(this));\n    return result;\n  }\n\n  getDataAccessors(field, type) {\n    var result = null;\n    each(this._dataAccessors[type], function (accessorName, accessors) {\n      if (field === accessorName) {\n        result = accessors;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  setResources(resources) {\n    this._resources = resources;\n    this._dataAccessors = {\n      getter: {},\n      setter: {}\n    };\n    this._resourceFields = map(resources || [], function (resource) {\n      var field = getFieldExpr(resource);\n      this._dataAccessors.getter[field] = compileGetter(field);\n      this._dataAccessors.setter[field] = compileSetter(field);\n      return field;\n    }.bind(this));\n    this.agendaProcessor.initializeState(resources);\n  }\n\n  getResources() {\n    return this._resources || [];\n  }\n\n  getResourcesData() {\n    return this._resourcesData || [];\n  }\n\n  getEditors() {\n    var result = [];\n    var that = this;\n    each(this.getResources(), function (i, resource) {\n      var field = getFieldExpr(resource);\n\n      var currentResourceItems = that._getResourceDataByField(field);\n\n      result.push({\n        editorOptions: {\n          dataSource: currentResourceItems.length ? currentResourceItems : getWrappedDataSource(resource.dataSource),\n          displayExpr: getDisplayExpr(resource),\n          valueExpr: getValueExpr(resource)\n        },\n        dataField: field,\n        editorType: resource.allowMultiple ? \"dxTagBox\" : \"dxSelectBox\",\n        label: {\n          text: resource.label || field\n        }\n      });\n    });\n    return result;\n  }\n\n  getResourceDataByValue(field, value) {\n    var that = this;\n    var result = new Deferred();\n    each(this.getResources(), function (_, resource) {\n      var resourceField = getFieldExpr(resource);\n\n      if (resourceField === field) {\n        var dataSource = getWrappedDataSource(resource.dataSource);\n        var valueExpr = getValueExpr(resource);\n\n        if (!that._resourceLoader[field]) {\n          that._resourceLoader[field] = dataSource.load();\n        }\n\n        that._resourceLoader[field].done(function (data) {\n          var filteredData = query(data).filter(valueExpr, value).toArray();\n          delete that._resourceLoader[field];\n          result.resolve(filteredData[0]);\n        }).fail(function () {\n          delete that._resourceLoader[field];\n          result.reject();\n        });\n\n        return false;\n      }\n    });\n    return result.promise();\n  }\n\n  setResourcesToItem(itemData, resources) {\n    var resourcesSetter = this._dataAccessors.setter;\n\n    for (var name in resources) {\n      if (Object.prototype.hasOwnProperty.call(resources, name)) {\n        var resourceData = resources[name];\n        resourcesSetter[name](itemData, this._isMultipleResource(name) ? wrapToArray(resourceData) : resourceData);\n      }\n    }\n  }\n\n  getResourcesFromItem(itemData, wrapOnlyMultipleResources) {\n    var result = null;\n\n    if (!isDefined(wrapOnlyMultipleResources)) {\n      wrapOnlyMultipleResources = false;\n    }\n\n    this._resourceFields.forEach(field => {\n      each(itemData, (fieldName, fieldValue) => {\n        var tempObject = {};\n        tempObject[fieldName] = fieldValue;\n        var resourceData = this.getDataAccessors(field, \"getter\")(tempObject);\n\n        if (isDefined(resourceData)) {\n          if (!result) {\n            result = {};\n          }\n\n          if (1 === resourceData.length) {\n            resourceData = resourceData[0];\n          }\n\n          if (!wrapOnlyMultipleResources || wrapOnlyMultipleResources && this._isMultipleResource(field)) {\n            this.getDataAccessors(field, \"setter\")(tempObject, wrapToArray(resourceData));\n          } else {\n            this.getDataAccessors(field, \"setter\")(tempObject, resourceData);\n          }\n\n          extend(result, tempObject);\n          return true;\n        }\n      });\n    });\n\n    return result;\n  }\n\n  loadResources(groups) {\n    var result = new Deferred();\n    var that = this;\n    var deferreds = [];\n    each(this.getResourcesByFields(groups), function (i, resource) {\n      var deferred = new Deferred();\n      var field = getFieldExpr(resource);\n      deferreds.push(deferred);\n      getWrappedDataSource(resource.dataSource).load().done(function (data) {\n        deferred.resolve({\n          name: field,\n          items: that._mapResourceData(resource, data),\n          data: data\n        });\n      }).fail(function () {\n        deferred.reject();\n      });\n    });\n\n    if (!deferreds.length) {\n      that._resourcesData = [];\n      return result.resolve([]);\n    }\n\n    when.apply(null, deferreds).done(function () {\n      var data = Array.prototype.slice.call(arguments);\n\n      var mapFunction = function (obj) {\n        return {\n          name: obj.name,\n          items: obj.items,\n          data: obj.data\n        };\n      };\n\n      var isValidResources = that._isValidResourcesForGrouping(data);\n\n      that._resourcesData = isValidResources ? data : [];\n      result.resolve(isValidResources ? data.map(mapFunction) : []);\n    }).fail(function () {\n      result.reject();\n    });\n    return result.promise();\n  }\n\n  getResourcesByFields(fields) {\n    return grep(this.getResources(), function (resource) {\n      var field = getFieldExpr(resource);\n      return inArray(field, fields) > -1;\n    }.bind(this));\n  }\n\n  getResourceByField(field) {\n    return this.getResourcesByFields([field])[0] || {};\n  }\n\n  getResourceColor(field, value) {\n    var valueExpr = this.getResourceByField(field).valueExpr || \"id\";\n    var valueGetter = compileGetter(valueExpr);\n    var colorExpr = this.getResourceByField(field).colorExpr || \"color\";\n    var colorGetter = compileGetter(colorExpr);\n    var result = new Deferred();\n\n    var resourceData = this._getResourceDataByField(field);\n\n    var resourceDataLength = resourceData.length;\n    var color;\n\n    if (resourceDataLength) {\n      for (var i = 0; i < resourceDataLength; i++) {\n        if (valueGetter(resourceData[i]) === value) {\n          color = colorGetter(resourceData[i]);\n          break;\n        }\n      }\n\n      result.resolve(color);\n    } else {\n      this.getResourceDataByValue(field, value).done(function (resourceData) {\n        if (resourceData) {\n          color = colorGetter(resourceData);\n        }\n\n        result.resolve(color);\n      }).fail(function () {\n        result.reject();\n      });\n    }\n\n    return result.promise();\n  }\n\n  getResourceForPainting(groups) {\n    var resources = this.getResources();\n    var result;\n    each(resources, function (index, resource) {\n      if (resource.useColorAsDefault) {\n        result = resource;\n        return false;\n      }\n    });\n\n    if (!result) {\n      if (Array.isArray(groups) && groups.length) {\n        resources = this.getResourcesByFields(groups);\n      }\n\n      result = resources[resources.length - 1];\n    }\n\n    return result;\n  }\n\n  createResourcesTree(groups) {\n    var leafIndex = 0;\n    return function make(group, groupIndex, result, parent) {\n      result = result || [];\n\n      for (var i = 0; i < group.items.length; i++) {\n        var currentGroupItem = group.items[i];\n        var resultItem = {\n          name: group.name,\n          value: currentGroupItem.id,\n          title: currentGroupItem.text,\n          data: group.data && group.data[i],\n          children: [],\n          parent: parent ? parent : null\n        };\n        result.push(resultItem);\n        var nextGroupIndex = groupIndex + 1;\n\n        if (groups[nextGroupIndex]) {\n          make.call(this, groups[nextGroupIndex], nextGroupIndex, resultItem.children, resultItem);\n        }\n\n        if (!resultItem.children.length) {\n          resultItem.leafIndex = leafIndex;\n          leafIndex++;\n        }\n      }\n\n      return result;\n    }.call(this, groups[0], 0);\n  }\n\n  _hasGroupItem(appointmentResources, groupName, itemValue) {\n    var group = this.getDataAccessors(groupName, \"getter\")(appointmentResources);\n\n    if (group) {\n      if (inArray(itemValue, group) > -1) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  _createPlainResourcesByAppointmentAsync(rawAppointment) {\n    return this.agendaProcessor.createListAsync(rawAppointment);\n  }\n\n  _getResourceDataByField(fieldName) {\n    var loadedResources = this.getResourcesData();\n    var currentResourceData = [];\n\n    for (var i = 0, resourceCount = loadedResources.length; i < resourceCount; i++) {\n      if (loadedResources[i].name === fieldName) {\n        currentResourceData = loadedResources[i].data;\n        break;\n      }\n    }\n\n    return currentResourceData;\n  }\n\n  getResourceTreeLeaves(tree, appointmentResources, result) {\n    result = result || [];\n\n    for (var i = 0; i < tree.length; i++) {\n      if (!this._hasGroupItem(appointmentResources, tree[i].name, tree[i].value)) {\n        continue;\n      }\n\n      if (isDefined(tree[i].leafIndex)) {\n        result.push(tree[i].leafIndex);\n      }\n\n      if (tree[i].children) {\n        this.getResourceTreeLeaves(tree[i].children, appointmentResources, result);\n      }\n    }\n\n    return result;\n  }\n\n  groupAppointmentsByResources(appointments, resources) {\n    var tree = this.createResourcesTree(resources);\n    var result = {};\n    each(appointments, function (_, appointment) {\n      var appointmentResources = this.getResourcesFromItem(appointment);\n      var treeLeaves = this.getResourceTreeLeaves(tree, appointmentResources);\n\n      for (var i = 0; i < treeLeaves.length; i++) {\n        if (!result[treeLeaves[i]]) {\n          result[treeLeaves[i]] = [];\n        }\n\n        result[treeLeaves[i]].push(deepExtendArraySafe({}, appointment, true));\n      }\n    }.bind(this));\n    return result;\n  }\n\n  reduceResourcesTree(tree, existingAppointments, _result) {\n    _result = _result ? _result.children : [];\n    var that = this;\n    tree.forEach(function (node, index) {\n      var ok = false;\n      var resourceName = node.name;\n      var resourceValue = node.value;\n      var resourceTitle = node.title;\n      var resourceData = node.data;\n      var resourceGetter = that.getDataAccessors(resourceName, \"getter\");\n      existingAppointments.forEach(function (appointment) {\n        if (!ok) {\n          var resourceFromAppointment = resourceGetter(appointment);\n\n          if (Array.isArray(resourceFromAppointment)) {\n            if (resourceFromAppointment.indexOf(resourceValue) > -1) {\n              _result.push({\n                name: resourceName,\n                value: resourceValue,\n                title: resourceTitle,\n                data: resourceData,\n                children: []\n              });\n\n              ok = true;\n            }\n          } else if (resourceFromAppointment === resourceValue) {\n            _result.push({\n              name: resourceName,\n              value: resourceValue,\n              title: resourceTitle,\n              data: resourceData,\n              children: []\n            });\n\n            ok = true;\n          }\n        }\n      });\n\n      if (ok && node.children && node.children.length) {\n        that.reduceResourcesTree(node.children, existingAppointments, _result[index]);\n      }\n    });\n    return _result;\n  }\n\n  getResourcesDataByGroups(groups) {\n    var resourcesData = this.getResourcesData();\n\n    if (!groups || !groups.length) {\n      return resourcesData;\n    }\n\n    var fieldNames = {};\n    var currentResourcesData = [];\n    groups.forEach(group => {\n      each(group, (name, value) => fieldNames[name] = value);\n    });\n    var resourceData = resourcesData.filter(_ref => {\n      var {\n        name: name\n      } = _ref;\n      return isDefined(fieldNames[name]);\n    });\n    resourceData.forEach(data => currentResourcesData.push(extend({}, data)));\n    currentResourcesData.forEach(currentResource => {\n      var {\n        items: items,\n        data: data,\n        name: resourceName\n      } = currentResource;\n      var resource = this.getResourceByField(resourceName);\n      var valueExpr = getValueExpr(resource);\n      var filteredItems = [];\n      var filteredData = [];\n      groups.filter(group => isDefined(group[resourceName])).forEach(group => {\n        each(group, (name, value) => {\n          if (!filteredItems.filter(item => item.id === value && item[valueExpr] === name).length) {\n            var currentItems = items.filter(item => item.id === value);\n            var currentData = data.filter(item => item[valueExpr] === value);\n            filteredItems.push(...currentItems);\n            filteredData.push(...currentData);\n          }\n        });\n      });\n      currentResource.items = filteredItems;\n      currentResource.data = filteredData;\n    });\n    return currentResourcesData;\n  }\n\n  _isValidResourcesForGrouping(resources) {\n    var result = resources.reduce((isValidResources, currentResource) => isValidResources && currentResource.items.length > 0, true);\n    return result;\n  }\n\n}","map":{"version":3,"sources":["/home/igor/node_modules/devextreme/esm/ui/scheduler/resources/resourceManager.js"],"names":["wrapToArray","inArray","grep","isDefined","deepExtendArraySafe","each","map","extend","query","compileGetter","compileSetter","when","Deferred","AgendaResourceProcessor","getDisplayExpr","getFieldExpr","getValueExpr","getWrappedDataSource","ResourceManager","constructor","resources","_resourceLoader","agendaProcessor","setResources","_mapResourceData","resource","data","valueGetter","displayGetter","item","result","id","text","color","_isMultipleResource","resourceField","getResources","_","field","allowMultiple","bind","getDataAccessors","type","_dataAccessors","accessorName","accessors","_resources","getter","setter","_resourceFields","initializeState","getResourcesData","_resourcesData","getEditors","that","i","currentResourceItems","_getResourceDataByField","push","editorOptions","dataSource","length","displayExpr","valueExpr","dataField","editorType","label","getResourceDataByValue","value","load","done","filteredData","filter","toArray","resolve","fail","reject","promise","setResourcesToItem","itemData","resourcesSetter","name","Object","prototype","hasOwnProperty","call","resourceData","getResourcesFromItem","wrapOnlyMultipleResources","forEach","fieldName","fieldValue","tempObject","loadResources","groups","deferreds","getResourcesByFields","deferred","items","apply","Array","slice","arguments","mapFunction","obj","isValidResources","_isValidResourcesForGrouping","fields","getResourceByField","getResourceColor","colorExpr","colorGetter","resourceDataLength","getResourceForPainting","index","useColorAsDefault","isArray","createResourcesTree","leafIndex","make","group","groupIndex","parent","currentGroupItem","resultItem","title","children","nextGroupIndex","_hasGroupItem","appointmentResources","groupName","itemValue","_createPlainResourcesByAppointmentAsync","rawAppointment","createListAsync","loadedResources","currentResourceData","resourceCount","getResourceTreeLeaves","tree","groupAppointmentsByResources","appointments","appointment","treeLeaves","reduceResourcesTree","existingAppointments","_result","node","ok","resourceName","resourceValue","resourceTitle","resourceGetter","resourceFromAppointment","indexOf","getResourcesDataByGroups","resourcesData","fieldNames","currentResourcesData","_ref","currentResource","filteredItems","currentItems","currentData","reduce"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/resources/resourceManager.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    wrapToArray,\r\n    inArray\r\n} from \"../../../core/utils/array\";\r\nimport {\r\n    grep\r\n} from \"../../../core/utils/common\";\r\nimport {\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nimport {\r\n    deepExtendArraySafe\r\n} from \"../../../core/utils/object\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport query from \"../../../data/query\";\r\nimport {\r\n    compileGetter,\r\n    compileSetter\r\n} from \"../../../core/utils/data\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../../core/utils/deferred\";\r\nimport {\r\n    AgendaResourceProcessor\r\n} from \"./agendaResourceProcessor\";\r\nimport {\r\n    getDisplayExpr,\r\n    getFieldExpr,\r\n    getValueExpr,\r\n    getWrappedDataSource\r\n} from \"./utils\";\r\nexport class ResourceManager {\r\n    constructor(resources) {\r\n        this._resourceLoader = {};\r\n        this.agendaProcessor = new AgendaResourceProcessor;\r\n        this.setResources(resources)\r\n    }\r\n    _mapResourceData(resource, data) {\r\n        var valueGetter = compileGetter(getValueExpr(resource));\r\n        var displayGetter = compileGetter(getDisplayExpr(resource));\r\n        return map(data, (function(item) {\r\n            var result = {\r\n                id: valueGetter(item),\r\n                text: displayGetter(item)\r\n            };\r\n            if (item.color) {\r\n                result.color = item.color\r\n            }\r\n            return result\r\n        }))\r\n    }\r\n    _isMultipleResource(resourceField) {\r\n        var result = false;\r\n        each(this.getResources(), function(_, resource) {\r\n            var field = getFieldExpr(resource);\r\n            if (field === resourceField) {\r\n                result = resource.allowMultiple;\r\n                return false\r\n            }\r\n        }.bind(this));\r\n        return result\r\n    }\r\n    getDataAccessors(field, type) {\r\n        var result = null;\r\n        each(this._dataAccessors[type], (function(accessorName, accessors) {\r\n            if (field === accessorName) {\r\n                result = accessors;\r\n                return false\r\n            }\r\n        }));\r\n        return result\r\n    }\r\n    setResources(resources) {\r\n        this._resources = resources;\r\n        this._dataAccessors = {\r\n            getter: {},\r\n            setter: {}\r\n        };\r\n        this._resourceFields = map(resources || [], function(resource) {\r\n            var field = getFieldExpr(resource);\r\n            this._dataAccessors.getter[field] = compileGetter(field);\r\n            this._dataAccessors.setter[field] = compileSetter(field);\r\n            return field\r\n        }.bind(this));\r\n        this.agendaProcessor.initializeState(resources)\r\n    }\r\n    getResources() {\r\n        return this._resources || []\r\n    }\r\n    getResourcesData() {\r\n        return this._resourcesData || []\r\n    }\r\n    getEditors() {\r\n        var result = [];\r\n        var that = this;\r\n        each(this.getResources(), (function(i, resource) {\r\n            var field = getFieldExpr(resource);\r\n            var currentResourceItems = that._getResourceDataByField(field);\r\n            result.push({\r\n                editorOptions: {\r\n                    dataSource: currentResourceItems.length ? currentResourceItems : getWrappedDataSource(resource.dataSource),\r\n                    displayExpr: getDisplayExpr(resource),\r\n                    valueExpr: getValueExpr(resource)\r\n                },\r\n                dataField: field,\r\n                editorType: resource.allowMultiple ? \"dxTagBox\" : \"dxSelectBox\",\r\n                label: {\r\n                    text: resource.label || field\r\n                }\r\n            })\r\n        }));\r\n        return result\r\n    }\r\n    getResourceDataByValue(field, value) {\r\n        var that = this;\r\n        var result = new Deferred;\r\n        each(this.getResources(), (function(_, resource) {\r\n            var resourceField = getFieldExpr(resource);\r\n            if (resourceField === field) {\r\n                var dataSource = getWrappedDataSource(resource.dataSource);\r\n                var valueExpr = getValueExpr(resource);\r\n                if (!that._resourceLoader[field]) {\r\n                    that._resourceLoader[field] = dataSource.load()\r\n                }\r\n                that._resourceLoader[field].done((function(data) {\r\n                    var filteredData = query(data).filter(valueExpr, value).toArray();\r\n                    delete that._resourceLoader[field];\r\n                    result.resolve(filteredData[0])\r\n                })).fail((function() {\r\n                    delete that._resourceLoader[field];\r\n                    result.reject()\r\n                }));\r\n                return false\r\n            }\r\n        }));\r\n        return result.promise()\r\n    }\r\n    setResourcesToItem(itemData, resources) {\r\n        var resourcesSetter = this._dataAccessors.setter;\r\n        for (var name in resources) {\r\n            if (Object.prototype.hasOwnProperty.call(resources, name)) {\r\n                var resourceData = resources[name];\r\n                resourcesSetter[name](itemData, this._isMultipleResource(name) ? wrapToArray(resourceData) : resourceData)\r\n            }\r\n        }\r\n    }\r\n    getResourcesFromItem(itemData, wrapOnlyMultipleResources) {\r\n        var result = null;\r\n        if (!isDefined(wrapOnlyMultipleResources)) {\r\n            wrapOnlyMultipleResources = false\r\n        }\r\n        this._resourceFields.forEach(field => {\r\n            each(itemData, (fieldName, fieldValue) => {\r\n                var tempObject = {};\r\n                tempObject[fieldName] = fieldValue;\r\n                var resourceData = this.getDataAccessors(field, \"getter\")(tempObject);\r\n                if (isDefined(resourceData)) {\r\n                    if (!result) {\r\n                        result = {}\r\n                    }\r\n                    if (1 === resourceData.length) {\r\n                        resourceData = resourceData[0]\r\n                    }\r\n                    if (!wrapOnlyMultipleResources || wrapOnlyMultipleResources && this._isMultipleResource(field)) {\r\n                        this.getDataAccessors(field, \"setter\")(tempObject, wrapToArray(resourceData))\r\n                    } else {\r\n                        this.getDataAccessors(field, \"setter\")(tempObject, resourceData)\r\n                    }\r\n                    extend(result, tempObject);\r\n                    return true\r\n                }\r\n            })\r\n        });\r\n        return result\r\n    }\r\n    loadResources(groups) {\r\n        var result = new Deferred;\r\n        var that = this;\r\n        var deferreds = [];\r\n        each(this.getResourcesByFields(groups), (function(i, resource) {\r\n            var deferred = new Deferred;\r\n            var field = getFieldExpr(resource);\r\n            deferreds.push(deferred);\r\n            getWrappedDataSource(resource.dataSource).load().done((function(data) {\r\n                deferred.resolve({\r\n                    name: field,\r\n                    items: that._mapResourceData(resource, data),\r\n                    data: data\r\n                })\r\n            })).fail((function() {\r\n                deferred.reject()\r\n            }))\r\n        }));\r\n        if (!deferreds.length) {\r\n            that._resourcesData = [];\r\n            return result.resolve([])\r\n        }\r\n        when.apply(null, deferreds).done((function() {\r\n            var data = Array.prototype.slice.call(arguments);\r\n            var mapFunction = function(obj) {\r\n                return {\r\n                    name: obj.name,\r\n                    items: obj.items,\r\n                    data: obj.data\r\n                }\r\n            };\r\n            var isValidResources = that._isValidResourcesForGrouping(data);\r\n            that._resourcesData = isValidResources ? data : [];\r\n            result.resolve(isValidResources ? data.map(mapFunction) : [])\r\n        })).fail((function() {\r\n            result.reject()\r\n        }));\r\n        return result.promise()\r\n    }\r\n    getResourcesByFields(fields) {\r\n        return grep(this.getResources(), function(resource) {\r\n            var field = getFieldExpr(resource);\r\n            return inArray(field, fields) > -1\r\n        }.bind(this))\r\n    }\r\n    getResourceByField(field) {\r\n        return this.getResourcesByFields([field])[0] || {}\r\n    }\r\n    getResourceColor(field, value) {\r\n        var valueExpr = this.getResourceByField(field).valueExpr || \"id\";\r\n        var valueGetter = compileGetter(valueExpr);\r\n        var colorExpr = this.getResourceByField(field).colorExpr || \"color\";\r\n        var colorGetter = compileGetter(colorExpr);\r\n        var result = new Deferred;\r\n        var resourceData = this._getResourceDataByField(field);\r\n        var resourceDataLength = resourceData.length;\r\n        var color;\r\n        if (resourceDataLength) {\r\n            for (var i = 0; i < resourceDataLength; i++) {\r\n                if (valueGetter(resourceData[i]) === value) {\r\n                    color = colorGetter(resourceData[i]);\r\n                    break\r\n                }\r\n            }\r\n            result.resolve(color)\r\n        } else {\r\n            this.getResourceDataByValue(field, value).done((function(resourceData) {\r\n                if (resourceData) {\r\n                    color = colorGetter(resourceData)\r\n                }\r\n                result.resolve(color)\r\n            })).fail((function() {\r\n                result.reject()\r\n            }))\r\n        }\r\n        return result.promise()\r\n    }\r\n    getResourceForPainting(groups) {\r\n        var resources = this.getResources();\r\n        var result;\r\n        each(resources, (function(index, resource) {\r\n            if (resource.useColorAsDefault) {\r\n                result = resource;\r\n                return false\r\n            }\r\n        }));\r\n        if (!result) {\r\n            if (Array.isArray(groups) && groups.length) {\r\n                resources = this.getResourcesByFields(groups)\r\n            }\r\n            result = resources[resources.length - 1]\r\n        }\r\n        return result\r\n    }\r\n    createResourcesTree(groups) {\r\n        var leafIndex = 0;\r\n        return function make(group, groupIndex, result, parent) {\r\n            result = result || [];\r\n            for (var i = 0; i < group.items.length; i++) {\r\n                var currentGroupItem = group.items[i];\r\n                var resultItem = {\r\n                    name: group.name,\r\n                    value: currentGroupItem.id,\r\n                    title: currentGroupItem.text,\r\n                    data: group.data && group.data[i],\r\n                    children: [],\r\n                    parent: parent ? parent : null\r\n                };\r\n                result.push(resultItem);\r\n                var nextGroupIndex = groupIndex + 1;\r\n                if (groups[nextGroupIndex]) {\r\n                    make.call(this, groups[nextGroupIndex], nextGroupIndex, resultItem.children, resultItem)\r\n                }\r\n                if (!resultItem.children.length) {\r\n                    resultItem.leafIndex = leafIndex;\r\n                    leafIndex++\r\n                }\r\n            }\r\n            return result\r\n        }.call(this, groups[0], 0)\r\n    }\r\n    _hasGroupItem(appointmentResources, groupName, itemValue) {\r\n        var group = this.getDataAccessors(groupName, \"getter\")(appointmentResources);\r\n        if (group) {\r\n            if (inArray(itemValue, group) > -1) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    _createPlainResourcesByAppointmentAsync(rawAppointment) {\r\n        return this.agendaProcessor.createListAsync(rawAppointment)\r\n    }\r\n    _getResourceDataByField(fieldName) {\r\n        var loadedResources = this.getResourcesData();\r\n        var currentResourceData = [];\r\n        for (var i = 0, resourceCount = loadedResources.length; i < resourceCount; i++) {\r\n            if (loadedResources[i].name === fieldName) {\r\n                currentResourceData = loadedResources[i].data;\r\n                break\r\n            }\r\n        }\r\n        return currentResourceData\r\n    }\r\n    getResourceTreeLeaves(tree, appointmentResources, result) {\r\n        result = result || [];\r\n        for (var i = 0; i < tree.length; i++) {\r\n            if (!this._hasGroupItem(appointmentResources, tree[i].name, tree[i].value)) {\r\n                continue\r\n            }\r\n            if (isDefined(tree[i].leafIndex)) {\r\n                result.push(tree[i].leafIndex)\r\n            }\r\n            if (tree[i].children) {\r\n                this.getResourceTreeLeaves(tree[i].children, appointmentResources, result)\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    groupAppointmentsByResources(appointments, resources) {\r\n        var tree = this.createResourcesTree(resources);\r\n        var result = {};\r\n        each(appointments, function(_, appointment) {\r\n            var appointmentResources = this.getResourcesFromItem(appointment);\r\n            var treeLeaves = this.getResourceTreeLeaves(tree, appointmentResources);\r\n            for (var i = 0; i < treeLeaves.length; i++) {\r\n                if (!result[treeLeaves[i]]) {\r\n                    result[treeLeaves[i]] = []\r\n                }\r\n                result[treeLeaves[i]].push(deepExtendArraySafe({}, appointment, true))\r\n            }\r\n        }.bind(this));\r\n        return result\r\n    }\r\n    reduceResourcesTree(tree, existingAppointments, _result) {\r\n        _result = _result ? _result.children : [];\r\n        var that = this;\r\n        tree.forEach((function(node, index) {\r\n            var ok = false;\r\n            var resourceName = node.name;\r\n            var resourceValue = node.value;\r\n            var resourceTitle = node.title;\r\n            var resourceData = node.data;\r\n            var resourceGetter = that.getDataAccessors(resourceName, \"getter\");\r\n            existingAppointments.forEach((function(appointment) {\r\n                if (!ok) {\r\n                    var resourceFromAppointment = resourceGetter(appointment);\r\n                    if (Array.isArray(resourceFromAppointment)) {\r\n                        if (resourceFromAppointment.indexOf(resourceValue) > -1) {\r\n                            _result.push({\r\n                                name: resourceName,\r\n                                value: resourceValue,\r\n                                title: resourceTitle,\r\n                                data: resourceData,\r\n                                children: []\r\n                            });\r\n                            ok = true\r\n                        }\r\n                    } else if (resourceFromAppointment === resourceValue) {\r\n                        _result.push({\r\n                            name: resourceName,\r\n                            value: resourceValue,\r\n                            title: resourceTitle,\r\n                            data: resourceData,\r\n                            children: []\r\n                        });\r\n                        ok = true\r\n                    }\r\n                }\r\n            }));\r\n            if (ok && node.children && node.children.length) {\r\n                that.reduceResourcesTree(node.children, existingAppointments, _result[index])\r\n            }\r\n        }));\r\n        return _result\r\n    }\r\n    getResourcesDataByGroups(groups) {\r\n        var resourcesData = this.getResourcesData();\r\n        if (!groups || !groups.length) {\r\n            return resourcesData\r\n        }\r\n        var fieldNames = {};\r\n        var currentResourcesData = [];\r\n        groups.forEach(group => {\r\n            each(group, (name, value) => fieldNames[name] = value)\r\n        });\r\n        var resourceData = resourcesData.filter(_ref => {\r\n            var {\r\n                name: name\r\n            } = _ref;\r\n            return isDefined(fieldNames[name])\r\n        });\r\n        resourceData.forEach(data => currentResourcesData.push(extend({}, data)));\r\n        currentResourcesData.forEach(currentResource => {\r\n            var {\r\n                items: items,\r\n                data: data,\r\n                name: resourceName\r\n            } = currentResource;\r\n            var resource = this.getResourceByField(resourceName);\r\n            var valueExpr = getValueExpr(resource);\r\n            var filteredItems = [];\r\n            var filteredData = [];\r\n            groups.filter(group => isDefined(group[resourceName])).forEach(group => {\r\n                each(group, (name, value) => {\r\n                    if (!filteredItems.filter(item => item.id === value && item[valueExpr] === name).length) {\r\n                        var currentItems = items.filter(item => item.id === value);\r\n                        var currentData = data.filter(item => item[valueExpr] === value);\r\n                        filteredItems.push(...currentItems);\r\n                        filteredData.push(...currentData)\r\n                    }\r\n                })\r\n            });\r\n            currentResource.items = filteredItems;\r\n            currentResource.data = filteredData\r\n        });\r\n        return currentResourcesData\r\n    }\r\n    _isValidResourcesForGrouping(resources) {\r\n        var result = resources.reduce((isValidResources, currentResource) => isValidResources && currentResource.items.length > 0, true);\r\n        return result\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}