{"ast":null,"code":"var _jsxFileName = \"/home/igor/welcomedev-react-starter/src/components/GoogleLogin.tsx\";\n// import React from 'react'\n// import {useGoogleLogin} from 'react-google-login';\n// const clientId = '930716669637-27uerudri95vjbfrjqbe5s8dngf1pdf2.apps.googleusercontent.com'\n// const GoogleLogin : React.FC = () => {\n//     const onSuccess = (res:any) => {\n//         console.log(\"Login success: currentUser: \", res.profileObj);\n//         refreshTokenSetup(res);\n//     }\n//     const onFailure = (res:any) => {\n//         console.log(\"Login failed: res:\", res)\n//     }\n//     const {signIn } = useGoogleLogin({\n//         onSuccess,\n//         onFailure,\n//         clientId,\n//         isSignedIn: true,\n//         accessType: 'offline'\n//     });\n//     return (\n//         <div>\n//             <button onClick={signIn} className=\"button\" >\n//                 <img src=\"static/images/google.svg\" alt=\"google login\" className=\"icon\"></img>\n//                 <span className=\"buttonText\">Sign in with Google</span>\n//             </button>\n//         </div>\n//     )\n// }\nimport React from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst onGoogleLoginSuccess = useCallback(response => {\n  const idToken = response.tokenId;\n  const data = {\n    email: response.profileObj.email,\n    first_name: response.profileObj.givenName,\n    last_name: response.profileObj.familyName\n  };\n  validateTokenAndObtainSession({\n    data,\n    idToken\n  }).then(handleUserInit).catch(notifyError);\n}, [handleUserInit]);\n\nconst Login = () => {\n  return /*#__PURE__*/_jsxDEV(GoogleLogin, {\n    clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID // your Google app client ID\n    ,\n    buttonText: \"Sign in with Google\",\n    onSuccess: onGoogleLoginSuccess // perform your user logic here\n    ,\n    onFailure: onGoogleLoginFailure // handle errors here\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Login;\nexport default Login; // function refreshTokenSetup(res: any) {\n//     throw new Error('Function not implemented.AAAA');\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/igor/welcomedev-react-starter/src/components/GoogleLogin.tsx"],"names":["React","GoogleLogin","onGoogleLoginSuccess","useCallback","response","idToken","tokenId","data","email","profileObj","first_name","givenName","last_name","familyName","validateTokenAndObtainSession","then","handleUserInit","catch","notifyError","Login","process","env","REACT_APP_GOOGLE_CLIENT_ID","onGoogleLoginFailure"],"mappings":";AAAA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAEA,MAAMC,oBAAoB,GAAGC,WAAW,CACtCC,QAAQ,IAAI;AACV,QAAMC,OAAO,GAAGD,QAAQ,CAACE,OAAzB;AACA,QAAMC,IAAI,GAAG;AACXC,IAAAA,KAAK,EAAEJ,QAAQ,CAACK,UAAT,CAAoBD,KADhB;AAEXE,IAAAA,UAAU,EAAEN,QAAQ,CAACK,UAAT,CAAoBE,SAFrB;AAGXC,IAAAA,SAAS,EAAER,QAAQ,CAACK,UAAT,CAAoBI;AAHpB,GAAb;AAMAC,EAAAA,6BAA6B,CAAC;AAAEP,IAAAA,IAAF;AAAQF,IAAAA;AAAR,GAAD,CAA7B,CACGU,IADH,CACQC,cADR,EAEGC,KAFH,CAESC,WAFT;AAGD,CAZqC,EAatC,CAACF,cAAD,CAbsC,CAAxC;;AAgBA,MAAMG,KAAK,GAAG,MAAM;AAClB,sBACE,QAAC,WAAD;AACE,IAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADxB,CACqD;AADrD;AAEE,IAAA,UAAU,EAAC,qBAFb;AAGE,IAAA,SAAS,EAAEpB,oBAHb,CAGmC;AAHnC;AAIE,IAAA,SAAS,EAAEqB,oBAJb,CAImC;;AAJnC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;KAAMJ,K;AAWN,eAAeA,KAAf,C,CAEA;AACA;AACA","sourcesContent":["// import React from 'react'\n// import {useGoogleLogin} from 'react-google-login';\n\n// const clientId = '930716669637-27uerudri95vjbfrjqbe5s8dngf1pdf2.apps.googleusercontent.com'\n\n// const GoogleLogin : React.FC = () => {\n\n//     const onSuccess = (res:any) => {\n//         console.log(\"Login success: currentUser: \", res.profileObj);\n//         refreshTokenSetup(res);\n//     }\n\n//     const onFailure = (res:any) => {\n//         console.log(\"Login failed: res:\", res)\n//     }\n\n//     const {signIn } = useGoogleLogin({\n//         onSuccess,\n//         onFailure,\n//         clientId,\n//         isSignedIn: true,\n//         accessType: 'offline'\n//     });\n\n//     return (\n//         <div>\n//             <button onClick={signIn} className=\"button\" >\n//                 <img src=\"static/images/google.svg\" alt=\"google login\" className=\"icon\"></img>\n//                 <span className=\"buttonText\">Sign in with Google</span>\n//             </button>\n//         </div>\n//     )\n// }\n\nimport React from 'react';\nimport { GoogleLogin } from 'react-google-login';\n\nconst onGoogleLoginSuccess = useCallback(\n  response => {\n    const idToken = response.tokenId;\n    const data = {\n      email: response.profileObj.email,\n      first_name: response.profileObj.givenName,\n      last_name: response.profileObj.familyName\n    };\n\n    validateTokenAndObtainSession({ data, idToken })\n      .then(handleUserInit)\n      .catch(notifyError);\n  },\n  [handleUserInit]\n);\n\nconst Login = () => {\n  return (\n    <GoogleLogin\n      clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}  // your Google app client ID\n      buttonText=\"Sign in with Google\"\n      onSuccess={onGoogleLoginSuccess} // perform your user logic here\n      onFailure={onGoogleLoginFailure} // handle errors here\n    />\n  );\n};\n\nexport default Login\n\n// function refreshTokenSetup(res: any) {\n//     throw new Error('Function not implemented.AAAA');\n// }\n"]},"metadata":{},"sourceType":"module"}