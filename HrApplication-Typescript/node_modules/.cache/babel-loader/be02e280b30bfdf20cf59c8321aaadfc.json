{"ast":null,"code":"var _jsxFileName = \"/home/igor/welcomedev-react-starter/src/components/GoogleCalendar.tsx\";\n//---------------------------------------------\n// import 'whatwg-fetch';\n// import React from 'react';\n// import Scheduler from 'devextreme-react/scheduler';\n// import CustomStore from 'devextreme/data/custom_store';\n// function getData(_:any, requestOptions:any) {\n//   const PUBLIC_KEY = 'AIzaSyBnNAISIUKe6xdhq1_rjor2rxoI3UlMY7k',\n//     CALENDAR_ID = 'f7jnetm22dsjc3npc2lu3buvu4@group.calendar.google.com';\n//   const dataUrl = [ 'https://www.googleapis.com/calendar/v3/calendars/',\n//     CALENDAR_ID, '/events?key=', PUBLIC_KEY].join('');\n//   return fetch(dataUrl, requestOptions).then(\n//     (response) => response.json()\n//   ).then((data) => data.items);\n// }\n// const dataSource = new CustomStore({\n//   load: (options) => getData(options, { showDeleted: false })\n// });\n// const currentDate = new Date();\n// const views:any = ['day', 'workWeek', 'month'];\n// class GoogleCalendar extends React.Component {\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <div className=\"long-title\">\n//           <h3>QCerris</h3>\n//         </div>\n//         <Scheduler\n//           dataSource={dataSource}\n//           views={views}\n//           defaultCurrentView=\"workWeek\"\n//           defaultCurrentDate={currentDate}\n//           height={500}\n//           startDayHour={7}\n//           editing={false}\n//           showAllDayPanel={false}\n//           startDateExpr=\"start.dateTime\"\n//           endDateExpr=\"end.dateTime\"\n//           textExpr=\"summary\"\n//           timeZone=\"Europe/Belgrade\" />\n//       </React.Fragment>\n//     );\n//   }\n// }\n// export default GoogleCalendar;\n// import * as React from 'react';\n// import Button from '@mui/material/Button';\n// import { DatePicker, MuiPickersUtilsProvider,} from '@material-ui/pickers';\n// import DateFnsUtils from '@date-io/date-fns';\n// export default function CustomInput() {\n//     const [selectedDate, handleDateChange] = React.useState<Date | null | number|any>(new Date());\n//     const [selectedDate1, handleDateChange1] = React.useState<Date | null | number|any>(new Date());\n//     // const [value1, setValue1] = React.useState<Date | null | number|any>(new Date());\n//     function getDifferenceInDays(date1: number | Date | any, date2: number | Date | any) {\n//         const diffInMs = Math.abs(date2 - date1);\n//         return diffInMs / (1000 * 60 * 60 * 24);\n//     }\n//     return (\n//         <div>\n//             <div>\n//                 <MuiPickersUtilsProvider utils={DateFnsUtils}>\n//                     <DatePicker value={selectedDate} onChange={handleDateChange} />\n//                     <DatePicker value={selectedDate1} onChange={handleDateChange1} />\n//                 </MuiPickersUtilsProvider>\n//             </div>\n//             <br/>\n//             <div>\n//                 {getDifferenceInDays(selectedDate.getTime(),selectedDate1.getTime()) ?  \n//                     <Button variant=\"contained\" color=\"success\" > Submit </Button> \n//                     : \n//                     <Button variant=\"contained\" color=\"error\"> Error </Button>\n//                 }\n//             </div>\n//             <div>\n//             </div>\n//         </div>\n//     );\n// }\n//------------------------------------------------------------------------------------\nimport React from 'react';\nimport './App.css';\nimport { DateRangePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GoogleCalendar() {\n  const startValue = new Date(new Date().getFullYear(), new Date().getMonth(), 14);\n  const endValue = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 15);\n  const minDate = new Date(new Date().getFullYear(), new Date().getMonth(), 8);\n  const maxDate = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 20);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DateRangePickerComponent, {\n      placeholder: \"Enter Date Range\",\n      startDate: startValue,\n      endDate: endValue,\n      min: minDate,\n      max: maxDate,\n      minDays: 3,\n      maxDays: 5,\n      format: \"dd-MMM-yy\" //Uncomment below code to show month range picker. Also comment the properties min, max, mindays and maxdays\n      // start=\"Year\"\n      // depth=\"Year\"\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_c = GoogleCalendar;\nexport default GoogleCalendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleCalendar\");","map":{"version":3,"sources":["/home/igor/welcomedev-react-starter/src/components/GoogleCalendar.tsx"],"names":["React","DateRangePickerComponent","GoogleCalendar","startValue","Date","getFullYear","getMonth","endValue","minDate","maxDate"],"mappings":";AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,wBAAT,QAAyC,iCAAzC;;;AAEA,SAASC,cAAT,GAA0B;AAEtB,QAAMC,UAAgB,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,WAAX,EAAT,EAAmC,IAAID,IAAJ,GAAWE,QAAX,EAAnC,EAA0D,EAA1D,CAAzB;AACF,QAAMC,QAAc,GAAG,IAAIH,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,WAAX,EAAT,EAAmC,IAAID,IAAJ,GAAWE,QAAX,KAAwB,CAA3D,EAA8D,EAA9D,CAAvB;AACA,QAAME,OAAa,GAAG,IAAIJ,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,WAAX,EAAT,EAAmC,IAAID,IAAJ,GAAWE,QAAX,EAAnC,EAA0D,CAA1D,CAAtB;AACA,QAAMG,OAAa,GAAG,IAAIL,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,WAAX,EAAT,EAAmC,IAAID,IAAJ,GAAWE,QAAX,KAAsB,CAAzD,EAA4D,EAA5D,CAAtB;AAEA,sBACE;AAAA,2BACE,QAAC,wBAAD;AAA0B,MAAA,WAAW,EAAC,kBAAtC;AACA,MAAA,SAAS,EAAEH,UADX;AAEA,MAAA,OAAO,EAAEI,QAFT;AAGA,MAAA,GAAG,EAAEC,OAHL;AAIA,MAAA,GAAG,EAAEC,OAJL;AAKA,MAAA,OAAO,EAAE,CALT;AAMA,MAAA,OAAO,EAAE,CANT;AAOA,MAAA,MAAM,EAAC,WAPP,CAQA;AACA;AACA;;AAVA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;KAvBQP,c;AAyBT,eAAeA,cAAf","sourcesContent":["//---------------------------------------------\n\n// import 'whatwg-fetch';\n// import React from 'react';\n// import Scheduler from 'devextreme-react/scheduler';\n// import CustomStore from 'devextreme/data/custom_store';\n\n// function getData(_:any, requestOptions:any) {\n\n//   const PUBLIC_KEY = 'AIzaSyBnNAISIUKe6xdhq1_rjor2rxoI3UlMY7k',\n//     CALENDAR_ID = 'f7jnetm22dsjc3npc2lu3buvu4@group.calendar.google.com';\n//   const dataUrl = [ 'https://www.googleapis.com/calendar/v3/calendars/',\n//     CALENDAR_ID, '/events?key=', PUBLIC_KEY].join('');\n\n//   return fetch(dataUrl, requestOptions).then(\n//     (response) => response.json()\n//   ).then((data) => data.items);\n// }\n\n// const dataSource = new CustomStore({\n//   load: (options) => getData(options, { showDeleted: false })\n// });\n\n// const currentDate = new Date();\n// const views:any = ['day', 'workWeek', 'month'];\n\n// class GoogleCalendar extends React.Component {\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <div className=\"long-title\">\n//           <h3>QCerris</h3>\n//         </div>\n//         <Scheduler\n//           dataSource={dataSource}\n//           views={views}\n//           defaultCurrentView=\"workWeek\"\n//           defaultCurrentDate={currentDate}\n//           height={500}\n//           startDayHour={7}\n//           editing={false}\n//           showAllDayPanel={false}\n//           startDateExpr=\"start.dateTime\"\n//           endDateExpr=\"end.dateTime\"\n//           textExpr=\"summary\"\n//           timeZone=\"Europe/Belgrade\" />\n//       </React.Fragment>\n\n//     );\n//   }\n// }\n\n// export default GoogleCalendar;\n\n// import * as React from 'react';\n// import Button from '@mui/material/Button';\n// import { DatePicker, MuiPickersUtilsProvider,} from '@material-ui/pickers';\n// import DateFnsUtils from '@date-io/date-fns';\n\n\n// export default function CustomInput() {\n//     const [selectedDate, handleDateChange] = React.useState<Date | null | number|any>(new Date());\n//     const [selectedDate1, handleDateChange1] = React.useState<Date | null | number|any>(new Date());\n\n//     // const [value1, setValue1] = React.useState<Date | null | number|any>(new Date());\n\n//     function getDifferenceInDays(date1: number | Date | any, date2: number | Date | any) {\n//         const diffInMs = Math.abs(date2 - date1);\n//         return diffInMs / (1000 * 60 * 60 * 24);\n//     }\n\n//     return (\n//         <div>\n//             <div>\n//                 <MuiPickersUtilsProvider utils={DateFnsUtils}>\n//                     <DatePicker value={selectedDate} onChange={handleDateChange} />\n//                     <DatePicker value={selectedDate1} onChange={handleDateChange1} />\n//                 </MuiPickersUtilsProvider>\n//             </div>\n//             <br/>\n//             <div>\n//                 {getDifferenceInDays(selectedDate.getTime(),selectedDate1.getTime()) ?  \n//                     <Button variant=\"contained\" color=\"success\" > Submit </Button> \n//                     : \n//                     <Button variant=\"contained\" color=\"error\"> Error </Button>\n//                 }\n//             </div>\n//             <div>\n              \n//             </div>\n//         </div>\n//     );\n// }\n\n//------------------------------------------------------------------------------------\n\nimport React from 'react';\nimport './App.css';\nimport { DateRangePickerComponent } from '@syncfusion/ej2-react-calendars';\n\nfunction GoogleCalendar() {\n  \n    const startValue: Date = new Date(new Date().getFullYear(), new Date().getMonth(), 14);\n  const endValue: Date = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 15);\n  const minDate: Date = new Date(new Date().getFullYear(), new Date().getMonth(), 8);\n  const maxDate: Date = new Date(new Date().getFullYear(), new Date().getMonth()+1, 20);\n  \n  return (\n    <div>\n      <DateRangePickerComponent placeholder=\"Enter Date Range\"\n      startDate={startValue}\n      endDate={endValue}\n      min={minDate}\n      max={maxDate}\n      minDays={3}\n      maxDays={5}\n      format=\"dd-MMM-yy\"\n      //Uncomment below code to show month range picker. Also comment the properties min, max, mindays and maxdays\n      // start=\"Year\"\n      // depth=\"Year\"\n      ></DateRangePickerComponent>\n    </div>\n  );\n}\n\nexport default GoogleCalendar;"]},"metadata":{},"sourceType":"module"}