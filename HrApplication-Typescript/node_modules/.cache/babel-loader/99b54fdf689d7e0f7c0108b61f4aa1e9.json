{"ast":null,"code":"var _jsxFileName = \"/home/igor/welcomedev-react-starter/src/calendar/Calendar.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { DateRange } from 'react-date-range'; // interface Props{\n//     startDate: Date,\n//     endDate: Date | null | undefined,\n//     key: string\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Calendar() {\n  _s();\n\n  const [state, setState] = useState([{\n    startDate: new Date(),\n    endDate: null,\n    key: 'selection'\n  }]);\n  return /*#__PURE__*/_jsxDEV(DateRange, {\n    editableDateInputs: true,\n    onChange: item => setState([item.selection]),\n    moveRangeOnFirstSelection: false // ranges={state}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Calendar, \"UHPF3q8SoSsCTsFUsHSzhCCVIaY=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/igor/welcomedev-react-starter/src/calendar/Calendar.tsx"],"names":["useState","DateRange","Calendar","state","setState","startDate","Date","endDate","key","item","selection"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CAEA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,QAAT,GAAmB;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAC/B;AACAK,IAAAA,SAAS,EAAE,IAAIC,IAAJ,EADX;AAEAC,IAAAA,OAAO,EAAE,IAFT;AAGAC,IAAAA,GAAG,EAAE;AAHL,GAD+B,CAAD,CAAlC;AAQA,sBACI,QAAC,SAAD;AACA,IAAA,kBAAkB,EAAE,IADpB;AAEA,IAAA,QAAQ,EAAGC,IAAD,IAA8BL,QAAQ,CAAC,CAACK,IAAI,CAACC,SAAN,CAAD,CAFhD;AAGA,IAAA,yBAAyB,EAAE,KAH3B,CAIA;;AAJA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAjBQR,Q;;KAAAA,Q;AAmBT,eAAeA,QAAf","sourcesContent":["import {useState} from 'react';\nimport { DateRange } from 'react-date-range';\n\n// interface Props{\n//     startDate: Date,\n//     endDate: Date | null | undefined,\n//     key: string\n// }\n\nfunction Calendar(){\n    const [state, setState] = useState([\n        {\n        startDate: new Date(),\n        endDate: null,\n        key: 'selection'\n        }\n    ]);\n    \n    return(\n        <DateRange\n        editableDateInputs={true}\n        onChange={(item : Date | null | any) => setState([item.selection])}\n        moveRangeOnFirstSelection={false}\n        // ranges={state}\n        />\n    );\n}\n\nexport default Calendar"]},"metadata":{},"sourceType":"module"}