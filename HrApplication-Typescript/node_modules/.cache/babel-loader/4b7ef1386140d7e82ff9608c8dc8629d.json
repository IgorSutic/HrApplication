{"ast":null,"code":"// const clientId = '930716669637-27uerudri95vjbfrjqbe5s8dngf1pdf2.apps.googleusercontent.com'\n// const GoogleLogin : React.FC = () => {\n//     const onSuccess = (res:any) => {\n//         console.log(\"Login success: currentUser: \", res.profileObj);\n//         refreshTokenSetup(res);\n//     }\n//     const onFailure = (res:any) => {\n//         console.log(\"Login failed: res:\", res)\n//     }\n//     const {signIn } = useGoogleLogin({\n//         onSuccess,\n//         onFailure,\n//         clientId,\n//         isSignedIn: true,\n//         accessType: 'offline'\n//     });\n//     return (\n//         <div>\n//             <button onClick={signIn} className=\"button\" >\n//                 <img src=\"static/images/google.svg\" alt=\"google login\" className=\"icon\"></img>\n//                 <span className=\"buttonText\">Sign in with Google</span>\n//             </button>\n//         </div>\n//     )\n// }\nconst GoogleLogin = () => {\n  const responseGoogle = response => {\n    let tokenBlob = new Blob([JSON.stringify({\n      access_token: response.accessToken\n    }, null, 2)]);\n    let config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }; // The call takes the URl, the body (your stringified blob), and the headers config\n\n    axios.post('http://localhost:8000/api/auth/google/login', tokenBlob, config).then(response => {\n      const token = response.headers;\n\n      if (token) {\n        setData({ ...data,\n          token: token,\n          isAuthenticated: true\n        });\n      }\n    });\n  };\n};\n\n_c = GoogleLogin;\nexport default GoogleLogin; // function refreshTokenSetup(res: any) {\n//     throw new Error('Function not implemented.AAAA');\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleLogin\");","map":{"version":3,"sources":["/home/igor/welcomedev-react-starter/src/components/GoogleLogin.tsx"],"names":["GoogleLogin","responseGoogle","response","tokenBlob","Blob","JSON","stringify","access_token","accessToken","config","headers","axios","post","then","token","setData","data","isAuthenticated"],"mappings":"AAGA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,WAAsB,GAAG,MAAM;AAEjC,QAAMC,cAAc,GAAIC,QAAD,IAAoB;AAEvC,QAAIC,SAAS,GAAG,IAAIC,IAAJ,CAAS,CACrBC,IAAI,CAACC,SAAL,CAAe;AACXC,MAAAA,YAAY,EAAEL,QAAQ,CAACM;AADZ,KAAf,EAEG,IAFH,EAES,CAFT,CADqB,CAAT,CAAhB;AAMA,QAAIC,MAAM,GAAG;AACTC,MAAAA,OAAO,EAAE;AACT,wBAAgB;AADP;AADA,KAAb,CARuC,CAc7C;;AACEC,IAAAA,KAAK,CAACC,IAAN,CAAW,6CAAX,EAA0DT,SAA1D,EAAqEM,MAArE,EACGI,IADH,CACQX,QAAQ,IAAI;AACd,YAAMY,KAAK,GAAGZ,QAAQ,CAACQ,OAAvB;;AACA,UAAII,KAAJ,EAAU;AACNC,QAAAA,OAAO,CAAC,EACJ,GAAGC,IADC;AACKF,UAAAA,KAAK,EAAEA,KADZ;AACmBG,UAAAA,eAAe,EAAE;AADpC,SAAD,CAAP;AAGH;AACN,KARD;AASH,GAxBG;AAyBH,CA3BD;;KAAMjB,W;AA6BN,eAAeA,WAAf,C,CAEA;AACA;AACA","sourcesContent":["import React from 'react'\nimport {useGoogleLogin} from 'react-google-login';\n\n// const clientId = '930716669637-27uerudri95vjbfrjqbe5s8dngf1pdf2.apps.googleusercontent.com'\n\n// const GoogleLogin : React.FC = () => {\n\n//     const onSuccess = (res:any) => {\n//         console.log(\"Login success: currentUser: \", res.profileObj);\n//         refreshTokenSetup(res);\n//     }\n\n//     const onFailure = (res:any) => {\n//         console.log(\"Login failed: res:\", res)\n//     }\n\n//     const {signIn } = useGoogleLogin({\n//         onSuccess,\n//         onFailure,\n//         clientId,\n//         isSignedIn: true,\n//         accessType: 'offline'\n//     });\n\n//     return (\n//         <div>\n//             <button onClick={signIn} className=\"button\" >\n//                 <img src=\"static/images/google.svg\" alt=\"google login\" className=\"icon\"></img>\n//                 <span className=\"buttonText\">Sign in with Google</span>\n//             </button>\n//         </div>\n//     )\n// }\n\nconst GoogleLogin : React.FC = () => {\n\n    const responseGoogle = (response : any) => {\n\n        let tokenBlob = new Blob([\n            JSON.stringify({\n                access_token: response.accessToken\n            }, null, 2)\n        ]);\n\n        let config = {\n            headers: {\n            'Content-Type': 'application/json'\n            }\n        };\n\n  // The call takes the URl, the body (your stringified blob), and the headers config\n    axios.post('http://localhost:8000/api/auth/google/login', tokenBlob, config)\n      .then(response => {\n          const token = response.headers;\n          if (token){\n              setData({\n                  ...data, token: token, isAuthenticated: true\n              });\n          }\n    });\n};\n}\n\nexport default GoogleLogin;\n\n// function refreshTokenSetup(res: any) {\n//     throw new Error('Function not implemented.AAAA');\n// }\n"]},"metadata":{},"sourceType":"module"}