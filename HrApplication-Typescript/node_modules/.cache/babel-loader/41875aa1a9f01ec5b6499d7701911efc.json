{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/appointmentPopup.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport devices from \"../../core/devices\";\nimport $ from \"../../core/renderer\";\nimport dateUtils from \"../../core/utils/date\";\nimport { Deferred, when } from \"../../core/utils/deferred\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport { isDefined, isEmptyObject } from \"../../core/utils/type\";\nimport { getWindow, hasWindow } from \"../../core/utils/window\";\nimport { triggerResizeEvent } from \"../../events/visibility_change\";\nimport messageLocalization from \"../../localization/message\";\nimport Popup from \"../popup\";\nimport { AppointmentForm } from \"./appointment_form\";\nimport { hide as hideLoading, show as showLoading } from \"./loading\";\nvar toMs = dateUtils.dateToMilliseconds;\nvar WIDGET_CLASS = \"dx-scheduler\";\nvar APPOINTMENT_POPUP_CLASS = \"\".concat(WIDGET_CLASS, \"-appointment-popup\");\nvar APPOINTMENT_POPUP_WIDTH = 485;\nvar APPOINTMENT_POPUP_WIDTH_WITH_RECURRENCE = 970;\nvar APPOINTMENT_POPUP_FULLSCREEN_WINDOW_WIDTH = 1e3;\nvar APPOINTMENT_POPUP_FULLSCREEN_WINDOW_WIDTH_MOBILE = 500;\nvar APPOINTMENT_POPUP_WIDTH_MOBILE = 350;\nvar TOOLBAR_ITEM_AFTER_LOCATION = \"after\";\nvar TOOLBAR_ITEM_BEFORE_LOCATION = \"before\";\nvar DAY_IN_MS = toMs(\"day\");\nexport default class AppointmentPopup {\n  constructor(scheduler) {\n    this.scheduler = scheduler;\n    this._popup = null;\n    this._appointmentForm = null;\n    this.state = {\n      lastEditData: null,\n      saveChangesLocker: false,\n      appointment: {\n        data: null,\n        isEmptyText: false,\n        isEmptyDescription: false\n      }\n    };\n  }\n\n  show() {\n    var data = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n    var isDoneButtonVisible = arguments.length > 1 ? arguments[1] : void 0;\n\n    if (isEmptyObject(data)) {\n      var startDate = new Date(this.scheduler.option(\"currentDate\"));\n      var endDate = new Date(startDate.getTime() + this.scheduler.option(\"cellDuration\") * toMs(\"minute\"));\n      this.scheduler.fire(\"setField\", \"startDate\", data, startDate);\n      this.scheduler.fire(\"setField\", \"endDate\", data, endDate);\n    }\n\n    this.state.appointment.data = data;\n\n    if (!this._popup) {\n      var popupConfig = this._createPopupConfig();\n\n      this._popup = this._createPopup(popupConfig);\n    }\n\n    this._popup.option(\"toolbarItems\", this._createPopupToolbarItems(isDoneButtonVisible));\n\n    this._popup.show();\n  }\n\n  hide() {\n    this._popup.hide();\n  }\n\n  isVisible() {\n    return this._popup ? this._popup.option(\"visible\") : false;\n  }\n\n  dispose() {\n    if (this._$popup) {\n      this._popup.$element().remove();\n\n      this._$popup = null;\n    }\n  }\n\n  _createPopup(options) {\n    var popupElement = $(\"<div>\").addClass(APPOINTMENT_POPUP_CLASS).appendTo(this.scheduler.$element());\n    return this.scheduler._createComponent(popupElement, Popup, options);\n  }\n\n  _createPopupConfig() {\n    return {\n      height: \"auto\",\n      maxHeight: \"100%\",\n      showCloseButton: false,\n      showTitle: false,\n      onHiding: () => {\n        this.scheduler.focus();\n      },\n      contentTemplate: () => this._createPopupContent(),\n      onShowing: e => this._onShowing(e),\n      defaultOptionsRules: [{\n        device: () => devices.current().android,\n        options: {\n          showTitle: false\n        }\n      }]\n    };\n  }\n\n  _onShowing(e) {\n    this._updateForm();\n\n    var arg = {\n      form: this._appointmentForm,\n      popup: this._popup,\n      appointmentData: this.state.appointment.data,\n      cancel: false\n    };\n\n    this.scheduler._actions.onAppointmentFormOpening(arg);\n\n    this.scheduler._processActionResult(arg, canceled => {\n      if (canceled) {\n        e.cancel = true;\n      } else {\n        this.updatePopupFullScreenMode();\n      }\n    });\n  }\n\n  _createPopupContent() {\n    var formElement = $(\"<div>\");\n    this._appointmentForm = this._createForm(formElement);\n    return formElement;\n  }\n\n  _createAppointmentFormData(rawAppointment) {\n    var appointment = this._createAppointmentAdapter(rawAppointment);\n\n    var result = extend(true, {\n      repeat: !!appointment.recurrenceRule\n    }, rawAppointment);\n    each(this.scheduler._resourcesManager.getResourcesFromItem(result, true) || {}, (name, value) => result[name] = value);\n    return result;\n  }\n\n  _createForm(element) {\n    var {\n      expr: expr\n    } = this.scheduler._dataAccessors;\n    var resources = this.scheduler.option(\"resources\");\n\n    var allowTimeZoneEditing = this._getAllowTimeZoneEditing();\n\n    var rawAppointment = this.state.appointment.data;\n\n    var formData = this._createAppointmentFormData(rawAppointment);\n\n    var readOnly = this._isReadOnly(rawAppointment);\n\n    AppointmentForm.prepareAppointmentFormEditors(expr, this.scheduler, this.triggerResize.bind(this), this.changeSize.bind(this), formData, allowTimeZoneEditing, readOnly);\n\n    if (resources && resources.length) {\n      AppointmentForm.concatResources(this.scheduler._resourcesManager.getEditors());\n    }\n\n    return AppointmentForm.create(this.scheduler._createComponent.bind(this.scheduler), element, readOnly, formData);\n  }\n\n  _getAllowTimeZoneEditing() {\n    var scheduler = this.scheduler;\n    return scheduler.option(\"editing.allowTimeZoneEditing\") || scheduler.option(\"editing.allowEditingTimeZones\");\n  }\n\n  _isReadOnly(rawAppointment) {\n    var adapter = this.scheduler.createAppointmentAdapter(rawAppointment);\n\n    if (rawAppointment && adapter.disabled) {\n      return true;\n    }\n\n    return this.scheduler._editAppointmentData ? !this.scheduler._editing.allowUpdating : false;\n  }\n\n  _createAppointmentAdapter(rawAppointment) {\n    return this.scheduler.createAppointmentAdapter(rawAppointment);\n  }\n\n  _updateForm() {\n    var {\n      data: data\n    } = this.state.appointment;\n\n    var adapter = this._createAppointmentAdapter(data);\n\n    var allDay = adapter.allDay;\n    var startDate = adapter.startDate && adapter.calculateStartDate(\"toAppointment\");\n    var endDate = adapter.endDate && adapter.calculateEndDate(\"toAppointment\");\n    this.state.appointment.isEmptyText = void 0 === data || void 0 === adapter.text;\n    this.state.appointment.isEmptyDescription = void 0 === data || void 0 === adapter.description;\n\n    var appointment = this._createAppointmentAdapter(this._createAppointmentFormData(data));\n\n    if (void 0 === appointment.text) {\n      appointment.text = \"\";\n    }\n\n    if (void 0 === appointment.description) {\n      appointment.description = \"\";\n    }\n\n    if (void 0 === appointment.recurrenceRule) {\n      appointment.recurrenceRule = \"\";\n    }\n\n    var formData = appointment.source();\n\n    if (startDate) {\n      this.scheduler.fire(\"setField\", \"startDate\", formData, startDate);\n    }\n\n    if (endDate) {\n      this.scheduler.fire(\"setField\", \"endDate\", formData, endDate);\n    }\n\n    var {\n      startDateExpr: startDateExpr,\n      endDateExpr: endDateExpr\n    } = this.scheduler._dataAccessors.expr;\n\n    this._appointmentForm.option(\"readOnly\", this._isReadOnly(data));\n\n    AppointmentForm.updateFormData(this._appointmentForm, formData, this.scheduler._dataAccessors.expr);\n    AppointmentForm.setEditorsType(this._appointmentForm, startDateExpr, endDateExpr, allDay);\n  }\n\n  _isDeviceMobile() {\n    return \"desktop\" !== devices.current().deviceType;\n  }\n\n  _isPopupFullScreenNeeded() {\n    var width = this._tryGetWindowWidth();\n\n    if (width) {\n      return this._isDeviceMobile() ? width < APPOINTMENT_POPUP_FULLSCREEN_WINDOW_WIDTH_MOBILE : width < APPOINTMENT_POPUP_FULLSCREEN_WINDOW_WIDTH;\n    }\n\n    return false;\n  }\n\n  _tryGetWindowWidth() {\n    if (hasWindow()) {\n      var window = getWindow();\n      return $(window).width();\n    }\n  }\n\n  triggerResize() {\n    this._popup && triggerResizeEvent(this._popup.$element());\n  }\n\n  _getMaxWidth(isRecurrence) {\n    if (this._isDeviceMobile()) {\n      return APPOINTMENT_POPUP_WIDTH_MOBILE;\n    }\n\n    return isRecurrence ? APPOINTMENT_POPUP_WIDTH_WITH_RECURRENCE : APPOINTMENT_POPUP_WIDTH;\n  }\n\n  changeSize(isRecurrence) {\n    var isFullScreen = this._isPopupFullScreenNeeded();\n\n    this._popup.option({\n      maxWidth: isFullScreen ? \"100%\" : this._getMaxWidth(isRecurrence),\n      fullScreen: isFullScreen\n    });\n  }\n\n  updatePopupFullScreenMode() {\n    if (!this._appointmentForm) {\n      return;\n    }\n\n    var isRecurrence = AppointmentForm.getRecurrenceRule(this._appointmentForm.option(\"formData\"), this.scheduler._dataAccessors.expr);\n\n    if (this.isVisible()) {\n      this.changeSize(isRecurrence);\n    }\n  }\n\n  _createPopupToolbarItems(isDoneButtonVisible) {\n    var result = [];\n    var isIOs = \"ios\" === devices.current().platform;\n\n    if (isDoneButtonVisible) {\n      result.push({\n        shortcut: \"done\",\n        options: {\n          text: messageLocalization.format(\"Done\")\n        },\n        location: TOOLBAR_ITEM_AFTER_LOCATION,\n        onClick: e => this._doneButtonClickHandler(e)\n      });\n    }\n\n    result.push({\n      shortcut: \"cancel\",\n      location: isIOs ? TOOLBAR_ITEM_BEFORE_LOCATION : TOOLBAR_ITEM_AFTER_LOCATION\n    });\n    return result;\n  }\n\n  saveChanges(showLoadPanel) {\n    var deferred = new Deferred();\n\n    var validation = this._appointmentForm.validate();\n\n    var state = this.state.appointment;\n    showLoadPanel && this._showLoadPanel();\n    when(validation && validation.complete || validation).done(validation => {\n      if (validation && !validation.isValid) {\n        this._hideLoadPanel();\n\n        deferred.resolve(false);\n        return;\n      }\n\n      var formData = this._appointmentForm.option(\"formData\");\n\n      var adapter = this.scheduler.createAppointmentAdapter(formData);\n      var appointment = adapter.clone({\n        pathTimeZone: \"fromAppointment\"\n      }).source();\n      var oldData = this.scheduler._editAppointmentData;\n      var recData = this.scheduler._updatedRecAppointment;\n\n      if (state.isEmptyText && \"\" === adapter.text) {\n        delete appointment.text;\n      }\n\n      if (state.isEmptyDescription && \"\" === adapter.description) {\n        delete appointment.description;\n      }\n\n      if (void 0 === state.data.recurrenceRule && \"\" === adapter.recurrenceRule) {\n        delete appointment.recurrenceRule;\n      }\n\n      if (isDefined(appointment.repeat)) {\n        delete appointment.repeat;\n      }\n\n      if (oldData && !recData) {\n        this.scheduler.updateAppointment(oldData, appointment).done(deferred.resolve);\n      } else {\n        if (recData) {\n          this.scheduler.updateAppointment(oldData, recData);\n          delete this.scheduler._updatedRecAppointment;\n        }\n\n        this.scheduler.addAppointment(appointment).done(deferred.resolve);\n      }\n\n      deferred.done(() => {\n        this._hideLoadPanel();\n\n        this.state.lastEditData = appointment;\n      });\n    });\n    return deferred.promise();\n  }\n\n  _doneButtonClickHandler(e) {\n    e.cancel = true;\n    this.saveEditData();\n  }\n\n  saveEditData() {\n    var deferred = new Deferred();\n\n    if (this._tryLockSaveChanges()) {\n      when(this.saveChanges(true)).done(() => {\n        if (this.state.lastEditData) {\n          var adapter = this.scheduler.createAppointmentAdapter(this.state.lastEditData);\n          var {\n            startDate: startDate,\n            endDate: endDate,\n            allDay: allDay\n          } = adapter;\n          var startTime = startDate.getTime();\n          var endTime = endDate.getTime();\n          var inAllDayRow = allDay || endTime - startTime >= DAY_IN_MS;\n\n          this.scheduler._workSpace.updateScrollPosition(startDate, this.scheduler._resourcesManager.getResourcesFromItem(this.state.lastEditData, true), inAllDayRow);\n\n          this.state.lastEditData = null;\n        }\n\n        this._unlockSaveChanges();\n\n        deferred.resolve();\n      });\n    }\n\n    return deferred.promise();\n  }\n\n  _hideLoadPanel() {\n    hideLoading();\n  }\n\n  _showLoadPanel() {\n    var $overlayContent = this._popup.$overlayContent();\n\n    showLoading({\n      container: $overlayContent,\n      position: {\n        of: $overlayContent\n      }\n    });\n  }\n\n  _tryLockSaveChanges() {\n    if (false === this.state.saveChangesLocker) {\n      this.state.saveChangesLocker = true;\n      return true;\n    }\n\n    return false;\n  }\n\n  _unlockSaveChanges() {\n    this.state.saveChangesLocker = false;\n  }\n\n}","map":{"version":3,"sources":["/home/igor/node_modules/devextreme/esm/ui/scheduler/appointmentPopup.js"],"names":["devices","$","dateUtils","Deferred","when","extend","each","isDefined","isEmptyObject","getWindow","hasWindow","triggerResizeEvent","messageLocalization","Popup","AppointmentForm","hide","hideLoading","show","showLoading","toMs","dateToMilliseconds","WIDGET_CLASS","APPOINTMENT_POPUP_CLASS","concat","APPOINTMENT_POPUP_WIDTH","APPOINTMENT_POPUP_WIDTH_WITH_RECURRENCE","APPOINTMENT_POPUP_FULLSCREEN_WINDOW_WIDTH","APPOINTMENT_POPUP_FULLSCREEN_WINDOW_WIDTH_MOBILE","APPOINTMENT_POPUP_WIDTH_MOBILE","TOOLBAR_ITEM_AFTER_LOCATION","TOOLBAR_ITEM_BEFORE_LOCATION","DAY_IN_MS","AppointmentPopup","constructor","scheduler","_popup","_appointmentForm","state","lastEditData","saveChangesLocker","appointment","data","isEmptyText","isEmptyDescription","arguments","length","isDoneButtonVisible","startDate","Date","option","endDate","getTime","fire","popupConfig","_createPopupConfig","_createPopup","_createPopupToolbarItems","isVisible","dispose","_$popup","$element","remove","options","popupElement","addClass","appendTo","_createComponent","height","maxHeight","showCloseButton","showTitle","onHiding","focus","contentTemplate","_createPopupContent","onShowing","e","_onShowing","defaultOptionsRules","device","current","android","_updateForm","arg","form","popup","appointmentData","cancel","_actions","onAppointmentFormOpening","_processActionResult","canceled","updatePopupFullScreenMode","formElement","_createForm","_createAppointmentFormData","rawAppointment","_createAppointmentAdapter","result","repeat","recurrenceRule","_resourcesManager","getResourcesFromItem","name","value","element","expr","_dataAccessors","resources","allowTimeZoneEditing","_getAllowTimeZoneEditing","formData","readOnly","_isReadOnly","prepareAppointmentFormEditors","triggerResize","bind","changeSize","concatResources","getEditors","create","adapter","createAppointmentAdapter","disabled","_editAppointmentData","_editing","allowUpdating","allDay","calculateStartDate","calculateEndDate","text","description","source","startDateExpr","endDateExpr","updateFormData","setEditorsType","_isDeviceMobile","deviceType","_isPopupFullScreenNeeded","width","_tryGetWindowWidth","window","_getMaxWidth","isRecurrence","isFullScreen","maxWidth","fullScreen","getRecurrenceRule","isIOs","platform","push","shortcut","format","location","onClick","_doneButtonClickHandler","saveChanges","showLoadPanel","deferred","validation","validate","_showLoadPanel","complete","done","isValid","_hideLoadPanel","resolve","clone","pathTimeZone","oldData","recData","_updatedRecAppointment","updateAppointment","addAppointment","promise","saveEditData","_tryLockSaveChanges","startTime","endTime","inAllDayRow","_workSpace","updateScrollPosition","_unlockSaveChanges","$overlayContent","container","position","of"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/appointmentPopup.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport devices from \"../../core/devices\";\r\nimport $ from \"../../core/renderer\";\r\nimport dateUtils from \"../../core/utils/date\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isEmptyObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getWindow,\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    triggerResizeEvent\r\n} from \"../../events/visibility_change\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Popup from \"../popup\";\r\nimport {\r\n    AppointmentForm\r\n} from \"./appointment_form\";\r\nimport {\r\n    hide as hideLoading,\r\n    show as showLoading\r\n} from \"./loading\";\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nvar WIDGET_CLASS = \"dx-scheduler\";\r\nvar APPOINTMENT_POPUP_CLASS = \"\".concat(WIDGET_CLASS, \"-appointment-popup\");\r\nvar APPOINTMENT_POPUP_WIDTH = 485;\r\nvar APPOINTMENT_POPUP_WIDTH_WITH_RECURRENCE = 970;\r\nvar APPOINTMENT_POPUP_FULLSCREEN_WINDOW_WIDTH = 1e3;\r\nvar APPOINTMENT_POPUP_FULLSCREEN_WINDOW_WIDTH_MOBILE = 500;\r\nvar APPOINTMENT_POPUP_WIDTH_MOBILE = 350;\r\nvar TOOLBAR_ITEM_AFTER_LOCATION = \"after\";\r\nvar TOOLBAR_ITEM_BEFORE_LOCATION = \"before\";\r\nvar DAY_IN_MS = toMs(\"day\");\r\nexport default class AppointmentPopup {\r\n    constructor(scheduler) {\r\n        this.scheduler = scheduler;\r\n        this._popup = null;\r\n        this._appointmentForm = null;\r\n        this.state = {\r\n            lastEditData: null,\r\n            saveChangesLocker: false,\r\n            appointment: {\r\n                data: null,\r\n                isEmptyText: false,\r\n                isEmptyDescription: false\r\n            }\r\n        }\r\n    }\r\n    show() {\r\n        var data = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\r\n        var isDoneButtonVisible = arguments.length > 1 ? arguments[1] : void 0;\r\n        if (isEmptyObject(data)) {\r\n            var startDate = new Date(this.scheduler.option(\"currentDate\"));\r\n            var endDate = new Date(startDate.getTime() + this.scheduler.option(\"cellDuration\") * toMs(\"minute\"));\r\n            this.scheduler.fire(\"setField\", \"startDate\", data, startDate);\r\n            this.scheduler.fire(\"setField\", \"endDate\", data, endDate)\r\n        }\r\n        this.state.appointment.data = data;\r\n        if (!this._popup) {\r\n            var popupConfig = this._createPopupConfig();\r\n            this._popup = this._createPopup(popupConfig)\r\n        }\r\n        this._popup.option(\"toolbarItems\", this._createPopupToolbarItems(isDoneButtonVisible));\r\n        this._popup.show()\r\n    }\r\n    hide() {\r\n        this._popup.hide()\r\n    }\r\n    isVisible() {\r\n        return this._popup ? this._popup.option(\"visible\") : false\r\n    }\r\n    dispose() {\r\n        if (this._$popup) {\r\n            this._popup.$element().remove();\r\n            this._$popup = null\r\n        }\r\n    }\r\n    _createPopup(options) {\r\n        var popupElement = $(\"<div>\").addClass(APPOINTMENT_POPUP_CLASS).appendTo(this.scheduler.$element());\r\n        return this.scheduler._createComponent(popupElement, Popup, options)\r\n    }\r\n    _createPopupConfig() {\r\n        return {\r\n            height: \"auto\",\r\n            maxHeight: \"100%\",\r\n            showCloseButton: false,\r\n            showTitle: false,\r\n            onHiding: () => {\r\n                this.scheduler.focus()\r\n            },\r\n            contentTemplate: () => this._createPopupContent(),\r\n            onShowing: e => this._onShowing(e),\r\n            defaultOptionsRules: [{\r\n                device: () => devices.current().android,\r\n                options: {\r\n                    showTitle: false\r\n                }\r\n            }]\r\n        }\r\n    }\r\n    _onShowing(e) {\r\n        this._updateForm();\r\n        var arg = {\r\n            form: this._appointmentForm,\r\n            popup: this._popup,\r\n            appointmentData: this.state.appointment.data,\r\n            cancel: false\r\n        };\r\n        this.scheduler._actions.onAppointmentFormOpening(arg);\r\n        this.scheduler._processActionResult(arg, canceled => {\r\n            if (canceled) {\r\n                e.cancel = true\r\n            } else {\r\n                this.updatePopupFullScreenMode()\r\n            }\r\n        })\r\n    }\r\n    _createPopupContent() {\r\n        var formElement = $(\"<div>\");\r\n        this._appointmentForm = this._createForm(formElement);\r\n        return formElement\r\n    }\r\n    _createAppointmentFormData(rawAppointment) {\r\n        var appointment = this._createAppointmentAdapter(rawAppointment);\r\n        var result = extend(true, {\r\n            repeat: !!appointment.recurrenceRule\r\n        }, rawAppointment);\r\n        each(this.scheduler._resourcesManager.getResourcesFromItem(result, true) || {}, (name, value) => result[name] = value);\r\n        return result\r\n    }\r\n    _createForm(element) {\r\n        var {\r\n            expr: expr\r\n        } = this.scheduler._dataAccessors;\r\n        var resources = this.scheduler.option(\"resources\");\r\n        var allowTimeZoneEditing = this._getAllowTimeZoneEditing();\r\n        var rawAppointment = this.state.appointment.data;\r\n        var formData = this._createAppointmentFormData(rawAppointment);\r\n        var readOnly = this._isReadOnly(rawAppointment);\r\n        AppointmentForm.prepareAppointmentFormEditors(expr, this.scheduler, this.triggerResize.bind(this), this.changeSize.bind(this), formData, allowTimeZoneEditing, readOnly);\r\n        if (resources && resources.length) {\r\n            AppointmentForm.concatResources(this.scheduler._resourcesManager.getEditors())\r\n        }\r\n        return AppointmentForm.create(this.scheduler._createComponent.bind(this.scheduler), element, readOnly, formData)\r\n    }\r\n    _getAllowTimeZoneEditing() {\r\n        var scheduler = this.scheduler;\r\n        return scheduler.option(\"editing.allowTimeZoneEditing\") || scheduler.option(\"editing.allowEditingTimeZones\")\r\n    }\r\n    _isReadOnly(rawAppointment) {\r\n        var adapter = this.scheduler.createAppointmentAdapter(rawAppointment);\r\n        if (rawAppointment && adapter.disabled) {\r\n            return true\r\n        }\r\n        return this.scheduler._editAppointmentData ? !this.scheduler._editing.allowUpdating : false\r\n    }\r\n    _createAppointmentAdapter(rawAppointment) {\r\n        return this.scheduler.createAppointmentAdapter(rawAppointment)\r\n    }\r\n    _updateForm() {\r\n        var {\r\n            data: data\r\n        } = this.state.appointment;\r\n        var adapter = this._createAppointmentAdapter(data);\r\n        var allDay = adapter.allDay;\r\n        var startDate = adapter.startDate && adapter.calculateStartDate(\"toAppointment\");\r\n        var endDate = adapter.endDate && adapter.calculateEndDate(\"toAppointment\");\r\n        this.state.appointment.isEmptyText = void 0 === data || void 0 === adapter.text;\r\n        this.state.appointment.isEmptyDescription = void 0 === data || void 0 === adapter.description;\r\n        var appointment = this._createAppointmentAdapter(this._createAppointmentFormData(data));\r\n        if (void 0 === appointment.text) {\r\n            appointment.text = \"\"\r\n        }\r\n        if (void 0 === appointment.description) {\r\n            appointment.description = \"\"\r\n        }\r\n        if (void 0 === appointment.recurrenceRule) {\r\n            appointment.recurrenceRule = \"\"\r\n        }\r\n        var formData = appointment.source();\r\n        if (startDate) {\r\n            this.scheduler.fire(\"setField\", \"startDate\", formData, startDate)\r\n        }\r\n        if (endDate) {\r\n            this.scheduler.fire(\"setField\", \"endDate\", formData, endDate)\r\n        }\r\n        var {\r\n            startDateExpr: startDateExpr,\r\n            endDateExpr: endDateExpr\r\n        } = this.scheduler._dataAccessors.expr;\r\n        this._appointmentForm.option(\"readOnly\", this._isReadOnly(data));\r\n        AppointmentForm.updateFormData(this._appointmentForm, formData, this.scheduler._dataAccessors.expr);\r\n        AppointmentForm.setEditorsType(this._appointmentForm, startDateExpr, endDateExpr, allDay)\r\n    }\r\n    _isDeviceMobile() {\r\n        return \"desktop\" !== devices.current().deviceType\r\n    }\r\n    _isPopupFullScreenNeeded() {\r\n        var width = this._tryGetWindowWidth();\r\n        if (width) {\r\n            return this._isDeviceMobile() ? width < APPOINTMENT_POPUP_FULLSCREEN_WINDOW_WIDTH_MOBILE : width < APPOINTMENT_POPUP_FULLSCREEN_WINDOW_WIDTH\r\n        }\r\n        return false\r\n    }\r\n    _tryGetWindowWidth() {\r\n        if (hasWindow()) {\r\n            var window = getWindow();\r\n            return $(window).width()\r\n        }\r\n    }\r\n    triggerResize() {\r\n        this._popup && triggerResizeEvent(this._popup.$element())\r\n    }\r\n    _getMaxWidth(isRecurrence) {\r\n        if (this._isDeviceMobile()) {\r\n            return APPOINTMENT_POPUP_WIDTH_MOBILE\r\n        }\r\n        return isRecurrence ? APPOINTMENT_POPUP_WIDTH_WITH_RECURRENCE : APPOINTMENT_POPUP_WIDTH\r\n    }\r\n    changeSize(isRecurrence) {\r\n        var isFullScreen = this._isPopupFullScreenNeeded();\r\n        this._popup.option({\r\n            maxWidth: isFullScreen ? \"100%\" : this._getMaxWidth(isRecurrence),\r\n            fullScreen: isFullScreen\r\n        })\r\n    }\r\n    updatePopupFullScreenMode() {\r\n        if (!this._appointmentForm) {\r\n            return\r\n        }\r\n        var isRecurrence = AppointmentForm.getRecurrenceRule(this._appointmentForm.option(\"formData\"), this.scheduler._dataAccessors.expr);\r\n        if (this.isVisible()) {\r\n            this.changeSize(isRecurrence)\r\n        }\r\n    }\r\n    _createPopupToolbarItems(isDoneButtonVisible) {\r\n        var result = [];\r\n        var isIOs = \"ios\" === devices.current().platform;\r\n        if (isDoneButtonVisible) {\r\n            result.push({\r\n                shortcut: \"done\",\r\n                options: {\r\n                    text: messageLocalization.format(\"Done\")\r\n                },\r\n                location: TOOLBAR_ITEM_AFTER_LOCATION,\r\n                onClick: e => this._doneButtonClickHandler(e)\r\n            })\r\n        }\r\n        result.push({\r\n            shortcut: \"cancel\",\r\n            location: isIOs ? TOOLBAR_ITEM_BEFORE_LOCATION : TOOLBAR_ITEM_AFTER_LOCATION\r\n        });\r\n        return result\r\n    }\r\n    saveChanges(showLoadPanel) {\r\n        var deferred = new Deferred;\r\n        var validation = this._appointmentForm.validate();\r\n        var state = this.state.appointment;\r\n        showLoadPanel && this._showLoadPanel();\r\n        when(validation && validation.complete || validation).done(validation => {\r\n            if (validation && !validation.isValid) {\r\n                this._hideLoadPanel();\r\n                deferred.resolve(false);\r\n                return\r\n            }\r\n            var formData = this._appointmentForm.option(\"formData\");\r\n            var adapter = this.scheduler.createAppointmentAdapter(formData);\r\n            var appointment = adapter.clone({\r\n                pathTimeZone: \"fromAppointment\"\r\n            }).source();\r\n            var oldData = this.scheduler._editAppointmentData;\r\n            var recData = this.scheduler._updatedRecAppointment;\r\n            if (state.isEmptyText && \"\" === adapter.text) {\r\n                delete appointment.text\r\n            }\r\n            if (state.isEmptyDescription && \"\" === adapter.description) {\r\n                delete appointment.description\r\n            }\r\n            if (void 0 === state.data.recurrenceRule && \"\" === adapter.recurrenceRule) {\r\n                delete appointment.recurrenceRule\r\n            }\r\n            if (isDefined(appointment.repeat)) {\r\n                delete appointment.repeat\r\n            }\r\n            if (oldData && !recData) {\r\n                this.scheduler.updateAppointment(oldData, appointment).done(deferred.resolve)\r\n            } else {\r\n                if (recData) {\r\n                    this.scheduler.updateAppointment(oldData, recData);\r\n                    delete this.scheduler._updatedRecAppointment\r\n                }\r\n                this.scheduler.addAppointment(appointment).done(deferred.resolve)\r\n            }\r\n            deferred.done(() => {\r\n                this._hideLoadPanel();\r\n                this.state.lastEditData = appointment\r\n            })\r\n        });\r\n        return deferred.promise()\r\n    }\r\n    _doneButtonClickHandler(e) {\r\n        e.cancel = true;\r\n        this.saveEditData()\r\n    }\r\n    saveEditData() {\r\n        var deferred = new Deferred;\r\n        if (this._tryLockSaveChanges()) {\r\n            when(this.saveChanges(true)).done(() => {\r\n                if (this.state.lastEditData) {\r\n                    var adapter = this.scheduler.createAppointmentAdapter(this.state.lastEditData);\r\n                    var {\r\n                        startDate: startDate,\r\n                        endDate: endDate,\r\n                        allDay: allDay\r\n                    } = adapter;\r\n                    var startTime = startDate.getTime();\r\n                    var endTime = endDate.getTime();\r\n                    var inAllDayRow = allDay || endTime - startTime >= DAY_IN_MS;\r\n                    this.scheduler._workSpace.updateScrollPosition(startDate, this.scheduler._resourcesManager.getResourcesFromItem(this.state.lastEditData, true), inAllDayRow);\r\n                    this.state.lastEditData = null\r\n                }\r\n                this._unlockSaveChanges();\r\n                deferred.resolve()\r\n            })\r\n        }\r\n        return deferred.promise()\r\n    }\r\n    _hideLoadPanel() {\r\n        hideLoading()\r\n    }\r\n    _showLoadPanel() {\r\n        var $overlayContent = this._popup.$overlayContent();\r\n        showLoading({\r\n            container: $overlayContent,\r\n            position: {\r\n                of: $overlayContent\r\n            }\r\n        })\r\n    }\r\n    _tryLockSaveChanges() {\r\n        if (false === this.state.saveChangesLocker) {\r\n            this.state.saveChangesLocker = true;\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    _unlockSaveChanges() {\r\n        this.state.saveChangesLocker = false\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}