{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/table_body.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"addDateTableClass\", \"bottomVirtualRowHeight\", \"cellTemplate\", \"dataCellTemplate\", \"groupOrientation\", \"leftVirtualCellWidth\", \"rightVirtualCellWidth\", \"topVirtualRowHeight\", \"viewData\"];\nimport { createFragment, createComponentVNode, normalizeProps } from \"inferno\";\nimport { Fragment } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/vdom\";\nimport { Row } from \"../row\";\nimport { getKeyByGroup, getIsGroupedAllDayPanel } from \"../../utils\";\nimport { AllDayPanelTableBody } from \"./all_day_panel/table_body\";\nimport { DateTableLayoutProps } from \"./layout_props\";\nexport var viewFunction = _ref => {\n  var {\n    props: {\n      cellTemplate: Cell,\n      dataCellTemplate: dataCellTemplate,\n      groupOrientation: groupOrientation,\n      viewData: viewData\n    }\n  } = _ref;\n  return createFragment(viewData.groupedData.map((_ref2, index) => {\n    var {\n      allDayPanel: allDayPanel,\n      dateTable: dateTable,\n      groupIndex: groupIndex\n    } = _ref2;\n    return createFragment([getIsGroupedAllDayPanel(viewData, index) && createComponentVNode(2, AllDayPanelTableBody, {\n      viewData: allDayPanel,\n      dataCellTemplate: dataCellTemplate,\n      isVerticalGroupOrientation: true,\n      leftVirtualCellWidth: viewData.leftVirtualCellWidth,\n      rightVirtualCellWidth: viewData.rightVirtualCellWidth,\n      leftVirtualCellCount: viewData.leftVirtualCellCount,\n      rightVirtualCellCount: viewData.rightVirtualCellCount\n    }), dateTable.map(cellsRow => createComponentVNode(2, Row, {\n      className: \"dx-scheduler-date-table-row\",\n      leftVirtualCellWidth: viewData.leftVirtualCellWidth,\n      rightVirtualCellWidth: viewData.rightVirtualCellWidth,\n      leftVirtualCellCount: viewData.leftVirtualCellCount,\n      rightVirtualCellCount: viewData.rightVirtualCellCount,\n      children: cellsRow.map(_ref3 => {\n        var {\n          endDate: endDate,\n          firstDayOfMonth: firstDayOfMonth,\n          groupIndex: cellGroupIndex,\n          groups: groups,\n          index: cellIndex,\n          isFirstGroupCell: isFirstGroupCell,\n          isLastGroupCell: isLastGroupCell,\n          key: key,\n          otherMonth: otherMonth,\n          startDate: startDate,\n          text: text,\n          today: today\n        } = _ref3;\n        return Cell({\n          isFirstGroupCell: isFirstGroupCell,\n          isLastGroupCell: isLastGroupCell,\n          startDate: startDate,\n          endDate: endDate,\n          groups: groups,\n          groupIndex: cellGroupIndex,\n          index: cellIndex,\n          dataCellTemplate: dataCellTemplate,\n          key: key,\n          text: text,\n          today: today,\n          otherMonth: otherMonth,\n          firstDayOfMonth: firstDayOfMonth\n        });\n      })\n    }, cellsRow[0].key - viewData.leftVirtualCellCount))], 0, getKeyByGroup(groupIndex, groupOrientation));\n  }), 0);\n};\n\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\n\nexport class DateTableBody extends BaseInfernoComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  get restAttributes() {\n    var _this$props = this.props,\n        restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return restProps;\n  }\n\n  render() {\n    var props = this.props;\n    return viewFunction({\n      props: _extends({}, props, {\n        cellTemplate: getTemplate(props.cellTemplate),\n        dataCellTemplate: getTemplate(props.dataCellTemplate)\n      }),\n      restAttributes: this.restAttributes\n    });\n  }\n\n}\nDateTableBody.defaultProps = _extends({}, DateTableLayoutProps);","map":{"version":3,"sources":["/home/igor/node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/table_body.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","createFragment","createComponentVNode","normalizeProps","Fragment","BaseInfernoComponent","Row","getKeyByGroup","getIsGroupedAllDayPanel","AllDayPanelTableBody","DateTableLayoutProps","viewFunction","_ref","props","cellTemplate","Cell","dataCellTemplate","groupOrientation","viewData","groupedData","map","_ref2","index","allDayPanel","dateTable","groupIndex","isVerticalGroupOrientation","leftVirtualCellWidth","rightVirtualCellWidth","leftVirtualCellCount","rightVirtualCellCount","cellsRow","className","children","_ref3","endDate","firstDayOfMonth","cellGroupIndex","groups","cellIndex","isFirstGroupCell","isLastGroupCell","key","otherMonth","startDate","text","today","getTemplate","TemplateProp","defaultProps","DateTableBody","constructor","state","restAttributes","_this$props","restProps","render"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,IAAIC,SAAS,GAAG,CAAC,mBAAD,EAAsB,wBAAtB,EAAgD,cAAhD,EAAgE,kBAAhE,EAAoF,kBAApF,EAAwG,sBAAxG,EAAgI,uBAAhI,EAAyJ,qBAAzJ,EAAgL,UAAhL,CAAhB;AACA,SACIC,cADJ,EAEIC,oBAFJ,EAGIC,cAHJ,QAIO,SAJP;AAKA,SACIC,QADJ,QAEO,SAFP;AAGA,SACIC,oBADJ,QAEO,kBAFP;AAGA,SACIC,GADJ,QAEO,QAFP;AAGA,SACIC,aADJ,EAEIC,uBAFJ,QAGO,aAHP;AAIA,SACIC,oBADJ,QAEO,4BAFP;AAGA,SACIC,oBADJ,QAEO,gBAFP;AAGA,OAAO,IAAIC,YAAY,GAAGC,IAAI,IAAI;AAC9B,MAAI;AACAC,IAAAA,KAAK,EAAE;AACHC,MAAAA,YAAY,EAAEC,IADX;AAEHC,MAAAA,gBAAgB,EAAEA,gBAFf;AAGHC,MAAAA,gBAAgB,EAAEA,gBAHf;AAIHC,MAAAA,QAAQ,EAAEA;AAJP;AADP,MAOAN,IAPJ;AAQA,SAAOX,cAAc,CAACiB,QAAQ,CAACC,WAAT,CAAqBC,GAArB,CAAyB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC7D,QAAI;AACAC,MAAAA,WAAW,EAAEA,WADb;AAEAC,MAAAA,SAAS,EAAEA,SAFX;AAGAC,MAAAA,UAAU,EAAEA;AAHZ,QAIAJ,KAJJ;AAKA,WAAOpB,cAAc,CAAC,CAACO,uBAAuB,CAACU,QAAD,EAAWI,KAAX,CAAvB,IAA4CpB,oBAAoB,CAAC,CAAD,EAAIO,oBAAJ,EAA0B;AAC7GS,MAAAA,QAAQ,EAAEK,WADmG;AAE7GP,MAAAA,gBAAgB,EAAEA,gBAF2F;AAG7GU,MAAAA,0BAA0B,EAAE,IAHiF;AAI7GC,MAAAA,oBAAoB,EAAET,QAAQ,CAACS,oBAJ8E;AAK7GC,MAAAA,qBAAqB,EAAEV,QAAQ,CAACU,qBAL6E;AAM7GC,MAAAA,oBAAoB,EAAEX,QAAQ,CAACW,oBAN8E;AAO7GC,MAAAA,qBAAqB,EAAEZ,QAAQ,CAACY;AAP6E,KAA1B,CAAjE,EAQlBN,SAAS,CAACJ,GAAV,CAAcW,QAAQ,IAAI7B,oBAAoB,CAAC,CAAD,EAAII,GAAJ,EAAS;AACvD0B,MAAAA,SAAS,EAAE,6BAD4C;AAEvDL,MAAAA,oBAAoB,EAAET,QAAQ,CAACS,oBAFwB;AAGvDC,MAAAA,qBAAqB,EAAEV,QAAQ,CAACU,qBAHuB;AAIvDC,MAAAA,oBAAoB,EAAEX,QAAQ,CAACW,oBAJwB;AAKvDC,MAAAA,qBAAqB,EAAEZ,QAAQ,CAACY,qBALuB;AAMvDG,MAAAA,QAAQ,EAAEF,QAAQ,CAACX,GAAT,CAAac,KAAK,IAAI;AAC5B,YAAI;AACAC,UAAAA,OAAO,EAAEA,OADT;AAEAC,UAAAA,eAAe,EAAEA,eAFjB;AAGAX,UAAAA,UAAU,EAAEY,cAHZ;AAIAC,UAAAA,MAAM,EAAEA,MAJR;AAKAhB,UAAAA,KAAK,EAAEiB,SALP;AAMAC,UAAAA,gBAAgB,EAAEA,gBANlB;AAOAC,UAAAA,eAAe,EAAEA,eAPjB;AAQAC,UAAAA,GAAG,EAAEA,GARL;AASAC,UAAAA,UAAU,EAAEA,UATZ;AAUAC,UAAAA,SAAS,EAAEA,SAVX;AAWAC,UAAAA,IAAI,EAAEA,IAXN;AAYAC,UAAAA,KAAK,EAAEA;AAZP,YAaAZ,KAbJ;AAcA,eAAOnB,IAAI,CAAC;AACRyB,UAAAA,gBAAgB,EAAEA,gBADV;AAERC,UAAAA,eAAe,EAAEA,eAFT;AAGRG,UAAAA,SAAS,EAAEA,SAHH;AAIRT,UAAAA,OAAO,EAAEA,OAJD;AAKRG,UAAAA,MAAM,EAAEA,MALA;AAMRb,UAAAA,UAAU,EAAEY,cANJ;AAORf,UAAAA,KAAK,EAAEiB,SAPC;AAQRvB,UAAAA,gBAAgB,EAAEA,gBARV;AASR0B,UAAAA,GAAG,EAAEA,GATG;AAURG,UAAAA,IAAI,EAAEA,IAVE;AAWRC,UAAAA,KAAK,EAAEA,KAXC;AAYRH,UAAAA,UAAU,EAAEA,UAZJ;AAaRP,UAAAA,eAAe,EAAEA;AAbT,SAAD,CAAX;AAeH,OA9BS;AAN6C,KAAT,EAqC/CL,QAAQ,CAAC,CAAD,CAAR,CAAYW,GAAZ,GAAkBxB,QAAQ,CAACW,oBArCoB,CAA9C,CARkB,CAAD,EA6CkC,CA7ClC,EA6CqCtB,aAAa,CAACkB,UAAD,EAAaR,gBAAb,CA7ClD,CAArB;AA8CH,GApDqB,CAAD,EAoDjB,CApDiB,CAArB;AAqDH,CA9DM;;AA+DP,IAAI8B,WAAW,GAAGC,YAAY,IAAIA,YAAY,KAAKA,YAAY,CAACC,YAAb,GAA4BpC,KAAK,IAAIV,cAAc,CAACD,oBAAoB,CAAC,CAAD,EAAI8C,YAAJ,EAAkBjD,QAAQ,CAAC,EAAD,EAAKc,KAAL,CAA1B,CAArB,CAAnD,GAAkHmC,YAAvH,CAA9C;;AACA,OAAO,MAAME,aAAN,SAA4B7C,oBAA5B,CAAiD;AACpD8C,EAAAA,WAAW,CAACtC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKuC,KAAL,GAAa,EAAb;AACH;;AACiB,MAAdC,cAAc,GAAG;AACjB,QAAIC,WAAW,GAAG,KAAKzC,KAAvB;AAAA,QACI0C,SAAS,GAAGzD,6BAA6B,CAACwD,WAAD,EAActD,SAAd,CAD7C;;AAEA,WAAOuD,SAAP;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,QAAI3C,KAAK,GAAG,KAAKA,KAAjB;AACA,WAAOF,YAAY,CAAC;AAChBE,MAAAA,KAAK,EAAEd,QAAQ,CAAC,EAAD,EAAKc,KAAL,EAAY;AACvBC,QAAAA,YAAY,EAAEiC,WAAW,CAAClC,KAAK,CAACC,YAAP,CADF;AAEvBE,QAAAA,gBAAgB,EAAE+B,WAAW,CAAClC,KAAK,CAACG,gBAAP;AAFN,OAAZ,CADC;AAKhBqC,MAAAA,cAAc,EAAE,KAAKA;AALL,KAAD,CAAnB;AAOH;;AAnBmD;AAqBxDH,aAAa,CAACD,YAAd,GAA6BlD,QAAQ,CAAC,EAAD,EAAKW,oBAAL,CAArC","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/table_body.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"addDateTableClass\", \"bottomVirtualRowHeight\", \"cellTemplate\", \"dataCellTemplate\", \"groupOrientation\", \"leftVirtualCellWidth\", \"rightVirtualCellWidth\", \"topVirtualRowHeight\", \"viewData\"];\r\nimport {\r\n    createFragment,\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/vdom\";\r\nimport {\r\n    Row\r\n} from \"../row\";\r\nimport {\r\n    getKeyByGroup,\r\n    getIsGroupedAllDayPanel\r\n} from \"../../utils\";\r\nimport {\r\n    AllDayPanelTableBody\r\n} from \"./all_day_panel/table_body\";\r\nimport {\r\n    DateTableLayoutProps\r\n} from \"./layout_props\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: {\r\n            cellTemplate: Cell,\r\n            dataCellTemplate: dataCellTemplate,\r\n            groupOrientation: groupOrientation,\r\n            viewData: viewData\r\n        }\r\n    } = _ref;\r\n    return createFragment(viewData.groupedData.map((_ref2, index) => {\r\n        var {\r\n            allDayPanel: allDayPanel,\r\n            dateTable: dateTable,\r\n            groupIndex: groupIndex\r\n        } = _ref2;\r\n        return createFragment([getIsGroupedAllDayPanel(viewData, index) && createComponentVNode(2, AllDayPanelTableBody, {\r\n            viewData: allDayPanel,\r\n            dataCellTemplate: dataCellTemplate,\r\n            isVerticalGroupOrientation: true,\r\n            leftVirtualCellWidth: viewData.leftVirtualCellWidth,\r\n            rightVirtualCellWidth: viewData.rightVirtualCellWidth,\r\n            leftVirtualCellCount: viewData.leftVirtualCellCount,\r\n            rightVirtualCellCount: viewData.rightVirtualCellCount\r\n        }), dateTable.map(cellsRow => createComponentVNode(2, Row, {\r\n            className: \"dx-scheduler-date-table-row\",\r\n            leftVirtualCellWidth: viewData.leftVirtualCellWidth,\r\n            rightVirtualCellWidth: viewData.rightVirtualCellWidth,\r\n            leftVirtualCellCount: viewData.leftVirtualCellCount,\r\n            rightVirtualCellCount: viewData.rightVirtualCellCount,\r\n            children: cellsRow.map(_ref3 => {\r\n                var {\r\n                    endDate: endDate,\r\n                    firstDayOfMonth: firstDayOfMonth,\r\n                    groupIndex: cellGroupIndex,\r\n                    groups: groups,\r\n                    index: cellIndex,\r\n                    isFirstGroupCell: isFirstGroupCell,\r\n                    isLastGroupCell: isLastGroupCell,\r\n                    key: key,\r\n                    otherMonth: otherMonth,\r\n                    startDate: startDate,\r\n                    text: text,\r\n                    today: today\r\n                } = _ref3;\r\n                return Cell({\r\n                    isFirstGroupCell: isFirstGroupCell,\r\n                    isLastGroupCell: isLastGroupCell,\r\n                    startDate: startDate,\r\n                    endDate: endDate,\r\n                    groups: groups,\r\n                    groupIndex: cellGroupIndex,\r\n                    index: cellIndex,\r\n                    dataCellTemplate: dataCellTemplate,\r\n                    key: key,\r\n                    text: text,\r\n                    today: today,\r\n                    otherMonth: otherMonth,\r\n                    firstDayOfMonth: firstDayOfMonth\r\n                })\r\n            })\r\n        }, cellsRow[0].key - viewData.leftVirtualCellCount))], 0, getKeyByGroup(groupIndex, groupOrientation))\r\n    }), 0)\r\n};\r\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\r\nexport class DateTableBody extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                cellTemplate: getTemplate(props.cellTemplate),\r\n                dataCellTemplate: getTemplate(props.dataCellTemplate)\r\n            }),\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nDateTableBody.defaultProps = _extends({}, DateTableLayoutProps);\r\n"]},"metadata":{},"sourceType":"module"}