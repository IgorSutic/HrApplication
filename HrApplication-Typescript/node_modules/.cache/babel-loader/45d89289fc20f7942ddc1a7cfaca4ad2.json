{"ast":null,"code":"var _jsxFileName = \"/home/igor/welcomedev-react-starter/src/calendar/Calendar.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { DateRangePicker } from 'react-date-range';\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Calendar() {\n  _s();\n\n  // const [state, setState] = useState([\n  //     {\n  //     startDate: new Date(),\n  //     endDate: null,\n  //     key: 'selection'\n  //     }\n  // ]);\n  // return(\n  //     <DateRangePicker\n  //     editableDateInputs={true}\n  //     onChange={(item : Date | null | any) => setState([item.selection])}\n  //     moveRangeOnFirstSelection={false}\n  //     ranges={[state.key]}\n  //     />\n  // );\n  const [state, setState] = useState({\n    selection: {\n      startDate: new Date(),\n      endDate: null,\n      key: 'selection'\n    },\n    compare: {\n      startDate: new Date(),\n      endDate: addDays(new Date(), 3),\n      key: 'compare'\n    }\n  });\n\n  /*#__PURE__*/\n  _jsxDEV(DateRangePicker, {\n    onChange: item => setState({ ...state,\n      ...item\n    }),\n    months: 1,\n    minDate: addDays(new Date(), -300),\n    maxDate: addDays(new Date(), 900),\n    direction: \"vertical\",\n    scroll: {\n      enabled: true\n    },\n    ranges: [state.selection, state.compare]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Calendar, \"wM86ifr02rUoble21HENT7PafoI=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/igor/welcomedev-react-starter/src/calendar/Calendar.tsx"],"names":["useState","DateRangePicker","Calendar","state","setState","selection","startDate","Date","endDate","key","compare","addDays","item","enabled"],"mappings":";;;AAAA,SAAkCA,QAAlC,QAAiD,OAAjD;AACA,SAAoBC,eAApB,QAA0C,kBAA1C;AACA,OAAO,kCAAP;AACA,OAAO,yCAAP;;;AAEA,SAASC,QAAT,GAAmB;AAAA;;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC;AACrCK,IAAAA,SAAS,EAAE;AACTC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,EADF;AAETC,MAAAA,OAAO,EAAE,IAFA;AAGTC,MAAAA,GAAG,EAAE;AAHI,KAD0B;AAMrCC,IAAAA,OAAO,EAAE;AACPJ,MAAAA,SAAS,EAAE,IAAIC,IAAJ,EADJ;AAEPC,MAAAA,OAAO,EAAEG,OAAO,CAAC,IAAIJ,IAAJ,EAAD,EAAa,CAAb,CAFT;AAGPE,MAAAA,GAAG,EAAE;AAHE;AAN4B,GAAD,CAAlC;;AAaJ;AAAA,UAAC,eAAD;AACE,IAAA,QAAQ,EAAEG,IAAI,IAAIR,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,SAAGS;AAAf,KAAD,CAD5B;AAEE,IAAA,MAAM,EAAE,CAFV;AAGE,IAAA,OAAO,EAAED,OAAO,CAAC,IAAIJ,IAAJ,EAAD,EAAa,CAAC,GAAd,CAHlB;AAIE,IAAA,OAAO,EAAEI,OAAO,CAAC,IAAIJ,IAAJ,EAAD,EAAa,GAAb,CAJlB;AAKE,IAAA,SAAS,EAAC,UALZ;AAME,IAAA,MAAM,EAAE;AAAEM,MAAAA,OAAO,EAAE;AAAX,KANV;AAOE,IAAA,MAAM,EAAE,CAACV,KAAK,CAACE,SAAP,EAAkBF,KAAK,CAACO,OAAxB;AAPV;AAAA;AAAA;AAAA;AAAA;AASC;;GAxCQR,Q;;KAAAA,Q;AA0CT,eAAeA,QAAf","sourcesContent":["import {Dispatch, SetStateAction, useState} from 'react';\nimport { DateRange ,DateRangePicker} from 'react-date-range';\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\n\nfunction Calendar(){\n    // const [state, setState] = useState([\n    //     {\n    //     startDate: new Date(),\n    //     endDate: null,\n    //     key: 'selection'\n    //     }\n    // ]);\n    \n    // return(\n    //     <DateRangePicker\n    //     editableDateInputs={true}\n    //     onChange={(item : Date | null | any) => setState([item.selection])}\n    //     moveRangeOnFirstSelection={false}\n    //     ranges={[state.key]}\n    //     />\n    // );\n\n    const [state, setState] = useState({\n  selection: {\n    startDate: new Date(),\n    endDate: null,\n    key: 'selection'\n  },\n  compare: {\n    startDate: new Date(),\n    endDate: addDays(new Date(), 3),\n    key: 'compare'\n  }\n});\n\n<DateRangePicker\n  onChange={item => setState({ ...state, ...item })}\n  months={1}\n  minDate={addDays(new Date(), -300)}\n  maxDate={addDays(new Date(), 900)}\n  direction=\"vertical\"\n  scroll={{ enabled: true }}\n  ranges={[state.selection, state.compare]}\n/>;\n}\n\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}