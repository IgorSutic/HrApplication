{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/rendering_strategies/ui.scheduler.appointmentsPositioning.strategy.base.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isDefined } from \"../../../core/utils/type\";\nvar COLLECTOR_DEFAULT_WIDTH = 24;\nvar COLLECTOR_DEFAULT_OFFSET = 3;\nvar COMPACT_THEME_APPOINTMENT_DEFAULT_OFFSET = 22;\nvar APPOINTMENT_MIN_COUNT = 1;\nvar APPOINTMENT_DEFAULT_WIDTH = 40;\nvar COLLECTOR_WIDTH_IN_PERCENTS = 75;\nvar APPOINTMENT_INCREASED_WIDTH = 50;\n\nclass AppointmentPositioningStrategy {\n  constructor(renderingStrategy) {\n    this._renderingStrategy = renderingStrategy;\n  }\n\n  getRenderingStrategy() {\n    return this._renderingStrategy;\n  }\n\n  getDropDownAppointmentWidth(intervalCount, isAllDay) {\n    if (isAllDay || !isDefined(isAllDay)) {\n      return COLLECTOR_WIDTH_IN_PERCENTS * this.getRenderingStrategy().getDefaultCellWidth() / 100;\n    } else {\n      return COLLECTOR_DEFAULT_WIDTH;\n    }\n  }\n\n  getCollectorTopOffset() {\n    return COLLECTOR_DEFAULT_OFFSET;\n  }\n\n  getCollectorLeftOffset() {\n    return COLLECTOR_DEFAULT_OFFSET;\n  }\n\n  getAppointmentDefaultOffset() {\n    if (this.getRenderingStrategy()._isCompactTheme()) {\n      return COMPACT_THEME_APPOINTMENT_DEFAULT_OFFSET;\n    }\n\n    return this.getRenderingStrategy().instance.option(\"_appointmentOffset\");\n  }\n\n  getDynamicAppointmentCountPerCell() {\n    var renderingStrategy = this.getRenderingStrategy();\n    var cellHeight = renderingStrategy.instance.fire(\"getCellHeight\");\n\n    var allDayCount = Math.floor((cellHeight - renderingStrategy._getAppointmentDefaultOffset()) / renderingStrategy._getAppointmentDefaultHeight()) || this._getAppointmentMinCount();\n\n    if (renderingStrategy.hasAllDayAppointments()) {\n      return {\n        allDay: \"vertical\" === renderingStrategy.instance._groupOrientation ? allDayCount : renderingStrategy.instance.option(\"_appointmentCountPerCell\"),\n        simple: this._calculateDynamicAppointmentCountPerCell() || this._getAppointmentMinCount()\n      };\n    } else {\n      return allDayCount;\n    }\n  }\n\n  getDropDownAppointmentHeight() {\n    return;\n  }\n\n  _getAppointmentMinCount() {\n    return APPOINTMENT_MIN_COUNT;\n  }\n\n  _calculateDynamicAppointmentCountPerCell() {\n    return Math.floor(this.getRenderingStrategy()._getAppointmentMaxWidth() / APPOINTMENT_INCREASED_WIDTH);\n  }\n\n  _getAppointmentDefaultWidth() {\n    return APPOINTMENT_DEFAULT_WIDTH;\n  }\n\n}\n\nexport default AppointmentPositioningStrategy;","map":{"version":3,"sources":["/home/igor/node_modules/devextreme/esm/ui/scheduler/rendering_strategies/ui.scheduler.appointmentsPositioning.strategy.base.js"],"names":["isDefined","COLLECTOR_DEFAULT_WIDTH","COLLECTOR_DEFAULT_OFFSET","COMPACT_THEME_APPOINTMENT_DEFAULT_OFFSET","APPOINTMENT_MIN_COUNT","APPOINTMENT_DEFAULT_WIDTH","COLLECTOR_WIDTH_IN_PERCENTS","APPOINTMENT_INCREASED_WIDTH","AppointmentPositioningStrategy","constructor","renderingStrategy","_renderingStrategy","getRenderingStrategy","getDropDownAppointmentWidth","intervalCount","isAllDay","getDefaultCellWidth","getCollectorTopOffset","getCollectorLeftOffset","getAppointmentDefaultOffset","_isCompactTheme","instance","option","getDynamicAppointmentCountPerCell","cellHeight","fire","allDayCount","Math","floor","_getAppointmentDefaultOffset","_getAppointmentDefaultHeight","_getAppointmentMinCount","hasAllDayAppointments","allDay","_groupOrientation","simple","_calculateDynamicAppointmentCountPerCell","getDropDownAppointmentHeight","_getAppointmentMaxWidth","_getAppointmentDefaultWidth"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,SADJ,QAEO,0BAFP;AAGA,IAAIC,uBAAuB,GAAG,EAA9B;AACA,IAAIC,wBAAwB,GAAG,CAA/B;AACA,IAAIC,wCAAwC,GAAG,EAA/C;AACA,IAAIC,qBAAqB,GAAG,CAA5B;AACA,IAAIC,yBAAyB,GAAG,EAAhC;AACA,IAAIC,2BAA2B,GAAG,EAAlC;AACA,IAAIC,2BAA2B,GAAG,EAAlC;;AACA,MAAMC,8BAAN,CAAqC;AACjCC,EAAAA,WAAW,CAACC,iBAAD,EAAoB;AAC3B,SAAKC,kBAAL,GAA0BD,iBAA1B;AACH;;AACDE,EAAAA,oBAAoB,GAAG;AACnB,WAAO,KAAKD,kBAAZ;AACH;;AACDE,EAAAA,2BAA2B,CAACC,aAAD,EAAgBC,QAAhB,EAA0B;AACjD,QAAIA,QAAQ,IAAI,CAACf,SAAS,CAACe,QAAD,CAA1B,EAAsC;AAClC,aAAOT,2BAA2B,GAAG,KAAKM,oBAAL,GAA4BI,mBAA5B,EAA9B,GAAkF,GAAzF;AACH,KAFD,MAEO;AACH,aAAOf,uBAAP;AACH;AACJ;;AACDgB,EAAAA,qBAAqB,GAAG;AACpB,WAAOf,wBAAP;AACH;;AACDgB,EAAAA,sBAAsB,GAAG;AACrB,WAAOhB,wBAAP;AACH;;AACDiB,EAAAA,2BAA2B,GAAG;AAC1B,QAAI,KAAKP,oBAAL,GAA4BQ,eAA5B,EAAJ,EAAmD;AAC/C,aAAOjB,wCAAP;AACH;;AACD,WAAO,KAAKS,oBAAL,GAA4BS,QAA5B,CAAqCC,MAArC,CAA4C,oBAA5C,CAAP;AACH;;AACDC,EAAAA,iCAAiC,GAAG;AAChC,QAAIb,iBAAiB,GAAG,KAAKE,oBAAL,EAAxB;AACA,QAAIY,UAAU,GAAGd,iBAAiB,CAACW,QAAlB,CAA2BI,IAA3B,CAAgC,eAAhC,CAAjB;;AACA,QAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACJ,UAAU,GAAGd,iBAAiB,CAACmB,4BAAlB,EAAd,IAAkEnB,iBAAiB,CAACoB,4BAAlB,EAA7E,KAAkI,KAAKC,uBAAL,EAApJ;;AACA,QAAIrB,iBAAiB,CAACsB,qBAAlB,EAAJ,EAA+C;AAC3C,aAAO;AACHC,QAAAA,MAAM,EAAE,eAAevB,iBAAiB,CAACW,QAAlB,CAA2Ba,iBAA1C,GAA8DR,WAA9D,GAA4EhB,iBAAiB,CAACW,QAAlB,CAA2BC,MAA3B,CAAkC,0BAAlC,CADjF;AAEHa,QAAAA,MAAM,EAAE,KAAKC,wCAAL,MAAmD,KAAKL,uBAAL;AAFxD,OAAP;AAIH,KALD,MAKO;AACH,aAAOL,WAAP;AACH;AACJ;;AACDW,EAAAA,4BAA4B,GAAG;AAC3B;AACH;;AACDN,EAAAA,uBAAuB,GAAG;AACtB,WAAO3B,qBAAP;AACH;;AACDgC,EAAAA,wCAAwC,GAAG;AACvC,WAAOT,IAAI,CAACC,KAAL,CAAW,KAAKhB,oBAAL,GAA4B0B,uBAA5B,KAAwD/B,2BAAnE,CAAP;AACH;;AACDgC,EAAAA,2BAA2B,GAAG;AAC1B,WAAOlC,yBAAP;AACH;;AAlDgC;;AAoDrC,eAAeG,8BAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/rendering_strategies/ui.scheduler.appointmentsPositioning.strategy.base.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nvar COLLECTOR_DEFAULT_WIDTH = 24;\r\nvar COLLECTOR_DEFAULT_OFFSET = 3;\r\nvar COMPACT_THEME_APPOINTMENT_DEFAULT_OFFSET = 22;\r\nvar APPOINTMENT_MIN_COUNT = 1;\r\nvar APPOINTMENT_DEFAULT_WIDTH = 40;\r\nvar COLLECTOR_WIDTH_IN_PERCENTS = 75;\r\nvar APPOINTMENT_INCREASED_WIDTH = 50;\r\nclass AppointmentPositioningStrategy {\r\n    constructor(renderingStrategy) {\r\n        this._renderingStrategy = renderingStrategy\r\n    }\r\n    getRenderingStrategy() {\r\n        return this._renderingStrategy\r\n    }\r\n    getDropDownAppointmentWidth(intervalCount, isAllDay) {\r\n        if (isAllDay || !isDefined(isAllDay)) {\r\n            return COLLECTOR_WIDTH_IN_PERCENTS * this.getRenderingStrategy().getDefaultCellWidth() / 100\r\n        } else {\r\n            return COLLECTOR_DEFAULT_WIDTH\r\n        }\r\n    }\r\n    getCollectorTopOffset() {\r\n        return COLLECTOR_DEFAULT_OFFSET\r\n    }\r\n    getCollectorLeftOffset() {\r\n        return COLLECTOR_DEFAULT_OFFSET\r\n    }\r\n    getAppointmentDefaultOffset() {\r\n        if (this.getRenderingStrategy()._isCompactTheme()) {\r\n            return COMPACT_THEME_APPOINTMENT_DEFAULT_OFFSET\r\n        }\r\n        return this.getRenderingStrategy().instance.option(\"_appointmentOffset\")\r\n    }\r\n    getDynamicAppointmentCountPerCell() {\r\n        var renderingStrategy = this.getRenderingStrategy();\r\n        var cellHeight = renderingStrategy.instance.fire(\"getCellHeight\");\r\n        var allDayCount = Math.floor((cellHeight - renderingStrategy._getAppointmentDefaultOffset()) / renderingStrategy._getAppointmentDefaultHeight()) || this._getAppointmentMinCount();\r\n        if (renderingStrategy.hasAllDayAppointments()) {\r\n            return {\r\n                allDay: \"vertical\" === renderingStrategy.instance._groupOrientation ? allDayCount : renderingStrategy.instance.option(\"_appointmentCountPerCell\"),\r\n                simple: this._calculateDynamicAppointmentCountPerCell() || this._getAppointmentMinCount()\r\n            }\r\n        } else {\r\n            return allDayCount\r\n        }\r\n    }\r\n    getDropDownAppointmentHeight() {\r\n        return\r\n    }\r\n    _getAppointmentMinCount() {\r\n        return APPOINTMENT_MIN_COUNT\r\n    }\r\n    _calculateDynamicAppointmentCountPerCell() {\r\n        return Math.floor(this.getRenderingStrategy()._getAppointmentMaxWidth() / APPOINTMENT_INCREASED_WIDTH)\r\n    }\r\n    _getAppointmentDefaultWidth() {\r\n        return APPOINTMENT_DEFAULT_WIDTH\r\n    }\r\n}\r\nexport default AppointmentPositioningStrategy;\r\n"]},"metadata":{},"sourceType":"module"}