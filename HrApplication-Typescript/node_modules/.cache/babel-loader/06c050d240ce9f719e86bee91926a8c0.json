{"ast":null,"code":"var _jsxFileName = \"/home/igor/welcomedev-react-starter/src/components/GoogleCalendar.tsx\",\n    _s = $RefreshSig$();\n\n//---------------------------------------------\n// import 'whatwg-fetch';\n// import React from 'react';\n// import Scheduler from 'devextreme-react/scheduler';\n// import CustomStore from 'devextreme/data/custom_store';\n// function getData(_:any, requestOptions:any) {\n//   const PUBLIC_KEY = 'AIzaSyBnNAISIUKe6xdhq1_rjor2rxoI3UlMY7k',\n//     CALENDAR_ID = 'f7jnetm22dsjc3npc2lu3buvu4@group.calendar.google.com';\n//   const dataUrl = [ 'https://www.googleapis.com/calendar/v3/calendars/',\n//     CALENDAR_ID, '/events?key=', PUBLIC_KEY].join('');\n//   return fetch(dataUrl, requestOptions).then(\n//     (response) => response.json()\n//   ).then((data) => data.items);\n// }\n// const dataSource = new CustomStore({\n//   load: (options) => getData(options, { showDeleted: false })\n// });\n// const currentDate = new Date();\n// const views:any = ['day', 'workWeek', 'month'];\n// class GoogleCalendar extends React.Component {\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <div className=\"long-title\">\n//           <h3>QCerris</h3>\n//         </div>\n//         <Scheduler\n//           dataSource={dataSource}\n//           views={views}\n//           defaultCurrentView=\"workWeek\"\n//           defaultCurrentDate={currentDate}\n//           height={500}\n//           startDayHour={7}\n//           editing={false}\n//           showAllDayPanel={false}\n//           startDateExpr=\"start.dateTime\"\n//           endDateExpr=\"end.dateTime\"\n//           textExpr=\"summary\"\n//           timeZone=\"Europe/Belgrade\" />\n//       </React.Fragment>\n//     );\n//   }\n// }\n// export default GoogleCalendar;\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DesktopDatePicker from '@mui/lab/DatePicker';\nimport Grid from '@mui/material/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomInput() {\n  _s();\n\n  const [value, setValue] = React.useState(new Date());\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      component: \"main\",\n      sx: {\n        height: '10vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n        label: \"Custom input\",\n        value: value,\n        onChange: newValue => {\n          setValue(newValue);\n        },\n        renderInput: ({\n          inputRef,\n          inputProps,\n          InputProps\n        }) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: inputRef,\n            ...inputProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), InputProps === null || InputProps === void 0 ? void 0 : InputProps.endAdornment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n        label: \"Custom input\",\n        value: value,\n        onChange: newValue => {\n          setValue(newValue);\n        },\n        renderInput: ({\n          inputRef,\n          inputProps,\n          InputProps\n        }) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: inputRef,\n            ...inputProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), InputProps === null || InputProps === void 0 ? void 0 : InputProps.endAdornment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomInput, \"ojhCmkQ3k+kVHyMOfBmyTFu2wy0=\");\n\n_c = CustomInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"sources":["/home/igor/welcomedev-react-starter/src/components/GoogleCalendar.tsx"],"names":["React","Box","AdapterDateFns","LocalizationProvider","DesktopDatePicker","Grid","CustomInput","value","setValue","useState","Date","height","newValue","inputRef","inputProps","InputProps","display","alignItems","endAdornment"],"mappings":";;;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAA4B,IAAIC,IAAJ,EAA5B,CAA1B;AAEA,sBACE,QAAC,oBAAD;AAAsB,IAAA,WAAW,EAAER,cAAnC;AAAA,2BACA,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,MAA1B;AAAiC,MAAA,EAAE,EAAE;AAAES,QAAAA,MAAM,EAAE;AAAV,OAArC;AAAA,8BACE,QAAC,iBAAD;AACE,QAAA,KAAK,EAAC,cADR;AAEE,QAAA,KAAK,EAAEJ,KAFT;AAGE,QAAA,QAAQ,EAAGK,QAAD,IAAwB;AAChCJ,UAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,SALH;AAME,QAAA,WAAW,EAAE,CAAC;AAAEC,UAAAA,QAAF;AAAYC,UAAAA,UAAZ;AAAwBC,UAAAA;AAAxB,SAAD,kBACX,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEC,YAAAA,OAAO,EAAE,MAAX;AAAmBC,YAAAA,UAAU,EAAE;AAA/B,WAAT;AAAA,kCACE;AAAO,YAAA,GAAG,EAAEJ,QAAZ;AAAA,eAA0BC;AAA1B;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGC,UAFH,aAEGA,UAFH,uBAEGA,UAAU,CAAEG,YAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,cADF,eAcE,QAAC,iBAAD;AACE,QAAA,KAAK,EAAC,cADR;AAEE,QAAA,KAAK,EAAEX,KAFT;AAGE,QAAA,QAAQ,EAAGK,QAAD,IAAwB;AAChCJ,UAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,SALH;AAME,QAAA,WAAW,EAAE,CAAC;AAAEC,UAAAA,QAAF;AAAYC,UAAAA,UAAZ;AAAwBC,UAAAA;AAAxB,SAAD,kBACX,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEC,YAAAA,OAAO,EAAE,MAAX;AAAmBC,YAAAA,UAAU,EAAE;AAA/B,WAAT;AAAA,kCACE;AAAO,YAAA,GAAG,EAAEJ,QAAZ;AAAA,eAA0BC;AAA1B;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGC,UAFH,aAEGA,UAFH,uBAEGA,UAAU,CAAEG,YAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GAnCuBZ,W;;KAAAA,W","sourcesContent":["//---------------------------------------------\n\n// import 'whatwg-fetch';\n// import React from 'react';\n// import Scheduler from 'devextreme-react/scheduler';\n// import CustomStore from 'devextreme/data/custom_store';\n\n// function getData(_:any, requestOptions:any) {\n\n//   const PUBLIC_KEY = 'AIzaSyBnNAISIUKe6xdhq1_rjor2rxoI3UlMY7k',\n//     CALENDAR_ID = 'f7jnetm22dsjc3npc2lu3buvu4@group.calendar.google.com';\n//   const dataUrl = [ 'https://www.googleapis.com/calendar/v3/calendars/',\n//     CALENDAR_ID, '/events?key=', PUBLIC_KEY].join('');\n\n//   return fetch(dataUrl, requestOptions).then(\n//     (response) => response.json()\n//   ).then((data) => data.items);\n// }\n\n// const dataSource = new CustomStore({\n//   load: (options) => getData(options, { showDeleted: false })\n// });\n\n// const currentDate = new Date();\n// const views:any = ['day', 'workWeek', 'month'];\n\n// class GoogleCalendar extends React.Component {\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <div className=\"long-title\">\n//           <h3>QCerris</h3>\n//         </div>\n//         <Scheduler\n//           dataSource={dataSource}\n//           views={views}\n//           defaultCurrentView=\"workWeek\"\n//           defaultCurrentDate={currentDate}\n//           height={500}\n//           startDayHour={7}\n//           editing={false}\n//           showAllDayPanel={false}\n//           startDateExpr=\"start.dateTime\"\n//           endDateExpr=\"end.dateTime\"\n//           textExpr=\"summary\"\n//           timeZone=\"Europe/Belgrade\" />\n//       </React.Fragment>\n\n//     );\n//   }\n// }\n\n// export default GoogleCalendar;\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DesktopDatePicker from '@mui/lab/DatePicker';\nimport Grid from '@mui/material/Grid';\n\nexport default function CustomInput() {\n  const [value, setValue] = React.useState<Date | null>(new Date());\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n    <Grid container component=\"main\" sx={{ height: '10vh' }}>\n      <DesktopDatePicker\n        label=\"Custom input\"\n        value={value}\n        onChange={(newValue:Date|null) => {\n          setValue(newValue);\n        }}\n        renderInput={({ inputRef, inputProps, InputProps }) => (\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <input ref={inputRef} {...inputProps} />\n            {InputProps?.endAdornment}\n          </Box>\n        )}\n      />\n      <DesktopDatePicker\n        label=\"Custom input\"\n        value={value}\n        onChange={(newValue:Date|null) => {\n          setValue(newValue);\n        }}\n        renderInput={({ inputRef, inputProps, InputProps }) => (\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <input ref={inputRef} {...inputProps} />\n            {InputProps?.endAdornment}\n          </Box>\n        )}\n      />\n      </Grid>\n    </LocalizationProvider>\n  );\n}"]},"metadata":{},"sourceType":"module"}