{"ast":null,"code":"var _jsxFileName = \"/home/igor/welcomedev-react-starter/src/App.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Login } from './components/Login';\nimport SignUp from './components/Register';\nimport GoogleCalendar from './components/GoogleCalendar';\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport { useTheme, ThemeProvider, createTheme } from '@mui/material/styles';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport DashboardContent from './components/MainPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorModeContext = /*#__PURE__*/React.createContext({\n  toggleColorMode: () => {}\n});\n\nfunction MyApp() {\n  _s();\n\n  const theme = useTheme();\n  const colorMode = React.useContext(ColorModeContext);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      bgcolor: 'background.default',\n      color: 'text.primary',\n      borderRadius: 1,\n      p: 3\n    },\n    children: [theme.palette.mode, \" mode\", /*#__PURE__*/_jsxDEV(IconButton, {\n      sx: {\n        ml: 1\n      },\n      onClick: colorMode.toggleColorMode,\n      color: \"inherit\",\n      children: theme.palette.mode === 'dark' ? /*#__PURE__*/_jsxDEV(Brightness7Icon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(Brightness4Icon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyApp, \"80lvBfk7TN8cUIlLm9bQxIykp7M=\", false, function () {\n  return [useTheme];\n});\n\n_c = MyApp;\n\nfunction App() {\n  _s2();\n\n  // const [username, setUsername] = useState<string>(\"\")\n  // const [password, setPassword] = useState<string>(\"\")\n  // const [token, setToken] = useCookies<string>(['tokens'])\n  // const postUser = async () => {\n  //   await createUser(username, password).then(resp => setToken('tokens',resp.token))\n  //   console.log(token) \n  // }\n  // const theme = useTheme();\n  // const colorMode = React.useContext(ColorModeContext);\n  const [mode, setMode] = React.useState('light');\n  const colorMode = React.useMemo(() => ({\n    toggleColorMode: () => {\n      setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n    }\n  }), []);\n  const theme = React.useMemo(() => createTheme({\n    palette: {\n      mode\n    }\n  }), [mode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n        value: colorMode,\n        children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n          theme: theme,\n          children: [/*#__PURE__*/_jsxDEV(MyApp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"\",\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/main\",\n            component: DashboardContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/register\",\n            component: SignUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/calendar\",\n            component: GoogleCalendar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"d4Wg7a/ehJsJwQbDoYd9huIJFWY=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyApp\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/igor/welcomedev-react-starter/src/App.tsx"],"names":["React","BrowserRouter","Route","Login","SignUp","GoogleCalendar","IconButton","Box","useTheme","ThemeProvider","createTheme","Brightness4Icon","Brightness7Icon","DashboardContent","ColorModeContext","createContext","toggleColorMode","MyApp","theme","colorMode","useContext","display","width","alignItems","justifyContent","bgcolor","color","borderRadius","p","palette","mode","ml","App","setMode","useState","useMemo","prevMode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport SimpleDialogDemo from './components/layout';\nimport { createUser } from './components/services';\nimport SignInSide from './components/signIn';\nimport { useCookies } from \"react-cookie\";\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Login } from './components/Login';\nimport SignUp from './components/Register';\nimport GoogleCalendar from './components/GoogleCalendar';\n\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport { useTheme, ThemeProvider, createTheme } from '@mui/material/styles';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport DashboardContent from './components/MainPage';\n\nconst ColorModeContext = React.createContext({ toggleColorMode: () => {} });\n\nfunction MyApp() {\n  const theme = useTheme();\n  const colorMode = React.useContext(ColorModeContext);\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        bgcolor: 'background.default',\n        color: 'text.primary',\n        borderRadius: 1,\n        p: 3,\n      }}\n    >\n      {theme.palette.mode} mode\n      <IconButton sx={{ ml: 1 }} onClick={colorMode.toggleColorMode} color=\"inherit\">\n        {theme.palette.mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n      </IconButton>\n    </Box>\n  );\n}\n\n\n\nfunction App() {\n\n  // const [username, setUsername] = useState<string>(\"\")\n  // const [password, setPassword] = useState<string>(\"\")\n  // const [token, setToken] = useCookies<string>(['tokens'])\n\n  // const postUser = async () => {\n  //   await createUser(username, password).then(resp => setToken('tokens',resp.token))\n  //   console.log(token) \n  // }\n\n  // const theme = useTheme();\n  // const colorMode = React.useContext(ColorModeContext);\n\n  const [mode, setMode] = React.useState<'light' | 'dark'>('light');\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n      },\n    }),\n    [],\n  );\n\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n        },\n      }),\n    [mode],\n  );\n\n\n  return (\n    \n\n    <div className=\"App\">      \n    {/* <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}> </ThemeProvider> */}\n        <BrowserRouter>\n          <ColorModeContext.Provider value={colorMode}>\n            <ThemeProvider theme={theme}> \n            <MyApp />\n            <Route exact path='' component={Login} />\n            <Route exact path='/main' component={DashboardContent} />\n            <Route exact path='/register' component={SignUp} />\n            <Route exact path='/calendar' component={GoogleCalendar} />\n            </ThemeProvider>\n          </ColorModeContext.Provider>\n        </BrowserRouter>\n      {/* </ThemeProvider>\n    </ColorModeContext.Provider> */}\n     \n    </div>\n    \n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}