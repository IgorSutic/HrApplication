{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.work_space_week.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport registerComponent from \"../../../core/component_registrator\";\nimport dateUtils from \"../../../core/utils/date\";\nimport dateLocalization from \"../../../localization/date\";\nimport SchedulerWorkSpaceVertical from \"./ui.scheduler.work_space_vertical\";\nimport { getIntervalDuration } from \"./utils/week\";\nvar WEEK_CLASS = \"dx-scheduler-work-space-week\";\n\nclass SchedulerWorkSpaceWeek extends SchedulerWorkSpaceVertical {\n  _getElementClass() {\n    return WEEK_CLASS;\n  }\n\n  _getRowCount() {\n    return this._getCellCountInDay();\n  }\n\n  _getCellCount() {\n    return 7 * this.option(\"intervalCount\");\n  }\n\n  _getDateByIndex(headerIndex) {\n    var resultDate = new Date(this._firstViewDate);\n    resultDate.setDate(this._firstViewDate.getDate() + headerIndex);\n    return resultDate;\n  }\n\n  _getStartViewDate() {\n    return dateUtils.getFirstWeekDate(this.option(\"startDate\"), this._firstDayOfWeek() || dateLocalization.firstDayOfWeekIndex());\n  }\n\n  _getIntervalDuration() {\n    return getIntervalDuration(this.option(\"intervalCount\"));\n  }\n\n  getPositionShift(timeShift, isAllDay) {\n    if (!isAllDay && this.invoke(\"isAdaptive\") && 0 === this.invoke(\"getMaxAppointmentCountPerCellByType\")) {\n      return {\n        top: 0,\n        left: 0,\n        cellPosition: 0\n      };\n    }\n\n    return super.getPositionShift(timeShift, isAllDay);\n  }\n\n  _isApplyCompactAppointmentOffset() {\n    if (this.invoke(\"isAdaptive\") && 0 === this.invoke(\"getMaxAppointmentCountPerCellByType\")) {\n      return false;\n    }\n\n    return super._isApplyCompactAppointmentOffset();\n  }\n\n}\n\nregisterComponent(\"dxSchedulerWorkSpaceWeek\", SchedulerWorkSpaceWeek);\nexport default SchedulerWorkSpaceWeek;","map":{"version":3,"sources":["/home/igor/node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.work_space_week.js"],"names":["registerComponent","dateUtils","dateLocalization","SchedulerWorkSpaceVertical","getIntervalDuration","WEEK_CLASS","SchedulerWorkSpaceWeek","_getElementClass","_getRowCount","_getCellCountInDay","_getCellCount","option","_getDateByIndex","headerIndex","resultDate","Date","_firstViewDate","setDate","getDate","_getStartViewDate","getFirstWeekDate","_firstDayOfWeek","firstDayOfWeekIndex","_getIntervalDuration","getPositionShift","timeShift","isAllDay","invoke","top","left","cellPosition","_isApplyCompactAppointmentOffset"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,0BAAP,MAAuC,oCAAvC;AACA,SACIC,mBADJ,QAEO,cAFP;AAGA,IAAIC,UAAU,GAAG,8BAAjB;;AACA,MAAMC,sBAAN,SAAqCH,0BAArC,CAAgE;AAC5DI,EAAAA,gBAAgB,GAAG;AACf,WAAOF,UAAP;AACH;;AACDG,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKC,kBAAL,EAAP;AACH;;AACDC,EAAAA,aAAa,GAAG;AACZ,WAAO,IAAI,KAAKC,MAAL,CAAY,eAAZ,CAAX;AACH;;AACDC,EAAAA,eAAe,CAACC,WAAD,EAAc;AACzB,QAAIC,UAAU,GAAG,IAAIC,IAAJ,CAAS,KAAKC,cAAd,CAAjB;AACAF,IAAAA,UAAU,CAACG,OAAX,CAAmB,KAAKD,cAAL,CAAoBE,OAApB,KAAgCL,WAAnD;AACA,WAAOC,UAAP;AACH;;AACDK,EAAAA,iBAAiB,GAAG;AAChB,WAAOlB,SAAS,CAACmB,gBAAV,CAA2B,KAAKT,MAAL,CAAY,WAAZ,CAA3B,EAAqD,KAAKU,eAAL,MAA0BnB,gBAAgB,CAACoB,mBAAjB,EAA/E,CAAP;AACH;;AACDC,EAAAA,oBAAoB,GAAG;AACnB,WAAOnB,mBAAmB,CAAC,KAAKO,MAAL,CAAY,eAAZ,CAAD,CAA1B;AACH;;AACDa,EAAAA,gBAAgB,CAACC,SAAD,EAAYC,QAAZ,EAAsB;AAClC,QAAI,CAACA,QAAD,IAAa,KAAKC,MAAL,CAAY,YAAZ,CAAb,IAA0C,MAAM,KAAKA,MAAL,CAAY,qCAAZ,CAApD,EAAwG;AACpG,aAAO;AACHC,QAAAA,GAAG,EAAE,CADF;AAEHC,QAAAA,IAAI,EAAE,CAFH;AAGHC,QAAAA,YAAY,EAAE;AAHX,OAAP;AAKH;;AACD,WAAO,MAAMN,gBAAN,CAAuBC,SAAvB,EAAkCC,QAAlC,CAAP;AACH;;AACDK,EAAAA,gCAAgC,GAAG;AAC/B,QAAI,KAAKJ,MAAL,CAAY,YAAZ,KAA6B,MAAM,KAAKA,MAAL,CAAY,qCAAZ,CAAvC,EAA2F;AACvF,aAAO,KAAP;AACH;;AACD,WAAO,MAAMI,gCAAN,EAAP;AACH;;AApC2D;;AAsChE/B,iBAAiB,CAAC,0BAAD,EAA6BM,sBAA7B,CAAjB;AACA,eAAeA,sBAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.work_space_week.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport dateUtils from \"../../../core/utils/date\";\r\nimport dateLocalization from \"../../../localization/date\";\r\nimport SchedulerWorkSpaceVertical from \"./ui.scheduler.work_space_vertical\";\r\nimport {\r\n    getIntervalDuration\r\n} from \"./utils/week\";\r\nvar WEEK_CLASS = \"dx-scheduler-work-space-week\";\r\nclass SchedulerWorkSpaceWeek extends SchedulerWorkSpaceVertical {\r\n    _getElementClass() {\r\n        return WEEK_CLASS\r\n    }\r\n    _getRowCount() {\r\n        return this._getCellCountInDay()\r\n    }\r\n    _getCellCount() {\r\n        return 7 * this.option(\"intervalCount\")\r\n    }\r\n    _getDateByIndex(headerIndex) {\r\n        var resultDate = new Date(this._firstViewDate);\r\n        resultDate.setDate(this._firstViewDate.getDate() + headerIndex);\r\n        return resultDate\r\n    }\r\n    _getStartViewDate() {\r\n        return dateUtils.getFirstWeekDate(this.option(\"startDate\"), this._firstDayOfWeek() || dateLocalization.firstDayOfWeekIndex())\r\n    }\r\n    _getIntervalDuration() {\r\n        return getIntervalDuration(this.option(\"intervalCount\"))\r\n    }\r\n    getPositionShift(timeShift, isAllDay) {\r\n        if (!isAllDay && this.invoke(\"isAdaptive\") && 0 === this.invoke(\"getMaxAppointmentCountPerCellByType\")) {\r\n            return {\r\n                top: 0,\r\n                left: 0,\r\n                cellPosition: 0\r\n            }\r\n        }\r\n        return super.getPositionShift(timeShift, isAllDay)\r\n    }\r\n    _isApplyCompactAppointmentOffset() {\r\n        if (this.invoke(\"isAdaptive\") && 0 === this.invoke(\"getMaxAppointmentCountPerCellByType\")) {\r\n            return false\r\n        }\r\n        return super._isApplyCompactAppointmentOffset()\r\n    }\r\n}\r\nregisterComponent(\"dxSchedulerWorkSpaceWeek\", SchedulerWorkSpaceWeek);\r\nexport default SchedulerWorkSpaceWeek;\r\n"]},"metadata":{},"sourceType":"module"}