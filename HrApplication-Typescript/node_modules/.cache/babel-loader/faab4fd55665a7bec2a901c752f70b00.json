{"ast":null,"code":"var _jsxFileName = \"/home/igor/welcomedev-react-starter/src/components/GoogleCalendar.tsx\",\n    _s = $RefreshSig$();\n\n//---------------------------------------------\n// import 'whatwg-fetch';\n// import React from 'react';\n// import Scheduler from 'devextreme-react/scheduler';\n// import CustomStore from 'devextreme/data/custom_store';\n// function getData(_:any, requestOptions:any) {\n//   const PUBLIC_KEY = 'AIzaSyBnNAISIUKe6xdhq1_rjor2rxoI3UlMY7k',\n//     CALENDAR_ID = 'f7jnetm22dsjc3npc2lu3buvu4@group.calendar.google.com';\n//   const dataUrl = [ 'https://www.googleapis.com/calendar/v3/calendars/',\n//     CALENDAR_ID, '/events?key=', PUBLIC_KEY].join('');\n//   return fetch(dataUrl, requestOptions).then(\n//     (response) => response.json()\n//   ).then((data) => data.items);\n// }\n// const dataSource = new CustomStore({\n//   load: (options) => getData(options, { showDeleted: false })\n// });\n// const currentDate = new Date();\n// const views:any = ['day', 'workWeek', 'month'];\n// class GoogleCalendar extends React.Component {\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <div className=\"long-title\">\n//           <h3>QCerris</h3>\n//         </div>\n//         <Scheduler\n//           dataSource={dataSource}\n//           views={views}\n//           defaultCurrentView=\"workWeek\"\n//           defaultCurrentDate={currentDate}\n//           height={500}\n//           startDayHour={7}\n//           editing={false}\n//           showAllDayPanel={false}\n//           startDateExpr=\"start.dateTime\"\n//           endDateExpr=\"end.dateTime\"\n//           textExpr=\"summary\"\n//           timeZone=\"Europe/Belgrade\" />\n//       </React.Fragment>\n//     );\n//   }\n// }\n// export default GoogleCalendar;\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DesktopDatePicker from '@mui/lab/DatePicker';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomInput() {\n  _s();\n\n  const [value, setValue] = React.useState(new Date());\n  const [value1, setValue1] = React.useState(new Date());\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    children: [/*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n      label: \"Custom input\",\n      value: value,\n      onChange: newValue => {\n        setValue(newValue);\n        console.log(\"V1:\", value.getTime());\n      },\n      renderInput: ({\n        inputRef,\n        inputProps,\n        InputProps\n      }) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          ...inputProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this), InputProps === null || InputProps === void 0 ? void 0 : InputProps.endAdornment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n      label: \"Custom input\",\n      value: value1,\n      onChange: newValue1 => {\n        setValue1(newValue1);\n        console.log(\"V2:\", value1.getTime());\n      },\n      renderInput: ({\n        inputRef,\n        inputProps,\n        InputProps\n      }) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          ...inputProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this), InputProps === null || InputProps === void 0 ? void 0 : InputProps.endAdornment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }, this), value.getTime() - value1.getTime() ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"success\",\n      sx: {\n        mt: 1,\n        mb: 2\n      },\n      children: \" Submit \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      children: \" Error \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomInput, \"19+q8IVGRvTonBzXZV8/inIB9zM=\");\n\n_c = CustomInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"sources":["/home/igor/welcomedev-react-starter/src/components/GoogleCalendar.tsx"],"names":["React","Box","AdapterDateFns","LocalizationProvider","DesktopDatePicker","Button","CustomInput","value","setValue","useState","Date","value1","setValue1","newValue","console","log","getTime","inputRef","inputProps","InputProps","display","alignItems","endAdornment","newValue1","mt","mb"],"mappings":"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","sourcesContent":["//---------------------------------------------\n\n// import 'whatwg-fetch';\n// import React from 'react';\n// import Scheduler from 'devextreme-react/scheduler';\n// import CustomStore from 'devextreme/data/custom_store';\n\n// function getData(_:any, requestOptions:any) {\n\n//   const PUBLIC_KEY = 'AIzaSyBnNAISIUKe6xdhq1_rjor2rxoI3UlMY7k',\n//     CALENDAR_ID = 'f7jnetm22dsjc3npc2lu3buvu4@group.calendar.google.com';\n//   const dataUrl = [ 'https://www.googleapis.com/calendar/v3/calendars/',\n//     CALENDAR_ID, '/events?key=', PUBLIC_KEY].join('');\n\n//   return fetch(dataUrl, requestOptions).then(\n//     (response) => response.json()\n//   ).then((data) => data.items);\n// }\n\n// const dataSource = new CustomStore({\n//   load: (options) => getData(options, { showDeleted: false })\n// });\n\n// const currentDate = new Date();\n// const views:any = ['day', 'workWeek', 'month'];\n\n// class GoogleCalendar extends React.Component {\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <div className=\"long-title\">\n//           <h3>QCerris</h3>\n//         </div>\n//         <Scheduler\n//           dataSource={dataSource}\n//           views={views}\n//           defaultCurrentView=\"workWeek\"\n//           defaultCurrentDate={currentDate}\n//           height={500}\n//           startDayHour={7}\n//           editing={false}\n//           showAllDayPanel={false}\n//           startDateExpr=\"start.dateTime\"\n//           endDateExpr=\"end.dateTime\"\n//           textExpr=\"summary\"\n//           timeZone=\"Europe/Belgrade\" />\n//       </React.Fragment>\n\n//     );\n//   }\n// }\n\n// export default GoogleCalendar;\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DesktopDatePicker from '@mui/lab/DatePicker';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nexport default function CustomInput() {\n  const [value, setValue] = React.useState<Date | null | number|any>(new Date());\n  const [value1, setValue1] = React.useState<Date | null | number|any>(new Date());\n\n  return (\n      \n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n        \n                    <DesktopDatePicker\n                        label=\"Custom input\"\n                        value={value}\n                        onChange={(newValue:Date|null|number|any) => {\n                            setValue(newValue);\n                            console.log(\"V1:\",value.getTime())\n                        }}\n                        renderInput={({ inputRef, inputProps, InputProps }) => (\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                            <input ref={inputRef} {...inputProps} />\n                            {InputProps?.endAdornment}\n                        </Box>\n                        )}\n                    />\n               \n                    <DesktopDatePicker\n                        label=\"Custom input\"\n                        value={value1}\n                        onChange={(newValue1:Date|null|number|any) => {\n                            setValue1(newValue1);\n                            console.log(\"V2:\",value1.getTime())\n                        }}\n                        renderInput={({ inputRef, inputProps, InputProps }) => (\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                            <input ref={inputRef} {...inputProps} />\n                            {InputProps?.endAdornment}\n                        </Box>\n                        )}\n                    />\n                \n            {value.getTime()-value1.getTime() ?  \n            <Button variant=\"contained\" color=\"success\" sx={{ mt: 1, mb: 2 }}> Submit </Button> \n            : \n            <Button variant=\"contained\"> Error </Button>}\n            \n       \n    </LocalizationProvider>\n  );\n}"]},"metadata":{},"sourceType":"module"}