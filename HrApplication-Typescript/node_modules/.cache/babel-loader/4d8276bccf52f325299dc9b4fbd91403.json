{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/appointmentAdapter.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"../../core/utils/extend\";\nimport errors from \"../widget/ui.errors\";\nimport { deepExtendArraySafe } from \"../../core/utils/object\";\nimport { getRecurrenceProcessor } from \"./recurrence\";\nvar PROPERTY_NAMES = {\n  startDate: \"startDate\",\n  endDate: \"endDate\",\n  allDay: \"allDay\",\n  text: \"text\",\n  description: \"description\",\n  startDateTimeZone: \"startDateTimeZone\",\n  endDateTimeZone: \"endDateTimeZone\",\n  recurrenceRule: \"recurrenceRule\",\n  recurrenceException: \"recurrenceException\",\n  disabled: \"disabled\"\n};\n\nclass AppointmentAdapter {\n  constructor(rawAppointment, options) {\n    this.rawAppointment = rawAppointment;\n    this.options = options;\n  }\n\n  get duration() {\n    return this.endDate ? this.endDate - this.startDate : 0;\n  }\n\n  get startDate() {\n    var result = this.getField(PROPERTY_NAMES.startDate);\n    return void 0 === result ? result : new Date(result);\n  }\n\n  set startDate(value) {\n    this.setField(PROPERTY_NAMES.startDate, value);\n  }\n\n  get endDate() {\n    var result = this.getField(PROPERTY_NAMES.endDate);\n    return void 0 === result ? result : new Date(result);\n  }\n\n  set endDate(value) {\n    this.setField(PROPERTY_NAMES.endDate, value);\n  }\n\n  get allDay() {\n    return this.getField(PROPERTY_NAMES.allDay);\n  }\n\n  set allDay(value) {\n    this.setField(PROPERTY_NAMES.allDay, value);\n  }\n\n  get text() {\n    return this.getField(PROPERTY_NAMES.text);\n  }\n\n  set text(value) {\n    this.setField(PROPERTY_NAMES.text, value);\n  }\n\n  get description() {\n    return this.getField(PROPERTY_NAMES.description);\n  }\n\n  set description(value) {\n    this.setField(PROPERTY_NAMES.description, value);\n  }\n\n  get startDateTimeZone() {\n    return this.getField(PROPERTY_NAMES.startDateTimeZone);\n  }\n\n  get endDateTimeZone() {\n    return this.getField(PROPERTY_NAMES.endDateTimeZone);\n  }\n\n  get recurrenceRule() {\n    return this.getField(PROPERTY_NAMES.recurrenceRule);\n  }\n\n  set recurrenceRule(value) {\n    this.setField(PROPERTY_NAMES.recurrenceRule, value);\n  }\n\n  get recurrenceException() {\n    return this.getField(PROPERTY_NAMES.recurrenceException);\n  }\n\n  set recurrenceException(value) {\n    this.setField(PROPERTY_NAMES.recurrenceException, value);\n  }\n\n  get disabled() {\n    return !!this.getField(PROPERTY_NAMES.disabled);\n  }\n\n  get timeZoneCalculator() {\n    return this.options.getTimeZoneCalculator();\n  }\n\n  get isRecurrent() {\n    return getRecurrenceProcessor().isValidRecurrenceRule(this.recurrenceRule);\n  }\n\n  getField(property) {\n    return this.options.getField(this.rawAppointment, property);\n  }\n\n  setField(property, value) {\n    return this.options.setField(this.rawAppointment, property, value);\n  }\n\n  calculateStartDate(pathTimeZoneConversion) {\n    if (!this.startDate || isNaN(this.startDate.getTime())) {\n      throw errors.Error(\"E1032\", this.text);\n    }\n\n    return this.calculateDate(this.startDate, this.startDateTimeZone, pathTimeZoneConversion);\n  }\n\n  calculateEndDate(pathTimeZoneConversion) {\n    return this.calculateDate(this.endDate, this.endDateTimeZone, pathTimeZoneConversion);\n  }\n\n  calculateDate(date, appointmentTimeZone, pathTimeZoneConversion) {\n    if (!date) {\n      return;\n    }\n\n    return this.timeZoneCalculator.createDate(date, {\n      appointmentTimeZone: appointmentTimeZone,\n      path: pathTimeZoneConversion\n    });\n  }\n\n  clone() {\n    var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0;\n    var result = new AppointmentAdapter(deepExtendArraySafe({}, this.rawAppointment), this.options);\n\n    if (null !== options && void 0 !== options && options.pathTimeZone) {\n      result.startDate = result.calculateStartDate(options.pathTimeZone);\n      result.endDate = result.calculateEndDate(options.pathTimeZone);\n    }\n\n    return result;\n  }\n\n  source() {\n    var serializeDate = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;\n\n    if (serializeDate) {\n      var clonedAdapter = this.clone();\n      clonedAdapter.startDate = this.startDate;\n      clonedAdapter.endDate = this.endDate;\n      return clonedAdapter.source();\n    }\n\n    return extend({}, this.rawAppointment);\n  }\n\n}\n\nexport default AppointmentAdapter;","map":{"version":3,"sources":["/home/igor/node_modules/devextreme/esm/ui/scheduler/appointmentAdapter.js"],"names":["extend","errors","deepExtendArraySafe","getRecurrenceProcessor","PROPERTY_NAMES","startDate","endDate","allDay","text","description","startDateTimeZone","endDateTimeZone","recurrenceRule","recurrenceException","disabled","AppointmentAdapter","constructor","rawAppointment","options","duration","result","getField","Date","value","setField","timeZoneCalculator","getTimeZoneCalculator","isRecurrent","isValidRecurrenceRule","property","calculateStartDate","pathTimeZoneConversion","isNaN","getTime","Error","calculateDate","calculateEndDate","date","appointmentTimeZone","createDate","path","clone","arguments","length","pathTimeZone","source","serializeDate","clonedAdapter"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/appointmentAdapter.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    deepExtendArraySafe\r\n} from \"../../core/utils/object\";\r\nimport {\r\n    getRecurrenceProcessor\r\n} from \"./recurrence\";\r\nvar PROPERTY_NAMES = {\r\n    startDate: \"startDate\",\r\n    endDate: \"endDate\",\r\n    allDay: \"allDay\",\r\n    text: \"text\",\r\n    description: \"description\",\r\n    startDateTimeZone: \"startDateTimeZone\",\r\n    endDateTimeZone: \"endDateTimeZone\",\r\n    recurrenceRule: \"recurrenceRule\",\r\n    recurrenceException: \"recurrenceException\",\r\n    disabled: \"disabled\"\r\n};\r\nclass AppointmentAdapter {\r\n    constructor(rawAppointment, options) {\r\n        this.rawAppointment = rawAppointment;\r\n        this.options = options\r\n    }\r\n    get duration() {\r\n        return this.endDate ? this.endDate - this.startDate : 0\r\n    }\r\n    get startDate() {\r\n        var result = this.getField(PROPERTY_NAMES.startDate);\r\n        return void 0 === result ? result : new Date(result)\r\n    }\r\n    set startDate(value) {\r\n        this.setField(PROPERTY_NAMES.startDate, value)\r\n    }\r\n    get endDate() {\r\n        var result = this.getField(PROPERTY_NAMES.endDate);\r\n        return void 0 === result ? result : new Date(result)\r\n    }\r\n    set endDate(value) {\r\n        this.setField(PROPERTY_NAMES.endDate, value)\r\n    }\r\n    get allDay() {\r\n        return this.getField(PROPERTY_NAMES.allDay)\r\n    }\r\n    set allDay(value) {\r\n        this.setField(PROPERTY_NAMES.allDay, value)\r\n    }\r\n    get text() {\r\n        return this.getField(PROPERTY_NAMES.text)\r\n    }\r\n    set text(value) {\r\n        this.setField(PROPERTY_NAMES.text, value)\r\n    }\r\n    get description() {\r\n        return this.getField(PROPERTY_NAMES.description)\r\n    }\r\n    set description(value) {\r\n        this.setField(PROPERTY_NAMES.description, value)\r\n    }\r\n    get startDateTimeZone() {\r\n        return this.getField(PROPERTY_NAMES.startDateTimeZone)\r\n    }\r\n    get endDateTimeZone() {\r\n        return this.getField(PROPERTY_NAMES.endDateTimeZone)\r\n    }\r\n    get recurrenceRule() {\r\n        return this.getField(PROPERTY_NAMES.recurrenceRule)\r\n    }\r\n    set recurrenceRule(value) {\r\n        this.setField(PROPERTY_NAMES.recurrenceRule, value)\r\n    }\r\n    get recurrenceException() {\r\n        return this.getField(PROPERTY_NAMES.recurrenceException)\r\n    }\r\n    set recurrenceException(value) {\r\n        this.setField(PROPERTY_NAMES.recurrenceException, value)\r\n    }\r\n    get disabled() {\r\n        return !!this.getField(PROPERTY_NAMES.disabled)\r\n    }\r\n    get timeZoneCalculator() {\r\n        return this.options.getTimeZoneCalculator()\r\n    }\r\n    get isRecurrent() {\r\n        return getRecurrenceProcessor().isValidRecurrenceRule(this.recurrenceRule)\r\n    }\r\n    getField(property) {\r\n        return this.options.getField(this.rawAppointment, property)\r\n    }\r\n    setField(property, value) {\r\n        return this.options.setField(this.rawAppointment, property, value)\r\n    }\r\n    calculateStartDate(pathTimeZoneConversion) {\r\n        if (!this.startDate || isNaN(this.startDate.getTime())) {\r\n            throw errors.Error(\"E1032\", this.text)\r\n        }\r\n        return this.calculateDate(this.startDate, this.startDateTimeZone, pathTimeZoneConversion)\r\n    }\r\n    calculateEndDate(pathTimeZoneConversion) {\r\n        return this.calculateDate(this.endDate, this.endDateTimeZone, pathTimeZoneConversion)\r\n    }\r\n    calculateDate(date, appointmentTimeZone, pathTimeZoneConversion) {\r\n        if (!date) {\r\n            return\r\n        }\r\n        return this.timeZoneCalculator.createDate(date, {\r\n            appointmentTimeZone: appointmentTimeZone,\r\n            path: pathTimeZoneConversion\r\n        })\r\n    }\r\n    clone() {\r\n        var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0;\r\n        var result = new AppointmentAdapter(deepExtendArraySafe({}, this.rawAppointment), this.options);\r\n        if (null !== options && void 0 !== options && options.pathTimeZone) {\r\n            result.startDate = result.calculateStartDate(options.pathTimeZone);\r\n            result.endDate = result.calculateEndDate(options.pathTimeZone)\r\n        }\r\n        return result\r\n    }\r\n    source() {\r\n        var serializeDate = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;\r\n        if (serializeDate) {\r\n            var clonedAdapter = this.clone();\r\n            clonedAdapter.startDate = this.startDate;\r\n            clonedAdapter.endDate = this.endDate;\r\n            return clonedAdapter.source()\r\n        }\r\n        return extend({}, this.rawAppointment)\r\n    }\r\n}\r\nexport default AppointmentAdapter;\r\n"]},"metadata":{},"sourceType":"module"}