{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.timeline_work_week.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport registerComponent from \"../../../core/component_registrator\";\nimport SchedulerTimelineWeek from \"./ui.scheduler.timeline_week\";\nimport dateUtils from \"../../../core/utils/date\";\nimport { getWeekendsCount, isDataOnWeekend, getFirstDayOfWeek, getFirstViewDate } from \"./utils/work_week\";\nvar toMs = dateUtils.dateToMilliseconds;\nvar TIMELINE_CLASS = \"dx-scheduler-timeline-work-week\";\nvar LAST_DAY_WEEK_INDEX = 5;\n\nclass SchedulerTimelineWorkWeek extends SchedulerTimelineWeek {\n  constructor() {\n    super(...arguments);\n    this._getWeekendsCount = getWeekendsCount;\n    this._isSkippedData = isDataOnWeekend;\n  }\n\n  _getElementClass() {\n    return TIMELINE_CLASS;\n  }\n\n  _getWeekDuration() {\n    return 5;\n  }\n\n  _firstDayOfWeek() {\n    return getFirstDayOfWeek(this.option(\"firstDayOfWeek\"));\n  }\n\n  _isSkippedData() {\n    return isDataOnWeekend;\n  }\n\n  _incrementDate(date) {\n    var day = date.getDay();\n\n    if (day === LAST_DAY_WEEK_INDEX) {\n      date.setDate(date.getDate() + 2);\n    }\n\n    super._incrementDate(date);\n  }\n\n  _getOffsetByCount(cellIndex) {\n    var weekendCount = Math.floor(cellIndex / (5 * this._getCellCountInDay()));\n    return toMs(\"day\") * weekendCount * 2;\n  }\n\n  _setFirstViewDate() {\n    this._firstViewDate = getFirstViewDate(this._getViewStartByOptions(), this._firstDayOfWeek());\n\n    this._setStartDayHour(this._firstViewDate);\n  }\n\n}\n\nregisterComponent(\"dxSchedulerTimelineWorkWeek\", SchedulerTimelineWorkWeek);\nexport default SchedulerTimelineWorkWeek;","map":{"version":3,"sources":["/home/igor/node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.timeline_work_week.js"],"names":["registerComponent","SchedulerTimelineWeek","dateUtils","getWeekendsCount","isDataOnWeekend","getFirstDayOfWeek","getFirstViewDate","toMs","dateToMilliseconds","TIMELINE_CLASS","LAST_DAY_WEEK_INDEX","SchedulerTimelineWorkWeek","constructor","arguments","_getWeekendsCount","_isSkippedData","_getElementClass","_getWeekDuration","_firstDayOfWeek","option","_incrementDate","date","day","getDay","setDate","getDate","_getOffsetByCount","cellIndex","weekendCount","Math","floor","_getCellCountInDay","_setFirstViewDate","_firstViewDate","_getViewStartByOptions","_setStartDayHour"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,qBAAP,MAAkC,8BAAlC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SACIC,gBADJ,EAEIC,eAFJ,EAGIC,iBAHJ,EAIIC,gBAJJ,QAKO,mBALP;AAMA,IAAIC,IAAI,GAAGL,SAAS,CAACM,kBAArB;AACA,IAAIC,cAAc,GAAG,iCAArB;AACA,IAAIC,mBAAmB,GAAG,CAA1B;;AACA,MAAMC,yBAAN,SAAwCV,qBAAxC,CAA8D;AAC1DW,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA,SAAKC,iBAAL,GAAyBX,gBAAzB;AACA,SAAKY,cAAL,GAAsBX,eAAtB;AACH;;AACDY,EAAAA,gBAAgB,GAAG;AACf,WAAOP,cAAP;AACH;;AACDQ,EAAAA,gBAAgB,GAAG;AACf,WAAO,CAAP;AACH;;AACDC,EAAAA,eAAe,GAAG;AACd,WAAOb,iBAAiB,CAAC,KAAKc,MAAL,CAAY,gBAAZ,CAAD,CAAxB;AACH;;AACDJ,EAAAA,cAAc,GAAG;AACb,WAAOX,eAAP;AACH;;AACDgB,EAAAA,cAAc,CAACC,IAAD,EAAO;AACjB,QAAIC,GAAG,GAAGD,IAAI,CAACE,MAAL,EAAV;;AACA,QAAID,GAAG,KAAKZ,mBAAZ,EAAiC;AAC7BW,MAAAA,IAAI,CAACG,OAAL,CAAaH,IAAI,CAACI,OAAL,KAAiB,CAA9B;AACH;;AACD,UAAML,cAAN,CAAqBC,IAArB;AACH;;AACDK,EAAAA,iBAAiB,CAACC,SAAD,EAAY;AACzB,QAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWH,SAAS,IAAI,IAAI,KAAKI,kBAAL,EAAR,CAApB,CAAnB;AACA,WAAOxB,IAAI,CAAC,KAAD,CAAJ,GAAcqB,YAAd,GAA6B,CAApC;AACH;;AACDI,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,cAAL,GAAsB3B,gBAAgB,CAAC,KAAK4B,sBAAL,EAAD,EAAgC,KAAKhB,eAAL,EAAhC,CAAtC;;AACA,SAAKiB,gBAAL,CAAsB,KAAKF,cAA3B;AACH;;AAhCyD;;AAkC9DjC,iBAAiB,CAAC,6BAAD,EAAgCW,yBAAhC,CAAjB;AACA,eAAeA,yBAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.timeline_work_week.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport SchedulerTimelineWeek from \"./ui.scheduler.timeline_week\";\r\nimport dateUtils from \"../../../core/utils/date\";\r\nimport {\r\n    getWeekendsCount,\r\n    isDataOnWeekend,\r\n    getFirstDayOfWeek,\r\n    getFirstViewDate\r\n} from \"./utils/work_week\";\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nvar TIMELINE_CLASS = \"dx-scheduler-timeline-work-week\";\r\nvar LAST_DAY_WEEK_INDEX = 5;\r\nclass SchedulerTimelineWorkWeek extends SchedulerTimelineWeek {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._getWeekendsCount = getWeekendsCount;\r\n        this._isSkippedData = isDataOnWeekend\r\n    }\r\n    _getElementClass() {\r\n        return TIMELINE_CLASS\r\n    }\r\n    _getWeekDuration() {\r\n        return 5\r\n    }\r\n    _firstDayOfWeek() {\r\n        return getFirstDayOfWeek(this.option(\"firstDayOfWeek\"))\r\n    }\r\n    _isSkippedData() {\r\n        return isDataOnWeekend\r\n    }\r\n    _incrementDate(date) {\r\n        var day = date.getDay();\r\n        if (day === LAST_DAY_WEEK_INDEX) {\r\n            date.setDate(date.getDate() + 2)\r\n        }\r\n        super._incrementDate(date)\r\n    }\r\n    _getOffsetByCount(cellIndex) {\r\n        var weekendCount = Math.floor(cellIndex / (5 * this._getCellCountInDay()));\r\n        return toMs(\"day\") * weekendCount * 2\r\n    }\r\n    _setFirstViewDate() {\r\n        this._firstViewDate = getFirstViewDate(this._getViewStartByOptions(), this._firstDayOfWeek());\r\n        this._setStartDayHour(this._firstViewDate)\r\n    }\r\n}\r\nregisterComponent(\"dxSchedulerTimelineWorkWeek\", SchedulerTimelineWorkWeek);\r\nexport default SchedulerTimelineWorkWeek;\r\n"]},"metadata":{},"sourceType":"module"}