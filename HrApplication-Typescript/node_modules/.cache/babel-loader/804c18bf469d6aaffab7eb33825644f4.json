{"ast":null,"code":"export {};","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import axios from 'axios';\nimport React from 'react'\nimport { useState } from 'react';\nimport {useGoogleLogin} from 'react-google-login';\nimport {GoogleLogin, GoogleLogout} from 'react-google-login';\n\n// const clientId = '930716669637-27uerudri95vjbfrjqbe5s8dngf1pdf2.apps.googleusercontent.com'\n\n// const GoogleLogin : React.FC = () => {\n\n//     const onSuccess = (res:any) => {\n//         console.log(\"Login success: currentUser: \", res.profileObj);\n//         refreshTokenSetup(res);\n//     }\n\n//     const onFailure = (res:any) => {\n//         console.log(\"Login failed: res:\", res)\n//     }\n\n//     const {signIn } = useGoogleLogin({\n//         onSuccess,\n//         onFailure,\n//         clientId,\n//         isSignedIn: true,\n//         accessType: 'offline'\n//     });\n\n//     return (\n//         <div>\n//             <button onClick={signIn} className=\"button\" >\n//                 <img src=\"static/images/google.svg\" alt=\"google login\" className=\"icon\"></img>\n//                 <span className=\"buttonText\">Sign in with Google</span>\n//             </button>\n//         </div>\n//     )\n// }\n\n// const LoginG : React.FC = () => {\n\n//     const [data, setData] = useState({\n//         isAuthenticated : false,\n//         token : '',\n//         user : null\n//     })\n//     const {isAuthenticated, user} = data;\n\n\n//     const logout = () => {\n//         setData({\n//             ...data, token: \"\", user: null, isAuthenticated: false\n//         })\n//     };\n\n//     const onFailure = (error :any) => {\n//         alert(\"GRESKAAAAA\");\n//     };\n\n//     const responseGoogle = (response : any) => {\n\n//         let tokenBlob = new Blob([\n//             JSON.stringify({\n//                 access_token: response.accessToken  \n//             }, null, 2)\n//         ]);\n\n//         let config = {\n//             headers: {\n//             'Content-Type': 'application/json'\n//             }\n//         };\n\n  \n//         axios.post('http://127.0.0.1:8000/auth/login/google-oauth2/', tokenBlob, config)\n//         .then(response => {\n//             const token = response.headers;\n//             if (token){\n//                 setData({\n//                     ...data, token: token, isAuthenticated: true\n//                 });\n//             }\n//         });\n//     };\n\n//     let content = !! isAuthenticated ?\n//         (\n//             <div>\n//                 <p>Authenticated</p>\n//                 {/* <div>\n//                     {user && user.email}\n//                 </div> */}\n//                 {/* <div>\n//                     <GoogleLogout clientId={config.GOOGLE_CLIENT_ID}\n//                                   buttonText=\"Logout\"\n//                                   onLogoutSuccess={logout}\n//                     />\n//                 </div> */}\n//             </div>\n//         ) :\n//         (\n//             <div>\n//                 <GoogleLogin\n//                     clientId= \"930716669637-27uerudri95vjbfrjqbe5s8dngf1pdf2.apps.googleusercontent.com\"\n//                     buttonText=\"Login\"\n//                     onSuccess={responseGoogle}\n//                     onFailure={onFailure}\n//                     isSignedIn\n//                 />\n\n//             </div>\n//         );\n\n//         return (\n//             <div className=\"App\">\n//                 {content}\n//             </div>\n//     );\n// }\n\n// export default LoginG;\n\n// function refreshTokenSetup(res: any) {\n//     throw new Error('Function not implemented.AAAA');\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}