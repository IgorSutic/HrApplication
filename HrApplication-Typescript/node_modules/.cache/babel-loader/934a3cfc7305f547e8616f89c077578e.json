{"ast":null,"code":"var _jsxFileName = \"/home/igor/welcomedev-react-starter/src/components/GoogleLogin.tsx\";\n// import axios from 'axios';\n// import React from 'react'\n// import { useState } from 'react';\n// import {useGoogleLogin} from 'react-google-login';\n// import {GoogleLogin, GoogleLogout} from 'react-google-login';\n// const clientId = '930716669637-27uerudri95vjbfrjqbe5s8dngf1pdf2.apps.googleusercontent.com'\n// const GoogleLogin : React.FC = () => {\n//     const onSuccess = (res:any) => {\n//         console.log(\"Login success: currentUser: \", res.profileObj);\n//         refreshTokenSetup(res);\n//     }\n//     const onFailure = (res:any) => {\n//         console.log(\"Login failed: res:\", res)\n//     }\n//     const {signIn } = useGoogleLogin({\n//         onSuccess,\n//         onFailure,\n//         clientId,\n//         isSignedIn: true,\n//         accessType: 'offline'\n//     });\n//     return (\n//         <div>\n//             <button onClick={signIn} className=\"button\" >\n//                 <img src=\"static/images/google.svg\" alt=\"google login\" className=\"icon\"></img>\n//                 <span className=\"buttonText\">Sign in with Google</span>\n//             </button>\n//         </div>\n//     )\n// }\n// const LoginG : React.FC = () => {\n//     const [data, setData] = useState({\n//         isAuthenticated : false,\n//         token : '',\n//         user : null\n//     })\n//     const {isAuthenticated, user} = data;\n//     const logout = () => {\n//         setData({\n//             ...data, token: \"\", user: null, isAuthenticated: false\n//         })\n//     };\n//     const onFailure = (error :any) => {\n//         alert(\"GRESKAAAAA\");\n//     };\n//     const responseGoogle = (response : any) => {\n//         let tokenBlob = new Blob([\n//             JSON.stringify({\n//                 access_token: response.accessToken  \n//             }, null, 2)\n//         ]);\n//         let config = {\n//             headers: {\n//             'Content-Type': 'application/json'\n//             }\n//         };\n//         axios.post('http://127.0.0.1:8000/auth/login/google-oauth2/', tokenBlob, config)\n//         .then(response => {\n//             const token = response.headers;\n//             if (token){\n//                 setData({\n//                     ...data, token: token, isAuthenticated: true\n//                 });\n//             }\n//         });\n//     };\n//     let content = !! isAuthenticated ?\n//         (\n//             <div>\n//                 <p>Authenticated</p>\n//                 {/* <div>\n//                     {user && user.email}\n//                 </div> */}\n//                 {/* <div>\n//                     <GoogleLogout clientId={config.GOOGLE_CLIENT_ID}\n//                                   buttonText=\"Logout\"\n//                                   onLogoutSuccess={logout}\n//                     />\n//                 </div> */}\n//             </div>\n//         ) :\n//         (\n//             <div>\n//                 <GoogleLogin\n//                     clientId= \"930716669637-27uerudri95vjbfrjqbe5s8dngf1pdf2.apps.googleusercontent.com\"\n//                     buttonText=\"Login\"\n//                     onSuccess={responseGoogle}\n//                     onFailure={onFailure}\n//                     isSignedIn\n//                 />\n//             </div>\n//         );\n//         return (\n//             <div className=\"App\">\n//                 {content}\n//             </div>\n//     );\n// }\n// export default LoginG;\n// function refreshTokenSetup(res: any) {\n//     throw new Error('Function not implemented.AAAA');\n// }\nimport React, { Component } from 'react'; // import FacebookLogin from 'react-facebook-login';\n\nimport GoogleLogin from 'react-google-login'; // import fbLogin from \"./services/fbLogin\"\n\nimport googleLogin from './services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginG extends Component {\n  render() {\n    // const responseFacebook = async (response) => {\n    //   let fbResponse  = await fbLogin(response.accessToken)\n    //   console.log(fbResponse);\n    //   console.log(response);\n    // }\n    const responseGoogle = async response => {\n      let googleResponse = await googleLogin(response.accessToken);\n      console.log(googleResponse);\n      console.log(response);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: \"<GOOGLE CLIENT ID>\",\n        buttonText: \"LOGIN WITH GOOGLE\",\n        onSuccess: responseGoogle,\n        onFailure: responseGoogle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LoginG;","map":{"version":3,"sources":["/home/igor/welcomedev-react-starter/src/components/GoogleLogin.tsx"],"names":["React","Component","GoogleLogin","googleLogin","LoginG","render","responseGoogle","response","googleResponse","accessToken","console","log"],"mappingsgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,WAAP,MAAwB,oBAAxB,C,CACA;;AAEA,OAAOC,WAAP,MAAwB,YAAxB;;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAE7BI,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AAEA,UAAMC,cAAc,GAAG,MAAMC,QAAN,IAAyB;AAC9C,UAAIC,cAAc,GAAI,MAAML,WAAW,CAACI,QAAQ,CAACE,WAAV,CAAvC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD,KAJD;;AAMA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BAME;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE,QAAC,WAAD;AACE,QAAA,QAAQ,EAAC,oBADX;AAEE,QAAA,UAAU,EAAC,mBAFb;AAGE,QAAA,SAAS,EAAED,cAHb;AAIE,QAAA,SAAS,EAAEA;AAJb;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AAnC4B;;AAsC/B,eAAeF,MAAf","sourcesContent":["// import axios from 'axios';\n// import React from 'react'\n// import { useState } from 'react';\n// import {useGoogleLogin} from 'react-google-login';\n// import {GoogleLogin, GoogleLogout} from 'react-google-login';\n\n// const clientId = '930716669637-27uerudri95vjbfrjqbe5s8dngf1pdf2.apps.googleusercontent.com'\n\n// const GoogleLogin : React.FC = () => {\n\n//     const onSuccess = (res:any) => {\n//         console.log(\"Login success: currentUser: \", res.profileObj);\n//         refreshTokenSetup(res);\n//     }\n\n//     const onFailure = (res:any) => {\n//         console.log(\"Login failed: res:\", res)\n//     }\n\n//     const {signIn } = useGoogleLogin({\n//         onSuccess,\n//         onFailure,\n//         clientId,\n//         isSignedIn: true,\n//         accessType: 'offline'\n//     });\n\n//     return (\n//         <div>\n//             <button onClick={signIn} className=\"button\" >\n//                 <img src=\"static/images/google.svg\" alt=\"google login\" className=\"icon\"></img>\n//                 <span className=\"buttonText\">Sign in with Google</span>\n//             </button>\n//         </div>\n//     )\n// }\n\n// const LoginG : React.FC = () => {\n\n//     const [data, setData] = useState({\n//         isAuthenticated : false,\n//         token : '',\n//         user : null\n//     })\n//     const {isAuthenticated, user} = data;\n\n\n//     const logout = () => {\n//         setData({\n//             ...data, token: \"\", user: null, isAuthenticated: false\n//         })\n//     };\n\n//     const onFailure = (error :any) => {\n//         alert(\"GRESKAAAAA\");\n//     };\n\n//     const responseGoogle = (response : any) => {\n\n//         let tokenBlob = new Blob([\n//             JSON.stringify({\n//                 access_token: response.accessToken  \n//             }, null, 2)\n//         ]);\n\n//         let config = {\n//             headers: {\n//             'Content-Type': 'application/json'\n//             }\n//         };\n\n  \n//         axios.post('http://127.0.0.1:8000/auth/login/google-oauth2/', tokenBlob, config)\n//         .then(response => {\n//             const token = response.headers;\n//             if (token){\n//                 setData({\n//                     ...data, token: token, isAuthenticated: true\n//                 });\n//             }\n//         });\n//     };\n\n//     let content = !! isAuthenticated ?\n//         (\n//             <div>\n//                 <p>Authenticated</p>\n//                 {/* <div>\n//                     {user && user.email}\n//                 </div> */}\n//                 {/* <div>\n//                     <GoogleLogout clientId={config.GOOGLE_CLIENT_ID}\n//                                   buttonText=\"Logout\"\n//                                   onLogoutSuccess={logout}\n//                     />\n//                 </div> */}\n//             </div>\n//         ) :\n//         (\n//             <div>\n//                 <GoogleLogin\n//                     clientId= \"930716669637-27uerudri95vjbfrjqbe5s8dngf1pdf2.apps.googleusercontent.com\"\n//                     buttonText=\"Login\"\n//                     onSuccess={responseGoogle}\n//                     onFailure={onFailure}\n//                     isSignedIn\n//                 />\n\n//             </div>\n//         );\n\n//         return (\n//             <div className=\"App\">\n//                 {content}\n//             </div>\n//     );\n// }\n\n// export default LoginG;\n\n// function refreshTokenSetup(res: any) {\n//     throw new Error('Function not implemented.AAAA');\n// }\n\n\nimport React, { Component } from 'react';\n// import FacebookLogin from 'react-facebook-login';\nimport GoogleLogin from 'react-google-login';\n// import fbLogin from \"./services/fbLogin\"\n\nimport googleLogin from './services';\n\nclass LoginG extends Component {\n\n  render() {\n    // const responseFacebook = async (response) => {\n    //   let fbResponse  = await fbLogin(response.accessToken)\n    //   console.log(fbResponse);\n    //   console.log(response);\n    // }\n\n    const responseGoogle = async(response : any) => {\n      let googleResponse  = await googleLogin(response.accessToken)\n      console.log(googleResponse);\n      console.log(response);\n    }\n\n    return (\n      <div className=\"App\">\n        {/* <FacebookLogin\n          appId=\"<FACEBOOK APP ID>\"\n          fields=\"name,email,picture\"\n          callback={responseFacebook}\n        /> */}\n        <br />\n        <br />\n\n\n        <GoogleLogin\n          clientId=\"<GOOGLE CLIENT ID>\"\n          buttonText=\"LOGIN WITH GOOGLE\"\n          onSuccess={responseGoogle}\n          onFailure={responseGoogle}\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default LoginG;"]},"metadata":{},"sourceType":"module"}