{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/virtual_selection_state.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dateUtils from \"../../../core/utils/date\";\nexport default class VirtualSelectionState {\n  constructor(viewDataProvider) {\n    this._viewDataProvider = viewDataProvider;\n    this._focusedCell = null;\n    this._selectedCells = null;\n    this._firstSelectedCell = null;\n  }\n\n  get viewDataProvider() {\n    return this._viewDataProvider;\n  }\n\n  get focusedCell() {\n    return this._focusedCell;\n  }\n\n  setFocusedCell(rowIndex, columnIndex, isAllDay) {\n    if (rowIndex >= 0) {\n      var cell = this._viewDataProvider.getCellData(rowIndex, columnIndex, isAllDay);\n\n      this._focusedCell = cell;\n    }\n  }\n\n  getFocusedCell() {\n    var {\n      focusedCell: focusedCell\n    } = this;\n\n    if (!focusedCell) {\n      return;\n    }\n\n    var {\n      groupIndex: groupIndex,\n      startDate: startDate,\n      allDay: allDay\n    } = focusedCell;\n    var cellInfo = {\n      groupIndex: groupIndex,\n      startDate: startDate,\n      isAllDay: allDay,\n      index: focusedCell.index\n    };\n    var cellPosition = this.viewDataProvider.findCellPositionInMap(cellInfo);\n    return {\n      coordinates: cellPosition,\n      cellData: focusedCell\n    };\n  }\n\n  setSelectedCells(lastCellCoordinates) {\n    var firstCellCoordinates = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0;\n    var viewDataProvider = this._viewDataProvider;\n    var {\n      rowIndex: lastRowIndex,\n      columnIndex: lastColumnIndex,\n      allDay: isLastCellAllDay\n    } = lastCellCoordinates;\n\n    if (lastRowIndex < 0) {\n      return;\n    }\n\n    var firstCell = firstCellCoordinates ? viewDataProvider.getCellData(firstCellCoordinates.rowIndex, firstCellCoordinates.columnIndex, firstCellCoordinates.allDay) : this._firstSelectedCell;\n    var lastCell = viewDataProvider.getCellData(lastRowIndex, lastColumnIndex, isLastCellAllDay);\n    this._firstSelectedCell = firstCell;\n\n    if (firstCell.startDate.getTime() > lastCell.startDate.getTime()) {\n      [firstCell, lastCell] = [lastCell, firstCell];\n    }\n\n    var {\n      startDate: firstStartDate,\n      groupIndex: firstGroupIndex,\n      index: firstCellIndex\n    } = firstCell;\n    var {\n      startDate: lastStartDate,\n      index: lastCellIndex\n    } = lastCell;\n    var cells = viewDataProvider.getCellsByGroupIndexAndAllDay(firstGroupIndex, isLastCellAllDay);\n    var filteredCells = cells.reduce((selectedCells, cellsRow) => {\n      var filterData = {\n        firstDate: firstStartDate,\n        lastDate: lastStartDate,\n        firstIndex: firstCellIndex,\n        lastIndex: lastCellIndex\n      };\n\n      var filteredRow = this._filterCellsByDateAndIndex(cellsRow, filterData);\n\n      selectedCells.push(...filteredRow);\n      return selectedCells;\n    }, []);\n    this._selectedCells = filteredCells.sort((firstCell, secondCell) => firstCell.startDate.getTime() - secondCell.startDate.getTime());\n  }\n\n  getSelectedCells() {\n    return this._selectedCells;\n  }\n\n  releaseSelectedAndFocusedCells() {\n    this.releaseSelectedCells();\n    this.releaseFocusedCell();\n  }\n\n  releaseSelectedCells() {\n    this._selectedCells = null;\n    this._firstSelectedCell = null;\n  }\n\n  releaseFocusedCell() {\n    this._focusedCell = null;\n  }\n\n  isValidFocusedCell(nextFocusedCellData) {\n    var focusedCell = this._focusedCell;\n\n    if (!focusedCell) {\n      return true;\n    }\n\n    var {\n      groupIndex: groupIndex,\n      allDay: allDay\n    } = focusedCell;\n    var {\n      groupIndex: nextGroupIndex,\n      allDay: nextAllDay\n    } = nextFocusedCellData;\n    return groupIndex === nextGroupIndex && allDay === nextAllDay;\n  }\n\n  _filterCellsByDateAndIndex(cellsRow, filterData) {\n    var {\n      firstDate: firstDate,\n      lastDate: lastDate,\n      firstIndex: firstIndex,\n      lastIndex: lastIndex\n    } = filterData;\n    var firstDay = dateUtils.trimTime(firstDate).getTime();\n    var lastDay = dateUtils.trimTime(lastDate).getTime();\n    return cellsRow.filter(cell => {\n      var {\n        startDate: startDate,\n        index: index\n      } = cell;\n      var day = dateUtils.trimTime(startDate).getTime();\n      var daysAndIndexes = {\n        day: day,\n        index: index,\n        firstDay: firstDay,\n        firstIndex: firstIndex,\n        lastDay: lastDay,\n        lastIndex: lastIndex\n      };\n      return this._compareCellsByDateAndIndex(daysAndIndexes);\n    });\n  }\n\n  _compareCellsByDateAndIndex(daysAndIndexes) {\n    var {\n      day: day,\n      index: index,\n      firstDay: firstDay,\n      firstIndex: firstIndex,\n      lastDay: lastDay,\n      lastIndex: lastIndex\n    } = daysAndIndexes;\n\n    if (firstDay === lastDay) {\n      var validFirstIndex = firstIndex;\n      var validLastIndex = lastIndex;\n\n      if (validFirstIndex > validLastIndex) {\n        [validFirstIndex, validLastIndex] = [validLastIndex, validFirstIndex];\n      }\n\n      return firstDay === day && index >= validFirstIndex && index <= validLastIndex;\n    } else {\n      return day === firstDay && index >= firstIndex || day === lastDay && index <= lastIndex || firstDay < day && day < lastDay;\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/igor/node_modules/devextreme/esm/ui/scheduler/workspaces/virtual_selection_state.js"],"names":["dateUtils","VirtualSelectionState","constructor","viewDataProvider","_viewDataProvider","_focusedCell","_selectedCells","_firstSelectedCell","focusedCell","setFocusedCell","rowIndex","columnIndex","isAllDay","cell","getCellData","getFocusedCell","groupIndex","startDate","allDay","cellInfo","index","cellPosition","findCellPositionInMap","coordinates","cellData","setSelectedCells","lastCellCoordinates","firstCellCoordinates","arguments","length","lastRowIndex","lastColumnIndex","isLastCellAllDay","firstCell","lastCell","getTime","firstStartDate","firstGroupIndex","firstCellIndex","lastStartDate","lastCellIndex","cells","getCellsByGroupIndexAndAllDay","filteredCells","reduce","selectedCells","cellsRow","filterData","firstDate","lastDate","firstIndex","lastIndex","filteredRow","_filterCellsByDateAndIndex","push","sort","secondCell","getSelectedCells","releaseSelectedAndFocusedCells","releaseSelectedCells","releaseFocusedCell","isValidFocusedCell","nextFocusedCellData","nextGroupIndex","nextAllDay","firstDay","trimTime","lastDay","filter","day","daysAndIndexes","_compareCellsByDateAndIndex","validFirstIndex","validLastIndex"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/virtual_selection_state.js)\r\n * Version: 21.1.6\r\n * Build date: Mon Sep 27 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport dateUtils from \"../../../core/utils/date\";\r\nexport default class VirtualSelectionState {\r\n    constructor(viewDataProvider) {\r\n        this._viewDataProvider = viewDataProvider;\r\n        this._focusedCell = null;\r\n        this._selectedCells = null;\r\n        this._firstSelectedCell = null\r\n    }\r\n    get viewDataProvider() {\r\n        return this._viewDataProvider\r\n    }\r\n    get focusedCell() {\r\n        return this._focusedCell\r\n    }\r\n    setFocusedCell(rowIndex, columnIndex, isAllDay) {\r\n        if (rowIndex >= 0) {\r\n            var cell = this._viewDataProvider.getCellData(rowIndex, columnIndex, isAllDay);\r\n            this._focusedCell = cell\r\n        }\r\n    }\r\n    getFocusedCell() {\r\n        var {\r\n            focusedCell: focusedCell\r\n        } = this;\r\n        if (!focusedCell) {\r\n            return\r\n        }\r\n        var {\r\n            groupIndex: groupIndex,\r\n            startDate: startDate,\r\n            allDay: allDay\r\n        } = focusedCell;\r\n        var cellInfo = {\r\n            groupIndex: groupIndex,\r\n            startDate: startDate,\r\n            isAllDay: allDay,\r\n            index: focusedCell.index\r\n        };\r\n        var cellPosition = this.viewDataProvider.findCellPositionInMap(cellInfo);\r\n        return {\r\n            coordinates: cellPosition,\r\n            cellData: focusedCell\r\n        }\r\n    }\r\n    setSelectedCells(lastCellCoordinates) {\r\n        var firstCellCoordinates = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0;\r\n        var viewDataProvider = this._viewDataProvider;\r\n        var {\r\n            rowIndex: lastRowIndex,\r\n            columnIndex: lastColumnIndex,\r\n            allDay: isLastCellAllDay\r\n        } = lastCellCoordinates;\r\n        if (lastRowIndex < 0) {\r\n            return\r\n        }\r\n        var firstCell = firstCellCoordinates ? viewDataProvider.getCellData(firstCellCoordinates.rowIndex, firstCellCoordinates.columnIndex, firstCellCoordinates.allDay) : this._firstSelectedCell;\r\n        var lastCell = viewDataProvider.getCellData(lastRowIndex, lastColumnIndex, isLastCellAllDay);\r\n        this._firstSelectedCell = firstCell;\r\n        if (firstCell.startDate.getTime() > lastCell.startDate.getTime()) {\r\n            [firstCell, lastCell] = [lastCell, firstCell]\r\n        }\r\n        var {\r\n            startDate: firstStartDate,\r\n            groupIndex: firstGroupIndex,\r\n            index: firstCellIndex\r\n        } = firstCell;\r\n        var {\r\n            startDate: lastStartDate,\r\n            index: lastCellIndex\r\n        } = lastCell;\r\n        var cells = viewDataProvider.getCellsByGroupIndexAndAllDay(firstGroupIndex, isLastCellAllDay);\r\n        var filteredCells = cells.reduce((selectedCells, cellsRow) => {\r\n            var filterData = {\r\n                firstDate: firstStartDate,\r\n                lastDate: lastStartDate,\r\n                firstIndex: firstCellIndex,\r\n                lastIndex: lastCellIndex\r\n            };\r\n            var filteredRow = this._filterCellsByDateAndIndex(cellsRow, filterData);\r\n            selectedCells.push(...filteredRow);\r\n            return selectedCells\r\n        }, []);\r\n        this._selectedCells = filteredCells.sort((firstCell, secondCell) => firstCell.startDate.getTime() - secondCell.startDate.getTime())\r\n    }\r\n    getSelectedCells() {\r\n        return this._selectedCells\r\n    }\r\n    releaseSelectedAndFocusedCells() {\r\n        this.releaseSelectedCells();\r\n        this.releaseFocusedCell()\r\n    }\r\n    releaseSelectedCells() {\r\n        this._selectedCells = null;\r\n        this._firstSelectedCell = null\r\n    }\r\n    releaseFocusedCell() {\r\n        this._focusedCell = null\r\n    }\r\n    isValidFocusedCell(nextFocusedCellData) {\r\n        var focusedCell = this._focusedCell;\r\n        if (!focusedCell) {\r\n            return true\r\n        }\r\n        var {\r\n            groupIndex: groupIndex,\r\n            allDay: allDay\r\n        } = focusedCell;\r\n        var {\r\n            groupIndex: nextGroupIndex,\r\n            allDay: nextAllDay\r\n        } = nextFocusedCellData;\r\n        return groupIndex === nextGroupIndex && allDay === nextAllDay\r\n    }\r\n    _filterCellsByDateAndIndex(cellsRow, filterData) {\r\n        var {\r\n            firstDate: firstDate,\r\n            lastDate: lastDate,\r\n            firstIndex: firstIndex,\r\n            lastIndex: lastIndex\r\n        } = filterData;\r\n        var firstDay = dateUtils.trimTime(firstDate).getTime();\r\n        var lastDay = dateUtils.trimTime(lastDate).getTime();\r\n        return cellsRow.filter(cell => {\r\n            var {\r\n                startDate: startDate,\r\n                index: index\r\n            } = cell;\r\n            var day = dateUtils.trimTime(startDate).getTime();\r\n            var daysAndIndexes = {\r\n                day: day,\r\n                index: index,\r\n                firstDay: firstDay,\r\n                firstIndex: firstIndex,\r\n                lastDay: lastDay,\r\n                lastIndex: lastIndex\r\n            };\r\n            return this._compareCellsByDateAndIndex(daysAndIndexes)\r\n        })\r\n    }\r\n    _compareCellsByDateAndIndex(daysAndIndexes) {\r\n        var {\r\n            day: day,\r\n            index: index,\r\n            firstDay: firstDay,\r\n            firstIndex: firstIndex,\r\n            lastDay: lastDay,\r\n            lastIndex: lastIndex\r\n        } = daysAndIndexes;\r\n        if (firstDay === lastDay) {\r\n            var validFirstIndex = firstIndex;\r\n            var validLastIndex = lastIndex;\r\n            if (validFirstIndex > validLastIndex) {\r\n                [validFirstIndex, validLastIndex] = [validLastIndex, validFirstIndex]\r\n            }\r\n            return firstDay === day && index >= validFirstIndex && index <= validLastIndex\r\n        } else {\r\n            return day === firstDay && index >= firstIndex || day === lastDay && index <= lastIndex || firstDay < day && day < lastDay\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}